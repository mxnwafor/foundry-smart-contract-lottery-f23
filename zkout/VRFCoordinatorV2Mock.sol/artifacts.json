{
  "contracts": {
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
      "VRFCoordinatorV2Interface": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              }
            ],
            "name": "acceptSubscriptionOwnerTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "consumer",
                "type": "address"
              }
            ],
            "name": "addConsumer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "cancelSubscription",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "createSubscription",
            "outputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getRequestConfig",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              },
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              },
              {
                "internalType": "bytes32[]",
                "name": "",
                "type": "bytes32[]"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              }
            ],
            "name": "getSubscription",
            "outputs": [
              {
                "internalType": "uint96",
                "name": "balance",
                "type": "uint96"
              },
              {
                "internalType": "uint64",
                "name": "reqCount",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address[]",
                "name": "consumers",
                "type": "address[]"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              }
            ],
            "name": "pendingRequestExists",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "consumer",
                "type": "address"
              }
            ],
            "name": "removeConsumer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "keyHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "internalType": "uint16",
                "name": "minimumRequestConfirmations",
                "type": "uint16"
              },
              {
                "internalType": "uint32",
                "name": "callbackGasLimit",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "numWords",
                "type": "uint32"
              }
            ],
            "name": "requestRandomWords",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "requestId",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "name": "requestSubscriptionOwnerTransfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "acceptSubscriptionOwnerTransfer(uint64)": "82359740",
            "addConsumer(uint64,address)": "7341c10c",
            "cancelSubscription(uint64,address)": "d7ae1d30",
            "createSubscription()": "a21a23e4",
            "getRequestConfig()": "00012291",
            "getSubscription(uint64)": "a47c7696",
            "pendingRequestExists(uint64)": "e82ad7d4",
            "removeConsumer(uint64,address)": "9f87fad7",
            "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
            "requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol": {
      "VRFCoordinatorV2Mock": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "uint96",
                "name": "_baseFee",
                "type": "uint96"
              },
              {
                "internalType": "uint96",
                "name": "_gasPriceLink",
                "type": "uint96"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [],
            "name": "InsufficientBalance",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidConsumer",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidRandomWords",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "InvalidSubscription",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "MustBeSubOwner",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "Reentrant",
            "type": "error"
          },
          {
            "inputs": [],
            "name": "TooManyConsumers",
            "type": "error"
          },
          {
            "anonymous": false,
            "inputs": [],
            "name": "ConfigSet",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "consumer",
                "type": "address"
              }
            ],
            "name": "ConsumerAdded",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "consumer",
                "type": "address"
              }
            ],
            "name": "ConsumerRemoved",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint256",
                "name": "requestId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "outputSeed",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint96",
                "name": "payment",
                "type": "uint96"
              },
              {
                "indexed": false,
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "name": "RandomWordsFulfilled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "bytes32",
                "name": "keyHash",
                "type": "bytes32"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "requestId",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "preSeed",
                "type": "uint256"
              },
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "uint16",
                "name": "minimumRequestConfirmations",
                "type": "uint16"
              },
              {
                "indexed": false,
                "internalType": "uint32",
                "name": "callbackGasLimit",
                "type": "uint32"
              },
              {
                "indexed": false,
                "internalType": "uint32",
                "name": "numWords",
                "type": "uint32"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "sender",
                "type": "address"
              }
            ],
            "name": "RandomWordsRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "SubscriptionCanceled",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "SubscriptionCreated",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "uint64",
                "name": "subId",
                "type": "uint64"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "oldBalance",
                "type": "uint256"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "newBalance",
                "type": "uint256"
              }
            ],
            "name": "SubscriptionFunded",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "BASE_FEE",
            "outputs": [
              {
                "internalType": "uint96",
                "name": "",
                "type": "uint96"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "GAS_PRICE_LINK",
            "outputs": [
              {
                "internalType": "uint96",
                "name": "",
                "type": "uint96"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "MAX_CONSUMERS",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "",
                "type": "uint64"
              }
            ],
            "name": "acceptSubscriptionOwnerTransfer",
            "outputs": [],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "_consumer",
                "type": "address"
              }
            ],
            "name": "addConsumer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "_to",
                "type": "address"
              }
            ],
            "name": "cancelSubscription",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "_consumer",
                "type": "address"
              }
            ],
            "name": "consumerIsAdded",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "createSubscription",
            "outputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_requestId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "_consumer",
                "type": "address"
              }
            ],
            "name": "fulfillRandomWords",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "_requestId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "_consumer",
                "type": "address"
              },
              {
                "internalType": "uint256[]",
                "name": "_words",
                "type": "uint256[]"
              }
            ],
            "name": "fulfillRandomWordsWithOverride",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "uint96",
                "name": "_amount",
                "type": "uint96"
              }
            ],
            "name": "fundSubscription",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getConfig",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "minimumRequestConfirmations",
                "type": "uint16"
              },
              {
                "internalType": "uint32",
                "name": "maxGasLimit",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "stalenessSeconds",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "gasAfterPaymentCalculation",
                "type": "uint32"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getFallbackWeiPerUnitLink",
            "outputs": [
              {
                "internalType": "int256",
                "name": "",
                "type": "int256"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getFeeConfig",
            "outputs": [
              {
                "internalType": "uint32",
                "name": "fulfillmentFlatFeeLinkPPMTier1",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "fulfillmentFlatFeeLinkPPMTier2",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "fulfillmentFlatFeeLinkPPMTier3",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "fulfillmentFlatFeeLinkPPMTier4",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "fulfillmentFlatFeeLinkPPMTier5",
                "type": "uint32"
              },
              {
                "internalType": "uint24",
                "name": "reqsForTier2",
                "type": "uint24"
              },
              {
                "internalType": "uint24",
                "name": "reqsForTier3",
                "type": "uint24"
              },
              {
                "internalType": "uint24",
                "name": "reqsForTier4",
                "type": "uint24"
              },
              {
                "internalType": "uint24",
                "name": "reqsForTier5",
                "type": "uint24"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "getRequestConfig",
            "outputs": [
              {
                "internalType": "uint16",
                "name": "",
                "type": "uint16"
              },
              {
                "internalType": "uint32",
                "name": "",
                "type": "uint32"
              },
              {
                "internalType": "bytes32[]",
                "name": "",
                "type": "bytes32[]"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              }
            ],
            "name": "getSubscription",
            "outputs": [
              {
                "internalType": "uint96",
                "name": "balance",
                "type": "uint96"
              },
              {
                "internalType": "uint64",
                "name": "reqCount",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address[]",
                "name": "consumers",
                "type": "address[]"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "",
                "type": "uint64"
              }
            ],
            "name": "pendingRequestExists",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "_consumer",
                "type": "address"
              }
            ],
            "name": "removeConsumer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "bytes32",
                "name": "_keyHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "_subId",
                "type": "uint64"
              },
              {
                "internalType": "uint16",
                "name": "_minimumRequestConfirmations",
                "type": "uint16"
              },
              {
                "internalType": "uint32",
                "name": "_callbackGasLimit",
                "type": "uint32"
              },
              {
                "internalType": "uint32",
                "name": "_numWords",
                "type": "uint32"
              }
            ],
            "name": "requestRandomWords",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "uint64",
                "name": "",
                "type": "uint64"
              },
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "requestSubscriptionOwnerTransfer",
            "outputs": [],
            "stateMutability": "pure",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "setConfig",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"setConfig()\":{\"notice\":\"Sets the configuration of the vrfv2 mock coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f\",\"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"keccak256\":\"0x6955686a8e9f2a6458adcf8c202b5ad82ec85540832b2eda27518449beb3b3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12fb294e2d13498f0e2d1986a4fe059928857959a1bb8cbee0254b73eba5e041\",\"dweb:/ipfs/Qma1nJ1eP4aKC2YY4chhPs4NrTt5EHh9vaKFKzj218Mo8j\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[17]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r4\n\tand\t@CPI0_0[0], r4, r3\n\tptr.add\tr1, r3, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r4, stack[@calldatasize]\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r5\n\tst.1\t64, r5\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_34\n\tsub.s!\t@CPI0_27[0], r2, r4\n\tjump.gt\t@.BB0_27\n\tsub.s!\t@CPI0_35[0], r2, r4\n\tjump.gt\t@.BB0_24\n\tsub.s!\t@CPI0_39[0], r2, r4\n\tjump.eq\t@.BB0_49\n\tsub.s!\t@CPI0_40[0], r2, r4\n\tjump.eq\t@.BB0_51\n\tsub.s!\t@CPI0_41[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r3, r4\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_42[0], r2, r4\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r4\n\tld\tr4, r4\n\tsub.s!\t@CPI0_46[0], r4, r5\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r5\n\tsub!\tr5, r3, r5\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r5\n\tptr.add\tr1, r5, r5\n\tld\tr5, r6\n\tsub.s!\t@CPI0_46[0], r6, r5\n\tjump.gt\t@.BB0_8\n\tshl.s\t5, r6, r5\n\tadd\t63, r5, r7\n\tand\t@CPI0_82[0], r7, r7\n\tsub.s!\t@CPI0_83[0], r7, r8\n\tjump.gt\t@.BB0_8\n\tadd\t128, r7, r7\n\tst.1\t64, r7\n\tst.1\t128, r6\n\tadd\t36, r4, r4\n\tadd\tr5, r4, r5\n\tsub!\tr5, r3, r3\n\tjump.gt\t@.BB0_2\n\tsub!\tr6, r0, r3\n\tjump.eq\t@.BB0_68\n\tadd\t160, r0, r3\n.BB0_67:\n\tptr.add\tr1, r4, r6\n\tld\tr6, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t32, r4, r4\n\tsub!\tr4, r5, r6\n\tjump.lt\t@.BB0_67\n\tjump\t@.BB0_68\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t224, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_257\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t224, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_257:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t224, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t224, r2\n\tsub.s!\t@CPI0_2[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t256, r3\n\tsub.s!\t@CPI0_2[0], r3, r1\n\tjump.le\t@.BB0_12\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tsub.s!\t@CPI0_12[0], r2, r4\n\tjump.gt\t@.BB0_42\n\tsub.s!\t@CPI0_20[0], r2, r4\n\tjump.gt\t@.BB0_39\n\tsub.s!\t@CPI0_24[0], r2, r4\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_25[0], r2, r4\n\tjump.eq\t@.BB0_156\n\tsub.s!\t@CPI0_26[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[6]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.eq\t@.BB0_98\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_118\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[8]\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[9]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[9], r0, r2\n\tjump.eq\t@.BB0_170\n\tld\tr1, r1\n\tadd\tstack-[9], r0, r2\n\tadd\tr0, r0, r3\n.BB0_169:\n\tsload\tr1, r4\n\tand\t@CPI0_42[0], r4, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_169\n.BB0_170:\n\tsub.s\tstack-[8], r2, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[8], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_46[0], r1, r3\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r1\n\tadd\tstack-[8], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\tstack-[11], r0, r5\n\tadd\tstack-[9], r0, r6\n\tjump.eq\t@.BB0_94\n\tadd\tr0, r0, r3\n.BB0_175:\n\tshl.s\t5, r3, r4\n\tadd\tr4, r6, r4\n\tld.1\tr4, r4\n\txor\tr4, r5, r4\n\tand!\t@CPI0_42[0], r4, r4\n\tjump.eq\t@.BB0_176\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_175\n\tjump\t@.BB0_94\n.BB0_27:\n\tsub.s!\t@CPI0_28[0], r2, r4\n\tjump.gt\t@.BB0_31\n\tsub.s!\t@CPI0_32[0], r2, r4\n\tjump.eq\t@.BB0_107\n\tsub.s!\t@CPI0_33[0], r2, r4\n\tjump.eq\t@.BB0_109\n\tsub.s!\t@CPI0_34[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r4\n\tsub.s!\t@CPI0_42[0], r4, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr4, r0, stack-[10]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.eq\t@.BB0_98\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_118\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\t@CPI0_67[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tst.2\t4, r1\n\tadd\t64, r0, r1\n\tst.2\t36, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_68[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_121\n\tld\tr1, r1\n\tand\t65535, r1, r1\n\tsub!\tstack-[8], r1, r1\n\tjump.ne\t@.BB0_124\n\tld.1\t64, r1\n\tadd\t@CPI0_70[0], r0, r2\n\tjump\t@.BB0_95\n.BB0_42:\n\tsub.s!\t@CPI0_13[0], r2, r4\n\tjump.gt\t@.BB0_46\n\tsub.s!\t@CPI0_17[0], r2, r4\n\tjump.eq\t@.BB0_218\n\tsub.s!\t@CPI0_18[0], r2, r4\n\tjump.eq\t@.BB0_230\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.eq\t@.BB0_98\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r2\n\tjump.ne\t@.BB0_118\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_240\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshr.s\t160, r1, r1\n\tld.1\t64, r2\n\tadd\t32, r2, r3\n\tst.1\tr3, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\tr2, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_53[0], r0, r4\n\tadd\tstack-[11], r0, r5\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tsstore\tr1, r0\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_24:\n\tsub.s!\t@CPI0_36[0], r2, r4\n\tjump.eq\t@.BB0_69\n\tsub.s!\t@CPI0_37[0], r2, r4\n\tjump.eq\t@.BB0_72\n\tsub.s!\t@CPI0_38[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t164, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_46[0], r2, stack-[11]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[10]\n\tsub.s!\t65535, r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r2\n\tand\t@CPI0_0[0], r2, stack-[9]\n\tsub.s!\t@CPI0_0[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_0[0], r1, stack-[8]\n\tsub.s!\t@CPI0_0[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand!\t255, r1, r1\n\tjump.ne\t@.BB0_82\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tcontext.caller\tr3\n\tadd\tr3, r0, stack-[7]\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tadd\tr3, r0, stack-[4]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[6]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[4], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[6], r0, r2\n\tjump.eq\t@.BB0_88\n\tld\tr1, r1\n\tadd\tstack-[6], r0, r2\n\tadd\tr0, r0, r3\n.BB0_87:\n\tsload\tr1, r4\n\tand\t@CPI0_42[0], r4, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_87\n.BB0_88:\n\tsub.s\tstack-[5], r2, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[5], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_46[0], r1, r3\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r1\n\tadd\tstack-[5], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r3\n\tadd\tstack-[7], r0, r5\n\tadd\tstack-[6], r0, r6\n\tjump.eq\t@.BB0_94\n\tadd\tstack-[10], r0, r3\n\tand\t65535, r3, stack-[10]\n\tadd\tr0, r0, r3\n.BB0_93:\n\tshl.s\t5, r3, r4\n\tadd\tr4, r6, r4\n\tld.1\tr4, r4\n\txor\tr4, r5, r4\n\tand!\t@CPI0_42[0], r4, r4\n\tjump.eq\t@.BB0_96\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_93\n.BB0_94:\n\tadd\t@CPI0_63[0], r0, r2\n\tjump\t@.BB0_95\n.BB0_12:\n\tld.1\t64, r1\n\tcontext.caller\tr4\n\tsub!\tr4, r0, r5\n\tjump.ne\t@.BB0_14\n\tadd\t68, r1, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_9[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_10[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_39:\n\tsub.s!\t@CPI0_21[0], r2, r4\n\tjump.eq\t@.BB0_194\n\tsub.s!\t@CPI0_22[0], r2, r4\n\tjump.eq\t@.BB0_199\n\tsub.s!\t@CPI0_23[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub.s!\t@CPI0_46[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr5, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.eq\t@.BB0_98\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[10]\n\tadd\tr3, r0, stack-[7]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[7], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[8], r0, r3\n\tadd\tr3, r0, r2\n\tjump.eq\t@.BB0_212\n\tld\tr1, r1\n\tadd\tr3, r0, r2\n\tadd\tr0, r0, r3\n.BB0_211:\n\tsload\tr1, r4\n\tand\t@CPI0_42[0], r4, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB0_211\n.BB0_212:\n\tsub.s\tstack-[10], r2, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[10], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_46[0], r1, r3\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r1\n\tadd\t96, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[11], r0, r4\n\tand\t@CPI0_42[0], r4, r2\n\tadd\t64, r1, r3\n\tst.1\tr3, r2\n\tshr.s\t160, r4, r2\n\tst.1.inc\tr1, r2, r2\n\tst.1\tr2, r0\n\tadd\tstack-[10], r0, r2\n\tld.1\tr2, r3\n\tadd\t128, r1, r2\n\tst.1\tr2, r3\n\tadd\t160, r1, r2\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_217\n\tadd\tr0, r0, r4\n\tadd\tstack-[8], r0, r6\n.BB0_216:\n\tld.1.inc\tr6, r5, r6\n\tand\t@CPI0_42[0], r5, r5\n\tst.1.inc\tr2, r5, r2\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_216\n.BB0_217:\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_31:\n\tsub.s!\t@CPI0_29[0], r2, r4\n\tjump.eq\t@.BB0_140\n\tsub.s!\t@CPI0_30[0], r2, r4\n\tjump.eq\t@.BB0_144\n\tsub.s!\t@CPI0_31[0], r2, r2\n\tjump.eq\t@.BB0_149\n\tjump\t@.BB0_2\n.BB0_46:\n\tsub.s!\t@CPI0_14[0], r2, r4\n\tjump.eq\t@.BB0_244\n\tsub.s!\t@CPI0_15[0], r2, r4\n\tjump.eq\t@.BB0_245\n\tsub.s!\t@CPI0_16[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_42[0], r1, r6\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_42[0], r1, r1\n\tcontext.caller\tr5\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB0_154\n\tsub!\tr6, r5, r1\n\tjump.ne\t@.BB0_256\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_44[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tsload\tr0, r5\n\tand\t@CPI0_3[0], r5, r5\n\tor\tr5, r4, r4\n\tsstore\tr0, r4\n\tadd\t100, r0, r4\n\tst.1\t192, r4\n\tadd\t1, r0, r5\n\tadd\t4, r0, r6\n\tsstore\tr6, r5\n\tadd\t5, r0, r5\n\tsstore\tr5, r4\n\tst.1\t128, r2\n\tst.1\t160, r3\n\tsub.s!\t@CPI0_4[0], r1, r2\n\tjump.le\t@.BB0_15\n.BB0_8:\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_49:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t160, r0, r1\n\tst.1\t64, r1\n\tst.1\t128, r0\n\tadd\t3, r0, r1\n\tst.1\t160, r1\n\tadd\t@CPI0_85[0], r0, r1\n\tst.1\t192, r1\n\tadd\t96, r0, r1\n\tst.1\t224, r1\n\tst.1\t256, r0\n\tadd\t@CPI0_86[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_51:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_42[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tjump\t@.BB0_55\n.BB0_152:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_42[0], r1, r1\n\tcontext.caller\tr2\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_154\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n.BB0_228:\n\tjump\t@.BB0_229\n.BB0_156:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_42[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_107:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_71[0], r0, r1\n\tst.1\t128, r1\n\tst.1\t160, r1\n\tst.1\t192, r1\n\tst.1\t224, r1\n\tst.1\t256, r1\n\tst.1\t288, r0\n\tst.1\t320, r0\n\tst.1\t352, r0\n\tst.1\t384, r0\n\tadd\t@CPI0_72[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_109:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[15]\n\tadd\t64, r0, stack-[14]\n\tcontext.sp\tr1\n\tsub.s\t15, r1, r1\n\tshl.s\t5, r1, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t65535, r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_218:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[11]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[10]\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[9]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.ne\t@.BB0_224\n.BB0_98:\n\tld.1\t64, r1\n\tadd\t@CPI0_80[0], r0, r2\n.BB0_95:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_52[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_230:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t4, r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_54[0], r0, r1\n\tst.1\t160, r1\n\tadd\t2700, r0, r1\n\tst.1\t192, r1\n\tadd\t33285, r0, r1\n\tst.1\t224, r1\n\tadd\t@CPI0_55[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_69:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t@CPI0_81[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_72:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[17]\n\tadd\t0, r0, stack-[16]\n\tcontext.sp\tr1\n\tsub.s\t17, r1, r1\n\tjump\t@.BB0_74\n.BB0_194:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r3\n\tsload\tr3, r1\n\tand\t@CPI0_46[0], r1, r2\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.ne\t@.BB0_196\n.BB0_100:\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_199:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[13]\n\tadd\t32, r0, stack-[12]\n\tcontext.sp\tr1\n\tsub.s\t13, r1, r1\n.BB0_74:\n\tshl.s\t5, r1, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_58[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_140:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_42[0], r2, r3\n\tcontext.caller\tr6\n\tsub!\tr6, r3, r3\n\tjump.ne\t@.BB0_142\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tor\tr4, r6, r4\n\tsstore\tr0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tand\t@CPI0_42[0], r3, r5\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_66[0], r0, r4\n\tjump\t@.BB0_229\n.BB0_144:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_42[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tadd\t2, r0, r3\n\tsload\tr3, r3\n\tand!\t255, r3, r3\n\tjump.ne\t@.BB0_82\n\tadd\t160, r0, r3\n\tst.1\t64, r3\n\tst.1\t128, r0\n.BB0_68:\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tadd\t128, r0, r3\n\tnear_call\tr0, @fun_fulfillRandomWordsWithOverride, @DEFAULT_UNWIND\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_244:\n.BB0_149:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_46[0], r1, r1\n\tjump.gt\t@.BB0_2\n.BB0_55:\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t15, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_84[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_245:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_46[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r2\n\tsub.s!\t@CPI0_42[0], r2, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr3, r0, r1\n\tnear_call\tr0, @fun_consumerIsAdded, @DEFAULT_UNWIND\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_15:\n\tadd\t32, r1, r2\n\tst.1\t64, r2\n\tst.1\tr1, r0\n\tadd\t2, r0, r1\n\tsload\tr1, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t128, r1\n\tst.2\t320, r0\n\tst.2\t352, r1\n\tld.1\t160, r1\n\tadd\t32, r0, r2\n\tst.2\t384, r2\n\tst.2\t416, r1\n\tld.1\t192, r1\n\tadd\t64, r0, r3\n\tst.2\t448, r3\n\tst.2\t480, r1\n\tst.2\t256, r2\n\tadd\t3, r0, r1\n\tst.2\t288, r1\n\tadd\t@CPI0_7[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_154:\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_64[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_196:\n\tand\t@CPI0_59[0], r1, r2\n\tadd\t1, r1, r1\n\tand\t@CPI0_46[0], r1, r1\n\tor\tr1, r2, r2\n\tadd\tr3, r0, stack-[11]\n\tsstore\tr3, r2\n\tadd\t192, r0, r2\n\tst.1\t64, r2\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[10]\n\tst.1\t128, r2\n\tst.1\t160, r0\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld.1\t128, r2\n\tand\t@CPI0_42[0], r2, r2\n\tld.1\t160, r3\n\tshl.s\t160, r3, r3\n\tor\tr3, r2, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tsload\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[10], r0, r3\n\tst.1\tr1, r3\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd\t@CPI0_0[0], r0, r5\n\tadd.ge\tr5, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr5, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r3\n\tor\tr3, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tand\t@CPI0_46[0], r2, r5\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_60[0], r0, r4\n\tadd\tr5, r0, stack-[11]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[11], r0, r2\n.BB0_106:\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_47[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_142:\n\tadd\t@CPI0_9[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_65[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_45[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_82:\n\tadd\t@CPI0_51[0], r0, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_73[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_256:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_5[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_43[0], r0, r4\n.BB0_229:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_139:\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_118:\n\tld.1\t64, r2\n\tadd\t@CPI0_49[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t4, r2, r3\n\tst.1\tr3, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_50[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_224:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tsload\tr2, r4\n\tshr.s\t160, r4, r1\n\tadd\tstack-[10], r1, r3\n\tsub.s!\t@CPI0_2[0], r3, r5\n\tjump.gt\t@.BB0_100\n\tand\t@CPI0_42[0], r4, r4\n\tshl.s\t160, r3, r5\n\tor\tr5, r4, r4\n\tsstore\tr2, r4\n\tld.1\t64, r2\n\tadd\t32, r2, r4\n\tst.1\tr4, r3\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_56[0], r0, r4\n.BB0_227:\n\tadd\tstack-[11], r0, r5\n\tjump\t@.BB0_228\n.BB0_240:\n\tld.1\t64, r1\n\tadd\t@CPI0_51[0], r0, r2\n\tjump\t@.BB0_95\n.BB0_121:\n\trevert\n.BB0_124:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr3, r0, stack-[6]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[8]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[6], r0, r6\n\tsub!\tr6, r0, r2\n\tadd\tr3, r0, r5\n\tadd\tr3, r0, r2\n\tjump.eq\t@.BB0_129\n\tld\tr1, r1\n\tadd\tr5, r0, r2\n\tadd\tr0, r0, r3\n.BB0_128:\n\tsload\tr1, r4\n\tand\t@CPI0_42[0], r4, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r6, r4\n\tjump.lt\t@.BB0_128\n.BB0_129:\n\tsub.s\tstack-[7], r2, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tstack-[7], r2, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI0_46[0], r1, r3\n\tjump.gt\t@.BB0_8\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_8\n\tst.1\t64, r1\n\tadd\tstack-[7], r0, r1\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r2\n\tadd\tstack-[10], r0, r4\n\tjump.eq\t@.BB0_135\n\tadd\tr0, r0, r2\n.BB0_134:\n\tshl.s\t5, r2, r3\n\tadd\tr3, r5, r3\n\tld.1\tr3, r3\n\txor\tr3, r4, r3\n\tand!\t@CPI0_42[0], r3, r3\n\tjump.eq\t@.BB0_139\n\tadd\t1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.lt\t@.BB0_134\n.BB0_135:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[9], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[9]\n\tsub.s!\t@CPI0_46[0], r2, r2\n\tjump.gt\t@.BB0_8\n\tadd\tstack-[9], r0, r2\n\tadd\t1, r2, r2\n\tsstore\tr1, r2\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[10], r0, r3\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tand\t@CPI0_42[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_69[0], r0, r4\n\tjump\t@.BB0_227\n.BB0_176:\n\tadd\t2, r0, r2\n\tsload\tr2, r2\n\tand!\t255, r2, r2\n\tjump.ne\t@.BB0_177\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tand\t@CPI0_42[0], r2, stack-[10]\n\tld\tr1, r3\n\tsload\tr3, r1\n\tadd\tr1, r0, stack-[9]\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_181\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, stack-[11]\n\tadd\tr3, r0, stack-[7]\n.BB0_182:\n\tst.1\t0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r0, r4\n\tadd\tr1, r4, r2\n\tadd\tstack-[7], r0, r5\n\tsload\tr5, r1\n\tsload\tr2, r2\n\tand\t@CPI0_42[0], r2, r2\n\tsub.s!\tstack-[10], r2, r2\n\tadd\tr5, r0, r3\n\tjump.eq\t@.BB0_185\n\tadd\t1, r4, stack-[11]\n\tsub!\tstack-[11], r1, r2\n\tadd\tr1, r0, stack-[9]\n\tjump.lt\t@.BB0_182\n.BB0_181:\n\tld.1\t64, r1\n\tadd\tstack-[10], r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI0_62[0], r0, r4\n\tadd\tstack-[6], r0, r5\n\tjump\t@.BB0_228\n.BB0_96:\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI0_42[0], r1, r1\n\tjump.eq\t@.BB0_98\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tadd\tr2, r0, stack-[6]\n\tsub!\tr2, r1, r2\n\tjump.eq\t@.BB0_100\n\tadd\tstack-[6], r0, r2\n\tadd\t1, r2, r2\n\tadd\tstack-[5], r0, r3\n\tsstore\tr3, r2\n\tadd\t5, r0, r2\n\tsload\tr2, r3\n\tadd\tr3, r0, stack-[4]\n\tsub!\tr3, r1, r1\n\tjump.eq\t@.BB0_100\n\tadd\tstack-[4], r0, r1\n\tadd\t1, r1, r1\n\tsstore\tr2, r1\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[3]\n\tsub.s!\t@CPI0_74[0], r1, r1\n\tjump.gt\t@.BB0_8\n\tadd\tstack-[3], r0, r3\n\tadd\t96, r3, r1\n\tst.1\t64, r1\n\tadd\t64, r3, r2\n\tadd\tstack-[8], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tadd\tstack-[11], r0, r1\n\tst.1.inc\tr3, r1, r2\n\tadd\tstack-[9], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_48[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r2\n\tld.1\tr2, r2\n\tand\t@CPI0_46[0], r2, r2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tand\t@CPI0_75[0], r3, r3\n\tor\tr3, r2, r2\n\tadd\tstack-[1], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t64, r3, r3\n\tand\t@CPI0_76[0], r3, r3\n\tor\tr2, r3, r2\n\tadd\tstack-[2], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t96, r3, r3\n\tand\t@CPI0_77[0], r3, r3\n\tor\tr2, r3, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\t128, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tadd\t96, r1, r2\n\tadd\tstack-[9], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r2\n\tadd\tstack-[10], r0, r3\n\tst.1\tr2, r3\n\tadd\t32, r1, r2\n\tadd\tstack-[4], r0, r3\n\tst.1\tr2, r3\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tadd\tstack-[5], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r2\n\tld\tr2, r5\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd\t@CPI0_0[0], r0, r6\n\tadd.ge\tr6, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr6, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_78[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t@CPI0_79[0], r0, r4\n\tadd\tstack-[11], r0, r6\n\tadd\tstack-[7], r0, r7\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tjump\t@.BB0_106\n.BB0_177:\n\tadd\t@CPI0_51[0], r0, r2\n\tjump\t@.BB0_95\n.BB0_185:\n\tadd\tstack-[9], r0, r2\n\tsub.s\t1, r2, stack-[9]\n\tsub.s!\tstack-[9], r1, r1\n\tjump.le\t@.BB0_186\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[9], r1, r1\n\tsload\tr1, r1\n\tand\t@CPI0_42[0], r1, stack-[9]\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tsub.s!\tstack-[11], r1, r1\n\tjump.le\t@.BB0_186\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[11], r1, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tstack-[9], r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[11]\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_192\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\t0, r1\n\tadd\t49, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_186:\n\tadd\t@CPI0_61[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_50[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_192:\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_57[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[11], r0, r2\n\tsub.s\t1, r2, r2\n\tld\tr1, r1\n\tadd\tr1, r2, r1\n\tsload\tr1, r3\n\tand\t@CPI0_3[0], r3, r3\n\tsstore\tr1, r3\n\tadd\tstack-[7], r0, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_181\n.func_end0:\n\nfun_fulfillRandomWordsWithOverride:\n.func_begin1:\n\tnop\tstack+=[12]\n\tadd\tr3, r0, stack-[10]\n\tadd\tr2, r0, stack-[3]\n\tcontext.gas_left\tr2\n\tadd\tr2, r0, stack-[4]\n\tadd\tr1, r0, stack-[11]\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tadd\tr1, r0, stack-[2]\n\tst.1\t32, r1\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tand!\t@CPI1_2[0], r1, r1\n\tjump.eq\t@.BB1_3\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[5]\n\tsub.s!\t@CPI1_3[0], r2, r2\n\tadd\tstack-[10], r0, r8\n\tjump.ge\t@.BB1_6\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r3\n\tadd\t96, r3, r2\n\tst.1\t64, r2\n\tsload\tr1, r1\n\tand\t@CPI1_2[0], r1, r2\n\tst.1.inc\tr3, r2, r4\n\tshr.s\t64, r1, r2\n\tand\t@CPI1_0[0], r2, r2\n\tst.1\tr4, r2\n\tadd\t64, r3, r7\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_0[0], r1, r1\n\tst.1\tr7, r1\n\tld.1\tr8, r2\n\tsub!\tr2, r0, r3\n\tadd\tr4, r0, stack-[1]\n\tjump.eq\t@.BB1_14\n\tsub!\tr2, r1, r1\n\tjump.eq\t@.BB1_9\n\tld.1\t64, r1\n\tadd\t@CPI1_4[0], r0, r2\n\tjump\t@.BB1_13\n.BB1_14:\n\tshl.s\t5, r1, r2\n\tadd\t63, r2, r3\n\tand\t@CPI1_6[0], r3, r3\n\tld.1\t64, r8\n\tadd\tr8, r3, r3\n\tsub!\tr3, r8, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_2[0], r3, r5\n\tjump.gt\t@.BB1_6\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_6\n\tst.1\t64, r3\n\tst.1.inc\tr8, r1, r9\n\tand\t31, r2, r1\n\tshr.s!\t5, r2, r2\n\tjump.eq\t@.BB1_58\n\tadd\tstack[@calldatasize], r0, r3\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tadd\tr0, r0, r4\n.BB1_18:\n\tshl.s\t5, r4, r5\n\tadd\tr9, r5, r6\n\tptr.add\tr3, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_18\n.BB1_58:\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB1_20\n.BB1_20:\n\tld.1\tr7, r1\n\tand!\t@CPI1_0[0], r1, r1\n\tjump.eq\t@.BB1_9\n\tadd\t64, r0, stack-[9]\n\tadd\t32784, r0, stack-[8]\n\tadd\tr0, r0, r3\n\tadd\tr8, r0, stack-[10]\n\tadd\tr7, r0, stack-[7]\n\tadd\tr9, r0, stack-[6]\n.BB1_22:\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tadd\tr3, r0, stack-[12]\n\tst.1\tr2, r3\n\tadd\tstack-[9], r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\tstack-[11], r0, r3\n\tst.1\tr2, r3\n\tsub.s!\t@CPI1_7[0], r1, r3\n\tjump.gt\t@.BB1_6\n\tadd\t96, r1, r3\n\tst.1\t64, r3\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI1_8[0], r1, r1\n\tadd\tstack-[8], r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tadd\tstack-[10], r0, r8\n\tld.1\tr8, r2\n\tadd\tstack-[12], r0, r3\n\tsub!\tr2, r3, r2\n\tadd\tstack-[7], r0, r7\n\tadd\tstack-[6], r0, r9\n\tjump.le\t@.BB1_25\n\tshl.s\t5, r3, r2\n\tadd\tr2, r9, r2\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tld.1\tr7, r1\n\tand\t@CPI1_0[0], r1, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB1_22\n.BB1_9:\n\tld.1\t64, r7\n\tadd\t68, r7, r1\n\tadd\t64, r0, r3\n\tst.1\tr1, r3\n\tadd\t32, r7, r1\n\tadd\t@CPI1_11[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t36, r7, r3\n\tadd\tstack-[11], r0, r4\n\tst.1\tr3, r4\n\tld.1\tr8, r4\n\tadd\t100, r7, r3\n\tst.1\tr3, r4\n\tadd\t132, r7, r3\n\tsub!\tr4, r0, r5\n\tjump.eq\t@.BB1_28\n\tadd\tr0, r0, r5\n.BB1_27:\n\tadd\t32, r8, r8\n\tld.1\tr8, r6\n\tst.1.inc\tr3, r6, r3\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB1_27\n.BB1_28:\n\tsub\tr3, r7, r3\n\tsub.s\t32, r3, r4\n\tst.1\tr7, r4\n\tadd\t31, r3, r3\n\tsub.s\t32, r0, r6\n\tand\tr3, r6, r4\n\tadd\tr4, r7, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_2[0], r3, r5\n\tjump.gt\t@.BB1_6\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_6\n\tst.1\t64, r3\n\tadd\t2, r0, r9\n\tsload\tr9, r3\n\tsub.s\t256, r0, r10\n\tand\tr3, r10, r3\n\tor\t1, r3, r3\n\tsstore\tr9, r3\n\tadd\tstack-[3], r0, r2\n\tsub.s!\t4, r2, r3\n\tjump.ne\t@.BB1_31\n\tadd\t1, r0, r8\n\tadd\tstack[@returndatasize], r0, r1\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB1_35\n\tjump\t@.BB1_34\n.BB1_31:\n\tld.1\tr7, r5\n\tadd\t@CPI1_0[0], r0, r3\n\tsub.s!\t@CPI1_0[0], r5, r4\n\tadd.ge\tr3, r0, r5\n\tsub.s!\t@CPI1_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r5, r3\n\tor\tr3, r1, r1\n\tadd\tstack-[1], r0, r3\n\tld.1\tr3, r3\n\tshl.s\t192, r3, r3\n\tand\t@CPI1_12[0], r3, r3\n\tor\tr1, r3, r1\n\tadd\tr9, r0, stack-[12]\n\tadd\tr10, r0, stack-[10]\n\tadd\tr6, r0, stack-[9]\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r6\n\tadd\tstack-[10], r0, r10\n\tadd\tstack-[12], r0, r9\n\tadd\tr2, r0, r8\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI1_0[0], r1, stack[@returndatasize]\n\tand\t@CPI1_0[0], r1, r1\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB1_34\n.BB1_35:\n\tadd\t31, r1, r2\n\tand\tr2, r6, r2\n\tadd\t63, r2, r2\n\tand\tr2, r6, r2\n\tld.1\t64, r3\n\tadd\tr3, r2, r2\n\tsub!\tr2, r3, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI1_2[0], r2, r5\n\tjump.gt\t@.BB1_6\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB1_6\n\tst.1\t64, r2\n\tand\t31, r1, r2\n\tst.1.inc\tr3, r1, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tshr.s!\t5, r1, r1\n\tjump.eq\t@.BB1_57\n\tadd\tr0, r0, r5\n.BB1_39:\n\tshl.s\t5, r5, r6\n\tadd\tr3, r6, r7\n\tptr.add\tr4, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r1, r6\n\tjump.lt\t@.BB1_39\n.BB1_57:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB1_34\n\tshl.s\t5, r1, r1\n\tptr.add\tr4, r1, r4\n\tadd\tr3, r1, r1\n\tshl.s\t3, r2, r2\n\tld.1\tr1, r3\n\tshl\tr3, r2, r3\n\tshr\tr3, r2, r3\n\tld\tr4, r4\n\tsub\t256, r2, r2\n\tshr\tr4, r2, r4\n\tshl\tr4, r2, r2\n\tor\tr2, r3, r2\n\tst.1\tr1, r2\n.BB1_34:\n\tadd\tr8, r0, stack-[8]\n\tsload\tr9, r1\n\tand\tr1, r10, r1\n\tsstore\tr9, r1\n\tcontext.gas_left\tr2\n\tadd\tr2, r0, stack-[12]\n\tsub!\tstack-[4], r2, r1\n\tjump.lt\t@.BB1_41\n\tadd\t@CPI1_13[0], r0, r1\n\tst.2\t0, r1\n\tcontext.code_source\tr1\n\tadd\tr1, r0, stack-[10]\n\tst.2\t4, r1\n\tadd\t32, r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_14[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_43\n\tadd\tstack-[12], r0, r5\n\tsub\tstack-[4], r5, r2\n\tld\tr1, r1\n\tand\t@CPI1_15[0], r1, r1\n\tmul\tr1, r2, r6, r3\n\tsub!\tstack-[4], r5, r3\n\tadd\tr0, r0, r3\n\tdiv.ne\tr6, r2, r3, r2\n\tadd\tr6, r0, stack-[9]\n\tsub!\tstack-[4], r5, r2\n\tjump.eq\t@.BB1_47\n\tsub!\tr1, r3, r1\n\tjump.ne\t@.BB1_41\n.BB1_47:\n\tadd\t@CPI1_13[0], r0, r1\n\tst.2\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.2\t4, r1\n\tst.2\t36, r0\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_14[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_43\n\tld\tr1, r1\n\tand\t@CPI1_15[0], r1, r1\n\tadd\tstack-[9], r1, stack-[12]\n\tsub!\tstack-[12], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB1_41\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\t6, r0, r1\n\tadd\tr1, r0, stack-[10]\n\tst.1\t32, r1\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[12], r0, r3\n\tand\t@CPI1_15[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsload\tr1, r1\n\tshr.s\t160, r1, r1\n\tadd\tr3, r0, stack-[12]\n\tsub!\tr1, r3, r1\n\tjump.lt\t@.BB1_51\n\tadd\tstack-[5], r0, r1\n\tld.1\tr1, r1\n\tand\t@CPI1_2[0], r1, r1\n\tst.1\t0, r1\n\tadd\tstack-[10], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r4\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsload\tr1, r2\n\tshr.s\t160, r2, r3\n\tsub\tr3, r4, r3\n\tsub.s!\t@CPI1_15[0], r3, r4\n\tjump.gt\t@.BB1_41\n\tand\t@CPI1_16[0], r2, r2\n\tshl.s\t160, r3, r3\n\tor\tr3, r2, r2\n\tsstore\tr1, r2\n\tadd\tstack-[11], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[2], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI1_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI1_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[12], r0, r4\n\tjump.eq\t@.BB1_1\n\tld\tr1, r1\n\tsstore\tr1, r0\n\tadd\tstack-[8], r0, r1\n\tand\t1, r1, r1\n\tld.1\t64, r2\n\tadd\t64, r2, r3\n\tst.1\tr3, r1\n\tadd\t32, r2, r1\n\tst.1\tr1, r4\n\tadd\tstack-[11], r0, r5\n\tst.1\tr2, r5\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tadd\t@CPI1_0[0], r0, r4\n\tadd.ge\tr4, r0, r1\n\tsub.s!\t@CPI1_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI1_17[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t2, r0, r3\n\tadd\t@CPI1_18[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB1_1\n\tret\n.BB1_1:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_6:\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_25:\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t50, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_41:\n\tadd\t@CPI1_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI1_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_43:\n\trevert\n.BB1_3:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI1_20[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_21[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_22[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB1_51:\n\tld.1\t64, r1\n\tadd\t@CPI1_19[0], r0, r2\n.BB1_13:\n\tst.1\tr1, r2\n\tadd\t@CPI1_0[0], r0, r2\n\tsub.s!\t@CPI1_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI1_5[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end1:\n\nfun_consumerIsAdded:\n.func_begin2:\n\tnop\tstack+=[4]\n\tadd\tr2, r0, stack-[4]\n\tand\t@CPI2_0[0], r1, r1\n\tst.1\t0, r1\n\tadd\t7, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI2_1[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_2[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_14\n\tld\tr1, r1\n\tsload\tr1, r3\n\tld.1\t64, r2\n\tadd\tr2, r0, stack-[3]\n\tadd\tr3, r0, stack-[2]\n\tst.1.inc\tr2, r3, r2\n\tadd\tr2, r0, stack-[1]\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI2_1[0], r1, r2\n\tadd.ge\t@CPI2_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI2_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB2_14\n\tadd\tstack-[2], r0, r5\n\tsub!\tr5, r0, r2\n\tadd\tstack-[1], r0, r6\n\tadd\tr6, r0, r2\n\tjump.eq\t@.BB2_5\n\tld\tr1, r1\n\tadd\tr6, r0, r2\n\tadd\tr0, r0, r3\n.BB2_4:\n\tsload\tr1, r4\n\tand\t@CPI2_4[0], r4, r4\n\tst.1.inc\tr2, r4, r2\n\tadd\t1, r1, r1\n\tadd\t1, r3, r3\n\tsub!\tr3, r5, r4\n\tjump.lt\t@.BB2_4\n.BB2_5:\n\tadd\tstack-[3], r0, r4\n\tsub\tr2, r4, r1\n\tadd\t31, r1, r1\n\tsub.s\t32, r0, r2\n\tand\tr1, r2, r2\n\tadd\tr2, r4, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tadd\tstack-[4], r0, r5\n\tjump.gt\t@.BB2_15\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_15\n\tst.1\t64, r1\n\tld.1\tr4, r2\n\tsub!\tr2, r0, r1\n\tjump.eq\t@.BB2_12\n\tadd\t1, r0, r1\n\tadd\tr0, r0, r3\n.BB2_9:\n\tshl.s\t5, r3, r4\n\tadd\tr4, r6, r4\n\tld.1\tr4, r4\n\txor\tr4, r5, r4\n\tand!\t@CPI2_4[0], r4, r4\n\tjump.eq\t@.BB2_13\n\tadd\t1, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB2_9\n.BB2_12:\n\tadd\tr0, r0, r1\n.BB2_13:\n\tret\n.BB2_14:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB2_15:\n\tadd\t@CPI2_5[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_6[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\n__cxa_throw:\n.func_begin3:\n\trevert\n.func_end3:\n\n__sha3:\n.func_begin4:\n\tadd\t@CPI4_0[0], r0, r3\n\tsub.s!\t@CPI4_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_2\n\tld\tr1, r1\n\tret\n.BB4_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\n__system_request:\n.func_begin5:\n\tadd\t@CPI5_0[0], r0, r2\n\tst.2\t0, r2\n\tshr.s\t5, r1, r1\n\tadd\tstack[r1], r0, r2\n\tst.2\t4, r2\n\tadd\tstack[1 + r1], r0, r1\n\tst.2\t36, r1\n\tadd\t@CPI5_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI5_2[0], r1, r1\n\tadd\t32773, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_2\n\tld\tr1, r1\n\tret\n.BB5_2:\n\trevert\n.func_end5:\n\n__farcall:\n.func_begin6:\n.tmp0:\n\tfar_call\tr1, r2, @.BB6_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB6_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end6:\n\n__staticcall:\n.func_begin7:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB7_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB7_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end7:\n\n\t.data\n\t.p2align\t5, 0x0\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5, 0x0\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI1_0:\nCPI2_1:\nCPI4_0:\nCPI5_1:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\nCPI1_15:\n\t.cell 79228162514264337593543950335\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 18446744073709551583\nCPI0_5:\nCPI1_8:\nCPI4_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_6:\n\t.cell 33996709431348674298724851119014655619099768398948199650812628102776047621566\nCPI0_7:\n\t.cell 53919893334301279589334030174039261367556698453455181869024116998144\nCPI0_8:\n\t.cell 30477107189792067803313207904920092556244933919346619109201225024049046880256\nCPI0_9:\nCPI1_21:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_10:\nCPI1_22:\n\t.cell 7922816251426433759354395033600\nCPI0_11:\n\t.cell 2338799225\nCPI0_12:\n\t.cell 2949028690\nCPI0_13:\n\t.cell 3895121875\nCPI0_14:\n\t.cell 3895121876\nCPI0_15:\n\t.cell 3982405741\nCPI0_16:\n\t.cell 4076725131\nCPI0_17:\n\t.cell 2949028691\nCPI0_18:\n\t.cell 3287878100\nCPI0_19:\n\t.cell 3618512176\nCPI0_20:\n\t.cell 2719622115\nCPI0_21:\n\t.cell 2719622116\nCPI0_22:\n\t.cell 2752525439\nCPI0_23:\n\t.cell 2759620246\nCPI0_24:\n\t.cell 2338799226\nCPI0_25:\n\t.cell 2376452955\nCPI0_26:\n\t.cell 2676488919\nCPI0_27:\n\t.cell 1606140113\nCPI0_28:\n\t.cell 2042253462\nCPI0_29:\n\t.cell 2042253463\nCPI0_30:\n\t.cell 2156492031\nCPI0_31:\n\t.cell 2184550208\nCPI0_32:\n\t.cell 1606140114\nCPI0_33:\n\t.cell 1691687466\nCPI0_34:\n\t.cell 1933689100\nCPI0_35:\n\t.cell 896380016\nCPI0_36:\n\t.cell 896380017\nCPI0_37:\n\t.cell 1025008926\nCPI0_38:\n\t.cell 1564155184\nCPI0_39:\n\t.cell 74385\nCPI0_40:\n\t.cell 79910859\nCPI0_41:\n\t.cell 149129614\nCPI0_42:\nCPI1_16:\nCPI2_4:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_43:\n\t.cell -8352700767705030668357216594227241474277607171479992828920686105414662745480\nCPI0_44:\n\t.cell 30477107189792067809907278063365548287250439923367031265618412078853158600704\nCPI0_45:\n\t.cell 7922816253787617000789217640448\nCPI0_46:\nCPI1_2:\nCPI2_0:\n\t.cell 18446744073709551615\nCPI0_47:\n\t.cell 2535301200456458802993406410752\nCPI0_48:\nCPI1_1:\nCPI2_2:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_49:\n\t.cell -17802783322723107751347779628569721214995274762217754825639136446349515423744\nCPI0_50:\nCPI1_10:\nCPI2_6:\n\t.cell 2852213850513516153367582212096\nCPI0_51:\n\t.cell -8488549981015422723052824406872081037067261416631994667871128954990585970688\nCPI0_52:\nCPI1_5:\n\t.cell 316912650057057350374175801344\nCPI0_53:\n\t.cell -10436135629056459577922264544832625347322887261518860614277711017062846654443\nCPI0_54:\n\t.cell 2500000\nCPI0_55:\n\t.cell 10141204804187018453408448249856\nCPI0_56:\n\t.cell -20073587782572413328437211828871800312735688858532861270868016930843057335048\nCPI0_57:\nCPI2_3:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_58:\n\t.cell 2535301202817642044428229017600\nCPI0_59:\n\t.cell -18446744073709551616\nCPI0_60:\n\t.cell 31787585056952713795167706821711148531771962461336811710456413732416481513663\nCPI0_61:\nCPI1_9:\nCPI2_5:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_62:\n\t.cell -2832936655189437344910026291904562158333885015966827749013367989542865857540\nCPI0_63:\n\t.cell 51521600077305746481559728131386585281856287587275628407498726254078322540544\nCPI0_64:\n\t.cell 35927816869373543188625519729548758844492007594142020231330326663764612481024\nCPI0_65:\n\t.cell 35035607279084747875032095267602354476277983814074373230998149299897699926016\nCPI0_66:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\nCPI0_67:\nCPI1_13:\nCPI5_0:\n\t.cell 22182216476136578060272566318850604970565072242024486780356928325126096266030\nCPI0_68:\nCPI1_14:\nCPI5_2:\n\t.cell 904625751086426111047927909714404454142933107862120802609382293630030446592\nCPI0_69:\n\t.cell 53003076545260629757260188169861040031593843435051024355808587486134664281027\nCPI0_70:\n\t.cell 2552307613920431239235694246410443979763594909119608308527019649660476194816\nCPI0_71:\n\t.cell 100000\nCPI0_72:\n\t.cell 22817710806469312468375480303616\nCPI0_73:\n\t.cell 316912652418240591808998408192\nCPI0_74:\nCPI1_7:\n\t.cell 18446744073709551519\nCPI0_75:\n\t.cell -340282366920938463463374607431768211456\nCPI0_76:\n\t.cell 79228162495817593519834398720\nCPI0_77:\n\t.cell 340282366841710300949110269838224261120\nCPI0_78:\n\t.cell 904625697166532776746648320380374280103671767876822908840556390028853379072\nCPI0_79:\n\t.cell 44876570367145464832504143111261498185803520520678756909538700998629549315954\nCPI0_80:\n\t.cell 14209686078039086046867852040713386521428105662640201772640220046598917324800\nCPI0_81:\n\t.cell 4000000000000000\nCPI0_82:\n\t.cell 57896044618658097711785492504343953926634992332820282019728792003956564819936\nCPI0_83:\n\t.cell 18446744073709551487\nCPI0_84:\n\t.cell 49951334844747035717729662271057499504658185510634968739186737521484225314816\nCPI0_85:\n\t.cell 2000000\nCPI0_86:\n\t.cell 10141204804777314263767153901568\nCPI1_3:\n\t.cell 18446744073709551520\nCPI1_4:\n\t.cell 28605182966262521021168367384110111561539769930177861960120889172018117738496\nCPI1_6:\n\t.cell 274877906912\nCPI1_11:\n\t.cell 14426774820828636462016615611621126995892883157922348125672063733196761595904\nCPI1_12:\n\t.cell 26959946660873538059280334323183841250429478006438217036639575736320\nCPI1_17:\n\t.cell 904625697166532776746648320380374280103671762806220507927638784042040557568\nCPI1_18:\n\t.cell 56991016419481338157245674179417779699467724995167392316185130255168064411364\nCPI1_19:\n\t.cell -5048815740944820790576849867689011863568610894959284788459594497323165548544\nCPI1_20:\n\t.cell 49951295296083318749243168028166301977281462365380283411222293191741201711104\n",
          "bytecode": {
            "object": "0004000000000002001100000000000200000000030100190000006004300270000002380340019700030000003103550002000000010355000002380040019d0000000102200190000000470000c13d0000008005000039000000400050043f000000040230008c000000710000413d000000000201043b000000e002200270000002430420009c000000730000213d000002530420009c000000ed0000213d0000025b0420009c000001a30000213d0000025f0420009c000002f90000613d000002600420009c000003080000613d000002610220009c000000710000c13d0000000002000416000000640430008c000000710000413d000000000202004b000000710000c13d0000002402100370000000000202043b000002620420009c000000710000213d0000004404100370000000000404043b000002660540009c000000710000213d0000002305400039000000000535004b000000710000813d0000000405400039000000000551034f000000000605043b000002660560009c000002f30000213d00000005056002100000003f075000390000028a077001970000028b0870009c000002f30000213d0000008007700039000000400070043f000000800060043f00000024044000390000000005450019000000000335004b000000710000213d000000000306004b000003e00000613d000000a003000039000000000641034f000000000606043b00000000036304360000002004400039000000000654004b000000400000413d000003e00000013d0000000002000416000000000202004b000000710000c13d0000001f023000390000023902200197000000e002200039000000400020043f0000001f0230018f00000005043002720000005a0000613d00000000050000190000000506500210000000000761034f000000000707043b000000e00660003900000000007604350000000105500039000000000645004b000000520000413d000000000502004b000000690000613d0000000504400210000000000141034f0000000302200210000000e004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000400130008c000000710000413d000000e00200043d0000023a0120009c000000710000213d000001000300043d0000023a0130009c000002160000a13d0000000001000019000008dd00010430000002440420009c000001410000213d0000024c0420009c0000022b0000213d000002500420009c000003160000613d000002510420009c0000032d0000613d000002520220009c000000710000c13d0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000202043b000600000002001d000002660220009c000000710000213d0000002401100370000000000101043b000b00000001001d000002620110009c000000710000213d000000060100002900000000001004350000000601000039000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000003740000613d0000000002000411000000000212004b000004a20000c13d000000060100002900000000001004350000000701000039000a00000001001d000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000301041a000000400200043d000800000002001d000700000003001d0000000002320436000900000002001d00000000001004350000000001000414000002380210009c0000023801008041000000c00110021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d0000000705000029000000000205004b0000000902000029000000cf0000613d000000000101043b00000009020000290000000003000019000000000401041a0000026204400197000000000242043600000001011000390000000103300039000000000453004b000000c80000413d000000080120006a0000001f01100039000000200200008a000000000221016f0000000801200029000000000221004b00000000020000190000000102004039000002660310009c000002f30000213d0000000102200190000002f30000c13d000000400010043f00000008020000290000000002020433000000000302004b0000000b050000290000000906000029000002140000613d0000000003000019000000050430021000000000046400190000000004040433000000000454013f0000026204400198000005600000613d0000000103300039000000000423004b000000e30000413d000002140000013d000002540420009c000002bc0000213d000002580420009c000003350000613d000002590420009c000003440000613d0000025a0220009c000000710000c13d0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000202043b000b00000002001d000002660220009c000000710000213d0000002401100370000000000401043b000002620140009c000000710000213d0000000b0100002900000000001004350000000601000039000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c70000801002000039000a00000004001d08db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000003740000613d0000000002000411000000000212004b000004a20000c13d0000000b0100002900000000001004350000000701000039000900000001001d000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a000800000001001d0000027b01000041000000000010043900000000010004120000000400100443000000400100003900000024001004430000000001000414000002380210009c0000023801008041000000c0011002100000027c011001c7000080050200003908db08d60000040f0000000102200190000004db0000613d000000000101043b0000ffff0110018f000000080110006b000004dc0000c13d000000400100043d0000027e02000041000003760000013d000002450420009c000002c30000213d000002490420009c000003520000613d0000024a0420009c0000037d0000613d0000024b0220009c000000710000c13d0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000202043b000b00000002001d000002660220009c000000710000213d0000002401100370000000000101043b000a00000001001d000002620110009c000000710000213d0000000b0100002900000000001004350000000601000039000900000001001d000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000003740000613d0000000002000411000000000212004b000004a20000c13d0000000201000039000000000101041a000000ff01100190000004d80000c13d0000000b0100002900000000001004350000000901000029000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a000000a001100270000000400200043d000000200320003900000000001304350000000a0100002900000000001204350000000001000414000002380310009c00000238040000410000000001048019000002380320009c00000000020480190000004002200210000000c001100210000000000121019f00000268011001c70000800d0200003900000002030000390000026d040000410000000b0500002908db08d10000040f0000000101200190000000710000613d0000000b0100002900000000001004350000000901000029000000200010043f0000004002000039000000000100001908db08a70000040f000000000001041b0000000001000019000008dc0001042e0000025c0420009c0000038a0000613d0000025d0420009c000003910000613d0000025e0220009c000000710000c13d0000000002000416000000a40330008c000000710000413d000000000202004b000000710000c13d0000002402100370000000000202043b000b02660020019b000002660220009c000000710000213d0000004402100370000000000202043b000a00000002001d0000ffff0220008c000000710000213d0000006402100370000000000202043b000902380020019b000002380220009c000000710000213d0000008401100370000000000101043b000802380010019b000002380110009c000000710000213d0000000201000039000000000101041a000000ff011001900000048b0000c13d0000000b0100002900000000001004350000000701000039000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000003000411000700000003001d0000000102200190000000710000613d000000000101043b000000000301041a000000400200043d000500000002001d000400000003001d0000000002320436000600000002001d00000000001004350000000001000414000002380210009c0000023801008041000000c00110021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d0000000405000029000000000205004b0000000602000029000001f50000613d000000000101043b00000006020000290000000003000019000000000401041a0000026204400197000000000242043600000001011000390000000103300039000000000453004b000001ee0000413d000000050120006a0000001f01100039000000200200008a000000000221016f0000000501200029000000000221004b00000000020000190000000102004039000002660310009c000002f30000213d0000000102200190000002f30000c13d000000400010043f00000005020000290000000002020433000000000302004b00000007050000290000000606000029000002140000613d0000000a03000029000affff003001930000000003000019000000050430021000000000046400190000000004040433000000000454013f0000026204400198000005a60000613d0000000103300039000000000423004b0000020b0000413d0000027702000041000003760000013d000000400100043d0000000004000411000000000504004b000002e40000c13d000000440210003900000240030000410000000000320435000000240210003900000018030000390000000000320435000002410200004100000000002104350000000402100039000000200300003900000000003204350000023802000041000002380310009c0000000001028019000000400110021000000242011001c7000008dd000104300000024d0420009c0000039a0000613d0000024e0420009c000003a80000613d0000024f0220009c000000710000c13d0000000002000416000000240330008c000000710000413d000000000202004b000000710000c13d0000000401100370000000000101043b000b00000001001d000002660110009c000000710000213d0000000b0100002900000000001004350000000601000039000a00000001001d000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c70000801002000039000900000005001d08db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000003740000613d0000000b0100002900000000001004350000000a01000029000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a000b00000001001d0000000701000039000000200010043f0000000001000414000002380210009c0000023801008041000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000301041a000000400200043d000a00000002001d000700000003001d0000000002320436000800000002001d000000000010043500000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d0000000705000029000000000205004b000000080300002900000000020300190000028c0000613d000000000101043b00000000020300190000000003000019000000000401041a0000026204400197000000000242043600000001011000390000000103300039000000000453004b000002850000413d0000000a0120006a0000001f01100039000000200200008a000000000221016f0000000a01200029000000000221004b00000000020000190000000102004039000002660310009c000002f30000213d0000000102200190000002f30000c13d000000400010043f0000006002100039000000090300002900000000003204350000000b04000029000002620240019700000040031000390000000000230435000000a002400270000000000221043600000000000204350000000a02000029000000000302043300000080021000390000000000320435000000a002100039000000000403004b000002b20000613d000000000400001900000008060000290000000065060434000002620550019700000000025204360000000104400039000000000534004b000002ac0000413d00000000021200490000023803000041000002380420009c0000000002038019000002380410009c000000000103801900000040011002100000006002200210000000000112019f000008dc0001042e000002550420009c000003b60000613d000002560420009c000003d00000613d000002570220009c000003e60000613d000000710000013d000002460420009c000003e60000613d000002470420009c000003f90000613d000002480220009c000000710000c13d0000000002000416000000240330008c000000710000413d000000000202004b000000710000c13d0000000401100370000000000101043b0000026206100197000002620110009c000000710000213d000000000100041a00000262011001970000000005000411000000000115004b000004370000c13d000000000156004b0000048f0000c13d0000024101000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f0000026401000041000000c40010043f0000026501000041000008dd00010430000000000500041a0000023b05500197000000000445019f000000000040041b0000006404000039000000c00040043f00000001050000390000000406000039000000000056041b0000000505000039000000000045041b000000800020043f000000a00030043f0000023c0210009c000004130000a13d000002750100004100000000001004350000004101000039000000040010043f0000026a01000041000008dd000104300000000001000416000000000101004b000000710000c13d000000a001000039000000400010043f000000800000043f0000000301000039000000a00010043f0000028d01000041000000c00010043f0000006001000039000000e00010043f000001000000043f0000028e01000041000008dc0001042e0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000202043b000002660220009c000000710000213d0000002401100370000000000101043b000002620110009c000000710000213d000003ef0000013d0000000001000416000000000101004b000000710000c13d000000000100041a00000262011001970000000002000411000000000112004b000004370000c13d0000000201000039000000000201041a000001000300008a000000000232016f000000000021041b00000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000023d011001c70000800d0200003900000001030000390000023e040000410000049d0000013d0000000001000416000000000101004b000000710000c13d000000000100041a0000026201100197000000800010043f0000027201000041000008dc0001042e0000000001000416000000000101004b000000710000c13d0000027f01000041000000800010043f000000a00010043f000000c00010043f000000e00010043f000001000010043f000001200000043f000001400000043f000001600000043f000001800000043f0000028001000041000008dc0001042e0000000001000416000000000101004b000000710000c13d0000000001000412000f00000001001d000e00400000003d00000000010004150000000f0110008a000000050110021008db08bd0000040f0000ffff0110018f000000800010043f0000027201000041000008dc0001042e0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000202043b000b00000002001d000002660220009c000000710000213d0000002401100370000000000101043b000a00000001001d0000023a0110009c000000710000213d0000000b0100002900000000001004350000000601000039000900000001001d000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000004ad0000c13d000000400100043d000002880200004100000000002104350000023802000041000002380310009c000000000102801900000040011002100000026c011001c7000008dd000104300000000001000416000000000101004b000000710000c13d0000000401000039000000800010043f0000026e01000041000000a00010043f00000a8c01000039000000c00010043f0000820501000039000000e00010043f0000026f01000041000008dc0001042e0000000001000416000000000101004b000000710000c13d0000028901000041000000800010043f0000027201000041000008dc0001042e0000000001000416000000000101004b000000710000c13d0000000001000412001100000001001d001000000000001d0000000001000415000000110110008a000003b00000013d0000000001000416000000000101004b000000710000c13d0000000303000039000000000103041a0000026602100197000002660220009c000004410000c13d000002750100004100000000001004350000001101000039000000040010043f0000026a01000041000008dd000104300000000001000416000000000101004b000000710000c13d0000000001000412000d00000001001d000c00200000003d00000000010004150000000d0110008a000000050110021008db08bd0000040f0000023a01100197000000800010043f0000027201000041000008dc0001042e0000000001000416000000000101004b000000710000c13d0000000101000039000000000201041a00000262032001970000000006000411000000000336004b000004810000c13d000000000300041a0000023b04300197000000000464019f000000000040041b0000023b02200197000000000021041b00000238010000410000000002000414000002380420009c0000000002018019000000c00120021000000262053001970000023d011001c70000800d0200003900000003030000390000027a040000410000049d0000013d0000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000002402100370000000000202043b000002620320009c000000710000213d0000000203000039000000000303041a000000ff033001900000048b0000c13d000000a003000039000000400030043f000000800000043f0000000401100370000000000101043b000000800300003908db06740000040f0000000001000019000008dc0001042e0000000002000416000000240330008c000000710000413d000000000202004b000000710000c13d0000000401100370000000000101043b000002660110009c000000710000213d0000024101000041000000800010043f0000002001000039000000840010043f0000000f01000039000000a40010043f0000028c01000041000000c40010043f0000026501000041000008dd000104300000000002000416000000440330008c000000710000413d000000000202004b000000710000c13d0000000402100370000000000302043b000002660230009c000000710000213d0000002401100370000000000201043b000002620120009c000000710000213d000000000103001908db084f0000040f000000000101004b0000000001000019000000010100c039000000400200043d00000000001204350000023801000041000002380320009c0000000002018019000000400120021000000267011001c7000008dc0001042e0000002002100039000000400020043f00000000000104350000000201000039000000000201041a000001000300008a000000000232016f000000000021041b00000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000023d011001c70000800d0200003900000001030000390000023e0400004108db08d10000040f0000000101200190000000710000613d000000800100043d00000140000004430000016000100443000000a00100043d00000020020000390000018000200443000001a000100443000000c00100043d0000004003000039000001c000300443000001e0001004430000010000200443000000030100003900000120001004430000023f01000041000008dc0001042e0000024101000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000027801000041000000c40010043f0000026501000041000008dd00010430000002730210019700000001011000390000026601100197000000000221019f000b00000003001d000000000023041b000000c002000039000000400020043f0000000002000411000a00000002001d000000800020043f000000a00000043f00000000001004350000000601000039000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000800200043d0000026202200197000000a00300043d000000a003300210000000000223019f000000000101043b000000000021041b0000000b01000029000000000201041a000000400100043d0000000a0300002900000000003104350000000003000414000002380430009c00000238050000410000000003058019000002380410009c00000000010580190000004001100210000000c003300210000000000113019f00000271011001c700000266052001970000800d0200003900000002030000390000027404000041000b00000005001d08db08d10000040f0000000101200190000000710000613d000000400100043d0000000b0200002900000000002104350000023802000041000002380310009c0000000001028019000000400110021000000267011001c7000008dc0001042e0000024101000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000027901000041000000c40010043f0000026501000041000008dd000104300000026b01000041000000800010043f0000028101000041000008dd000104300000000101000039000000000201041a0000023b02200197000000000262019f000000000021041b00000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000023d011001c70000800d020000390000000303000039000002630400004108db08d10000040f0000000101200190000000710000613d0000000001000019000008dc0001042e000000400200043d00000269030000410000000000320435000000040320003900000000001304350000023801000041000002380320009c000000000201801900000040012002100000026a011001c7000008dd000104300000000b0100002900000000001004350000000901000029000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000201043b000000000402041a000000a0014002700000000a031000290000023a0530009c000003a20000213d0000026204400197000000a005300210000000000445019f000000000042041b000000400200043d00000020042000390000000000340435000000000012043500000238010000410000000003000414000002380430009c0000000003018019000002380420009c00000000020180190000004001200210000000c002300210000000000112019f00000268011001c70000800d02000039000000020300003900000270040000410000000b050000290000032c0000013d000000400100043d0000026b02000041000003760000013d000000000001042f0000000b0100002900000000001004350000000901000029000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000301041a000000400200043d000700000002001d000600000003001d0000000002320436000800000002001d00000000001004350000000001000414000002380210009c0000023801008041000000c00110021000000271011001c7000080100200003908db08d60000040f00000008030000290000000102200190000000710000613d0000000606000029000000000206004b000000000503001900000000020300190000050b0000613d000000000101043b00000000020500190000000003000019000000000401041a0000026204400197000000000242043600000001011000390000000103300039000000000463004b000005040000413d000000070120006a0000001f01100039000000200200008a000000000221016f0000000701200029000000000221004b00000000020000190000000102004039000002660310009c000002f30000213d0000000102200190000002f30000c13d000000400010043f00000007010000290000000001010433000000000201004b0000000a04000029000005270000613d0000000002000019000000050320021000000000035300190000000003030433000000000343013f0000026203300198000004a00000613d0000000102200039000000000312004b0000051e0000413d0000000b0100002900000000001004350000000901000029000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000201041a000900000002001d000002660220009c000002f30000213d00000009020000290000000102200039000000000021041b000000000010043500000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000271011001c7000080100200003908db08d60000040f00000001022001900000000a03000029000000710000613d000000000101043b0000000901100029000000000201041a0000023b022001970000026203300197000000000232019f000000000021041b000000400100043d00000000003104350000000002000414000002380320009c00000238040000410000000002048019000002380310009c00000000010480190000004001100210000000c002200210000000000112019f00000271011001c70000800d0200003900000002030000390000027d04000041000004d60000013d0000000202000039000000000202041a000000ff02200190000006210000c13d000000060100002900000000001004350000000a01000029000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d0000000b02000029000a02620020019b000000000301043b000000000103041a000900000001001d000000000101004b000005940000613d000880100000003d000b00000000001d000700000003001d00000000003004350000000001000414000002380210009c0000023801008041000000c00110021000000271011001c7000000080200002908db08d60000040f0000000102200190000000710000613d000000000101043b0000000b0400002900000000024100190000000705000029000000000105041a000000000202041a00000262022001970000000a0220006c0000000003050019000006230000613d000b00010040003d0000000b0210006b000900000001001d0000057c0000413d000000400100043d0000000a02000029000000000021043500000238020000410000000003000414000002380430009c0000000003028019000002380410009c00000000010280190000004001100210000000c002300210000000000112019f00000271011001c70000800d020000390000000203000039000002760400004100000006050000290000032c0000013d0000000b0100002900000000001004350000000601000039000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b000000000101041a0000026201100198000003740000613d0000000401000039000500000001001d000000000201041a000000010100008a000600000002001d000000000212004b000003a20000613d000000060200002900000001022000390000000503000029000000000023041b0000000502000039000000000302041a000400000003001d000000000113004b000003a20000613d00000004010000290000000101100039000000000012041b000000400100043d000300000001001d000002820110009c000002f30000213d00000003030000290000006001300039000000400010043f00000040023000390000000801000029000200000002001d00000000001204350000000b0100002900000000021304360000000901000029000100000002001d0000000000120435000000060100002900000000001004350000000801000039000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000030200002900000000020204330000026602200197000000000101043b000000000301041a0000028303300197000000000223019f0000000103000029000000000303043300000040033002100000028403300197000000000232019f0000000203000029000000000303043300000060033002100000028503300197000000000232019f000000000021041b000000400100043d00000080021000390000000803000029000000000032043500000060021000390000000903000029000000000032043500000040021000390000000a0300002900000000003204350000002002100039000000040300002900000000003204350000000602000029000000000021043500000005030000290000000202300367000000000502043b0000000002000414000002380420009c00000238060000410000000002068019000002380410009c00000000010680190000004001100210000000c002200210000000000112019f00000286011001c70000800d0200003900000287040000410000000b06000029000000070700002908db08d10000040f0000000101200190000000710000613d000000400100043d00000006020000290000047a0000013d0000026b02000041000003760000013d00000009020000290009000100200092000000090110006c000006580000a13d0000000701000029000000000010043500000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b0000000901100029000000000101041a000902620010019b0000000701000029000000000101041a0000000b0110006c000006580000a13d0000000701000029000000000010043500000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d000000000101043b0000000b01100029000000000201041a0000023b0220019700000009022001af000000000021041b0000000701000029000000000101041a000b00000001001d000000000101004b0000065e0000c13d000002750100004100000000001004350000003101000039000000040010043f0000026a01000041000008dd00010430000002750100004100000000001004350000003201000039000000040010043f0000026a01000041000008dd000104300000000701000029000000000010043500000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000271011001c7000080100200003908db08d60000040f0000000102200190000000710000613d0000000b02000029000000010220008a000000000101043b0000000001210019000000000301041a0000023b03300197000000000031041b0000000701000029000000000021041b000005940000013d000c000000000002000a00000003001d000300000002001d0000000002000414000400000002001d000b00000001001d00000000001004350000000801000039000200000001001d000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f00000001022001900000081f0000613d000000000101043b000000000101041a0000026601100198000008340000613d00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f00000001022001900000081f0000613d000000400200043d000500000002001d0000028f0220009c0000000a08000029000008210000813d000000000101043b00000005030000290000006002300039000000400020043f000000000101041a0000026602100197000000000423043600000040021002700000023802200197000000000024043500000040073000390000006001100270000002380110019700000000001704350000000002080433000000000302004b000100000004001d000006b20000613d000000000112004b000007080000613d000000400100043d0000029002000041000008480000013d00000005021002100000003f032000390000029103300197000000400800043d0000000003380019000000000483004b00000000040000190000000104004039000002660530009c000008210000213d0000000104400190000008210000c13d000000400030043f00000000091804360000001f0120018f0000000502200272000006ce0000613d00000000030000310000000203300367000000000400001900000005054002100000000006590019000000000553034f000000000505043b00000000005604350000000104400039000000000524004b000006c60000413d000000000101004b000006d00000613d00000000010704330000023801100198000007080000613d000900400000003d000880100000003d0000000003000019000a00000008001d000700000007001d000600000009001d000000400100043d0000004002100039000c00000003001d0000000000320435000000090200002900000000022104360000000b030000290000000000320435000002820310009c000008210000213d0000006003100039000000400030043f000002380320009c0000023804000041000000000204801900000040022002100000000001010433000002380310009c00000000010480190000006001100210000000000121019f0000000002000414000002380320009c0000000002048019000000c002200210000000000112019f0000023d011001c7000000080200002908db08d60000040f00000001022001900000081f0000613d0000000a0800002900000000020804330000000c03000029000000000232004b00000007070000290000000609000029000008270000a13d00000005023002100000000002920019000000000101043b0000000000120435000000010330003900000000010704330000023801100197000000000113004b000006d90000413d000000400700043d00000044017000390000004003000039000000000031043500000020017000390000029203000041000000000031043500000024037000390000000b0400002900000000004304350000000004080433000000640370003900000000004304350000008403700039000000000504004b0000071f0000613d00000000050000190000002008800039000000000608043300000000036304360000000105500039000000000645004b000007190000413d0000000003730049000000200430008a00000000004704350000001f03300039000000200600008a000000000463016f0000000003740019000000000443004b00000000040000190000000104004039000002660530009c000008210000213d0000000104400190000008210000c13d000000400030043f0000000209000039000000000309041a000001000a00008a0000000003a3016f00000001033001bf000000000039041b0000000302000029000000040320008c0000073c0000c13d00000001080000390000000101000031000000000201004b000007580000c13d000007830000013d00000000050704330000023803000041000002380450009c0000000005038019000002380410009c000000000103801900000040011002100000006003500210000000000113019f00000001030000290000000003030433000000c0033002100000029303300197000000000131019f000c00000009001d000a0000000a001d000900000006001d08db08d10000040f00000009060000290000000a0a0000290000000c09000029000000000802001900030000000103550000006001100270000102380010019d0000023801100197000000000201004b000007830000613d0000001f02100039000000000262016f0000003f02200039000000000262016f000000400300043d0000000002230019000000000432004b00000000040000190000000104004039000002660520009c000008210000213d0000000104400190000008210000c13d000000400020043f0000001f0210018f000000000313043600000003040003670000000501100272000007740000613d000000000500001900000005065002100000000007630019000000000664034f000000000606043b00000000006704350000000105500039000000000615004b0000076c0000413d000000000502004b000007830000613d0000000501100210000000000414034f00000000011300190000000302200210000000000301043300000000032301cf000000000323022f000000000404043b0000010002200089000000000424022f00000000022401cf000000000232019f0000000000210435000800000008001d000000000109041a0000000001a1016f000000000019041b0000000002000414000c00000002001d000000040120006b0000082d0000413d0000027b0100004100000000001004390000000001000412000a00000001001d00000004001004430000002001000039000000240010044300000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000027c011001c7000080050200003908db08d60000040f0000000102200190000008330000613d0000000c050000290000000402500069000000000101043b0000023a0110019700000000362100a9000000040350006b0000000003000019000000002326c0d9000900000006001d000000040250006b000007a90000613d000000000131004b0000082d0000c13d0000027b0100004100000000001004390000000a010000290000000400100443000000240000044300000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000027c011001c7000080050200003908db08d60000040f0000000102200190000008330000613d000000000101043b0000023a01100197000c00090010002d0000000c0110006b0000000001000019000000010100403900000001011001900000082d0000c13d00000005010000290000000001010433000002660110019700000000001004350000000601000039000a00000001001d000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f0000000c030000290000023a0330019700000001022001900000081f0000613d000000000101043b000000000101041a000000a001100270000c00000003001d000000000131004b000008460000413d00000005010000290000000001010433000002660110019700000000001004350000000a01000029000000200010043f00000238010000410000000002000414000002380320009c0000000002018019000000c00120021000000268011001c7000080100200003908db08d60000040f00000001022001900000000c040000290000081f0000613d000000000101043b000000000201041a000000a00320027000000000034300490000023a0430009c0000082d0000213d0000026202200197000000a003300210000000000223019f000000000021041b0000000b0100002900000000001004350000000201000029000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f00000001022001900000000c040000290000081f0000613d000000000101043b000000000001041b0000000801000029000000010110018f000000400200043d00000040032000390000000000130435000000200120003900000000004104350000000b0500002900000000005204350000000001000414000002380310009c00000238040000410000000001048019000002380320009c00000000020480190000004002200210000000c001100210000000000121019f00000294011001c70000800d020000390000000203000039000002950400004108db08d10000040f00000001012001900000081f0000613d000000000001042d0000000001000019000008dd00010430000002750100004100000000001004350000004101000039000000040010043f0000026a01000041000008dd00010430000002750100004100000000001004350000003201000039000000040010043f0000026a01000041000008dd00010430000002750100004100000000001004350000001101000039000000040010043f0000026a01000041000008dd00010430000000000001042f000000400100043d000000440210003900000297030000410000000000320435000000240210003900000013030000390000000000320435000002410200004100000000002104350000000402100039000000200300003900000000003204350000023802000041000002380310009c0000000001028019000000400110021000000242011001c7000008dd00010430000000400100043d000002960200004100000000002104350000023802000041000002380310009c000000000102801900000040011002100000026c011001c7000008dd000104300004000000000002000400000002001d000002660110019700000000001004350000000701000039000000200010043f00000238030000410000000001000414000002380210009c0000000001038019000000c00110021000000268011001c7000080100200003908db08d60000040f00000001022001900000089e0000613d000000000101043b000000000301041a000000400200043d000300000002001d000200000003001d0000000002320436000100000002001d00000000001004350000000001000414000002380210009c0000023801008041000000c00110021000000271011001c7000080100200003908db08d60000040f00000001022001900000089e0000613d0000000205000029000000000205004b000000010600002900000000020600190000087f0000613d000000000101043b00000000020600190000000003000019000000000401041a0000026204400197000000000242043600000001011000390000000103300039000000000453004b000008780000413d000000030400002900000000014200490000001f01100039000000200200008a000000000221016f0000000001420019000000000221004b00000000020000190000000102004039000002660310009c0000000405000029000008a00000213d0000000102200190000008a00000c13d000000400010043f0000000002040433000000000102004b0000089c0000613d00000001010000390000000003000019000000050430021000000000046400190000000004040433000000000454013f00000262044001980000089d0000613d0000000103300039000000000423004b000008930000413d0000000001000019000000000001042d0000000001000019000008dd00010430000002750100004100000000001004350000004101000039000000040010043f0000026a01000041000008dd00010430000000000001042f0000023803000041000002380410009c00000000010380190000004001100210000002380420009c00000000020380190000006002200210000000000112019f0000000002000414000002380420009c0000000002038019000000c002200210000000000112019f0000023d011001c7000080100200003908db08d60000040f0000000102200190000008bb0000613d000000000101043b000000000001042d0000000001000019000008dd000104300000027b0200004100000000002004390000000501100270000000000201003100000004002004430000000101010031000000240010044300000238010000410000000002000414000002380320009c0000000002018019000000c0012002100000027c011001c7000080050200003908db08d60000040f0000000102200190000008d00000613d000000000101043b000000000001042d000000000001042f000008d4002104210000000102000039000000000001042d0000000002000019000000000001042d000008d9002104230000000102000039000000000001042d0000000002000019000000000001042d000008db00000432000008dc0001042e000008dd000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe00000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffdf02000000000000000000000000000000000000000000000000000000000000004b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be000000020000000000000000000000000000010000000100000000000000000043616e6e6f7420736574206f776e657220746f207a65726f000000000000000008c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000000000000000000000000000000000000000000000000000008b673e7900000000000000000000000000000000000000000000000000000000afc69b5200000000000000000000000000000000000000000000000000000000e82ad7d300000000000000000000000000000000000000000000000000000000e82ad7d400000000000000000000000000000000000000000000000000000000ed5eb06d00000000000000000000000000000000000000000000000000000000f2fde38b00000000000000000000000000000000000000000000000000000000afc69b5300000000000000000000000000000000000000000000000000000000c3f909d400000000000000000000000000000000000000000000000000000000d7ae1d3000000000000000000000000000000000000000000000000000000000a21a23e300000000000000000000000000000000000000000000000000000000a21a23e400000000000000000000000000000000000000000000000000000000a410347f00000000000000000000000000000000000000000000000000000000a47c7696000000000000000000000000000000000000000000000000000000008b673e7a000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000009f87fad7000000000000000000000000000000000000000000000000000000005fbbc0d10000000000000000000000000000000000000000000000000000000079ba50960000000000000000000000000000000000000000000000000000000079ba509700000000000000000000000000000000000000000000000000000000808974ff0000000000000000000000000000000000000000000000000000000082359740000000000000000000000000000000000000000000000000000000005fbbc0d20000000000000000000000000000000000000000000000000000000064d51a2a000000000000000000000000000000000000000000000000000000007341c10c00000000000000000000000000000000000000000000000000000000356dac7000000000000000000000000000000000000000000000000000000000356dac71000000000000000000000000000000000000000000000000000000003d18651e000000000000000000000000000000000000000000000000000000005d3b1d3000000000000000000000000000000000000000000000000000000000000122910000000000000000000000000000000000000000000000000000000004c357cb0000000000000000000000000000000000000000000000000000000008e3898e000000000000000000000000ffffffffffffffffffffffffffffffffffffffffed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127843616e6e6f74207472616e7366657220746f2073656c660000000000000000000000000000000000000000000000000000000064000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffffff00000000000000000000000000000000000000200000000000000000000000000200000000000000000000000000000000000040000000000000000000000000d8a3fb52000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000ed3ba6a6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000e8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981500000000000000000000000000000000000000000000000000000000002625a00000000000000000000000000000000000000080000000800000000000000000d39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f802000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000020000000800000000000000000ffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf4e487b7100000000000000000000000000000000000000000000000000000000f9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc71e83137000000000000000000000000000000000000000000000000000000004f6e6c792063616c6c61626c65206279206f776e6572000000000000000000004d7573742062652070726f706f736564206f776e6572000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e0200000200000000000000000000000000000044000000000000000000000000752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc305a48e0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000186a000000000000000000000000000000000000001200000008000000000000000000000000000000000000000000000000000000004000000800000000000000000000000000000000000000000000000000000000000000000ffffffffffffff9fffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000000000000000000000000000ffffffff00000000000000000000000002000000000000000000000000000000000000a000000000000000000000000063373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a97721f6a65b600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e35fa931a00007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000000000000000000000000000000000000000000000000ffffffffffffff7f6e6f7420696d706c656d656e746564000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001e84800000000000000000000000000000000000000080000000a00000000000000000000000000000000000000000000000000000000000000000ffffffffffffffa03f3df5b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003fffffffe01fe543e30000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000002000000000000000000000000000000000000600000000000000000000000007dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4f4d678b8000000000000000000000000000000000000000000000000000000006e6f6e6578697374656e742072657175657374000000000000000000000000007dcafee03085bd0f69ec4c97d7de55c13ac83c65683fc2ee8c6d0b23dcb65c64"
          },
          "methodIdentifiers": {
            "BASE_FEE()": "3d18651e",
            "GAS_PRICE_LINK()": "a410347f",
            "MAX_CONSUMERS()": "64d51a2a",
            "acceptOwnership()": "79ba5097",
            "acceptSubscriptionOwnerTransfer(uint64)": "82359740",
            "addConsumer(uint64,address)": "7341c10c",
            "cancelSubscription(uint64,address)": "d7ae1d30",
            "consumerIsAdded(uint64,address)": "ed5eb06d",
            "createSubscription()": "a21a23e4",
            "fulfillRandomWords(uint256,address)": "808974ff",
            "fulfillRandomWordsWithOverride(uint256,address,uint256[])": "08e3898e",
            "fundSubscription(uint64,uint96)": "afc69b53",
            "getConfig()": "c3f909d4",
            "getFallbackWeiPerUnitLink()": "356dac71",
            "getFeeConfig()": "5fbbc0d2",
            "getRequestConfig()": "00012291",
            "getSubscription(uint64)": "a47c7696",
            "owner()": "8da5cb5b",
            "pendingRequestExists(uint64)": "e82ad7d4",
            "removeConsumer(uint64,address)": "9f87fad7",
            "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)": "5d3b1d30",
            "requestSubscriptionOwnerTransfer(uint64,address)": "04c357cb",
            "setConfig()": "8b673e7a",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\", 1:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\", 2:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\", 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\", 4:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\"\nobject \"VRFCoordinatorV2Mock_1025\" {\n    code {\n        {\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            let _1 := memoryguard(0xe0)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"VRFCoordinatorV2Mock_1025\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            let _2 := sub(shl(64, 1), 1)\n            if or(gt(newFreePtr, _2), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x24)\n            }\n            let _3 := 64\n            mstore(_3, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), _3)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            let value0 := abi_decode_uint96_fromMemory(_1)\n            let value1 := abi_decode_uint96_fromMemory(add(_1, 32))\n            if /** @src 3:598:620  \"newOwner != address(0)\" */ iszero(/** @src 1:2111:2121  \"msg.sender\" */ caller())\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            {\n                let memPtr := mload(_3)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 24)\n                mstore(add(memPtr, 68), \"Cannot set owner to zero\")\n                revert(memPtr, 100)\n            }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ not(sub(shl(160, 1), 1))), /** @src 1:2111:2121  \"msg.sender\" */ caller()))\n            /// @src 1:508:511  \"100\"\n            mstore(192, 0x64)\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            sstore(/** @src 1:1623:1624  \"1\" */ 0x04, /** @src 3:684:710  \"pendingOwner != address(0)\" */ 1)\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            sstore(/** @src 1:1652:1655  \"100\" */ 0x05, /** @src 1:508:511  \"100\" */ 0x64)\n            /// @src 1:2129:2148  \"BASE_FEE = _baseFee\"\n            mstore(128, value0)\n            /// @src 1:2154:2184  \"GAS_PRICE_LINK = _gasPriceLink\"\n            mstore(160, value1)\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            let memPtr_1 := mload(_3)\n            let newFreePtr_1 := add(memPtr_1, 32)\n            if or(gt(newFreePtr_1, _2), lt(newFreePtr_1, memPtr_1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                mstore(/** @src 1:1623:1624  \"1\" */ 0x04, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x24)\n            }\n            mstore(_3, newFreePtr_1)\n            mstore(memPtr_1, /** @src -1:-1:-1 */ 0)\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            sstore(/** @src 1:2332:2374  \"s_config = Config({reentrancyLock: false})\" */ 0x02, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:2332:2374  \"s_config = Config({reentrancyLock: false})\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ not(255)))\n            /// @src 1:2385:2396  \"ConfigSet()\"\n            let _4 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n            /// @src 1:2385:2396  \"ConfigSet()\"\n            log1(/** @src -1:-1:-1 */ 0, 0, /** @src 1:2385:2396  \"ConfigSet()\" */ 0x4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be)\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            let _5 := datasize(\"VRFCoordinatorV2Mock_1025_deployed\")\n            codecopy(_4, dataoffset(\"VRFCoordinatorV2Mock_1025_deployed\"), _5)\n            setimmutable(_4, \"107\", mload(/** @src 1:2129:2148  \"BASE_FEE = _baseFee\" */ 128))\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            setimmutable(_4, \"109\", mload(/** @src 1:2154:2184  \"GAS_PRICE_LINK = _gasPriceLink\" */ 160))\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            setimmutable(_4, \"112\", mload(/** @src 1:508:511  \"100\" */ 192))\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            return(_4, _5)\n        }\n        function abi_decode_uint96_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(96, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 1:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\", 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\"\n    object \"VRFCoordinatorV2Mock_1025_deployed\" {\n        code {\n            {\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x00012291 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        finalize_allocation_19288(_1)\n                        mstore(_1, 0)\n                        let _4 := 0x20\n                        let memPos := mload(_2)\n                        let tail := add(memPos, 96)\n                        mstore(memPos, /** @src 1:7608:7609  \"3\" */ 0x03)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos, 0x20), /** @src 1:7611:7618  \"2000000\" */ 0x1e8480)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos, _2), 96)\n                        let pos := tail\n                        let length := mload(_1)\n                        mstore(tail, length)\n                        pos := add(memPos, 128)\n                        let srcPtr := add(_1, 0x20)\n                        let i := 0\n                        for { } lt(i, length) { i := add(i, 1) }\n                        {\n                            mstore(pos, mload(srcPtr))\n                            pos := add(pos, _4)\n                            srcPtr := add(srcPtr, _4)\n                        }\n                        return(memPos, sub(pos, memPos))\n                    }\n                    case 0x04c357cb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        pop(abi_decode_uint64())\n                        pop(abi_decode_address())\n                        /// @ast-id 1000 @src 1:9571:9714  \"function requestSubscriptionOwnerTransfer(uint64 /*_subId*\\/, address /*_newOwner*\\/) external pure override {...\"\n                        /** @ast-id 1000 */ /** @ast-id 1000 */ fun_requestSubscriptionOwnerTransfer()\n                    }\n                    case /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x08e3898e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value1 := abi_decode_address()\n                        let offset := calldataload(68)\n                        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n                        if iszero(slt(add(offset, 35), calldatasize())) { revert(0, 0) }\n                        let _5 := calldataload(add(_3, offset))\n                        let _6 := array_allocation_size_array_uint256_dyn(_5)\n                        let memPtr := mload(_2)\n                        finalize_allocation(memPtr, _6)\n                        let dst := memPtr\n                        mstore(memPtr, _5)\n                        let _7 := 32\n                        dst := add(memPtr, 32)\n                        let srcEnd := add(add(offset, shl(5, _5)), 36)\n                        if gt(srcEnd, calldatasize()) { revert(0, 0) }\n                        let src := add(offset, 36)\n                        for { } lt(src, srcEnd) { src := add(src, _7) }\n                        {\n                            mstore(dst, calldataload(src))\n                            dst := add(dst, _7)\n                        }\n                        fun_fulfillRandomWordsWithOverride(calldataload(_3), value1, memPtr)\n                        return(0, 0)\n                    }\n                    case 0x356dac71 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, /** @src 1:9531:9547  \"4000000000000000\" */ 0x0e35fa931a0000)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(memPos_1, 32)\n                    }\n                    case 0x3d18651e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, and(/** @src 1:390:422  \"uint96 public immutable BASE_FEE\" */ loadimmutable(\"107\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xffffffffffffffffffffffff))\n                        return(memPos_2, 32)\n                    }\n                    case 0x5d3b1d30 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 160) { revert(0, 0) }\n                        let value := calldataload(36)\n                        let _8 := 0xffffffffffffffff\n                        let _9 := and(value, _8)\n                        if iszero(eq(value, _9)) { revert(0, 0) }\n                        let value_1 := calldataload(68)\n                        let _10 := and(value_1, 0xffff)\n                        if iszero(eq(value_1, _10)) { revert(0, 0) }\n                        let value_2 := calldataload(100)\n                        let _11 := 0xffffffff\n                        let _12 := and(value_2, _11)\n                        if iszero(eq(value_2, _12)) { revert(0, 0) }\n                        let value_3 := calldataload(132)\n                        let _13 := and(value_3, _11)\n                        if iszero(eq(value_3, _13)) { revert(0, 0) }\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        if /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:9377:9385  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xff)\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        {\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            let _14 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            mstore(_14, shl(225, 0x769dd353))\n                            revert(_14, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        /// @src 1:2766:2846  \"if (!consumerIsAdded(_subId, _consumer)) {...\"\n                        if /** @src 1:2770:2805  \"!consumerIsAdded(_subId, _consumer)\" */ iszero(/** @src 1:2771:2805  \"consumerIsAdded(_subId, _consumer)\" */ fun_consumerIsAdded(value, /** @src 1:5832:5842  \"msg.sender\" */ caller()))\n                        /// @src 1:2766:2846  \"if (!consumerIsAdded(_subId, _consumer)) {...\"\n                        {\n                            /// @src 1:2822:2839  \"InvalidConsumer()\"\n                            let _15 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:2822:2839  \"InvalidConsumer()\"\n                            mstore(_15, shl(224, 0x71e83137))\n                            revert(_15, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        mstore(0, _9)\n                        mstore(32, /** @src 1:5872:5887  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:5868:5960  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        if /** @src 1:5872:5915  \"s_subscriptions[_subId].owner == address(0)\" */ iszero(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(keccak256(0, _2)), sub(shl(160, 1), 1)))\n                        /// @src 1:5868:5960  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        {\n                            /// @src 1:5932:5953  \"InvalidSubscription()\"\n                            let _16 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:5932:5953  \"InvalidSubscription()\"\n                            mstore(_16, shl(225, 0x0fb532db))\n                            revert(_16, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        let _17 := sload(_3)\n                        sstore(_3, /** @src 1:5986:6003  \"s_nextRequestId++\" */ increment_uint256(_17))\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _18 := sload(/** @src 1:6027:6042  \"s_nextPreSeed++\" */ 0x05)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        sstore(/** @src 1:6027:6042  \"s_nextPreSeed++\" */ 0x05, increment_uint256(_18))\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let memPtr_1 := mload(_2)\n                        finalize_allocation_15220(memPtr_1)\n                        mstore(memPtr_1, _9)\n                        /// @src 1:6073:6155  \"Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords})\"\n                        let _19 := add(memPtr_1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 32)\n                        mstore(_19, _12)\n                        /// @src 1:6073:6155  \"Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords})\"\n                        let _20 := add(memPtr_1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _2)\n                        mstore(_20, _13)\n                        mstore(0, _17)\n                        mstore(32, /** @src 1:6049:6059  \"s_requests\" */ 0x08)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let dataSlot := keccak256(0, _2)\n                        let _21 := and(mload(memPtr_1), _8)\n                        let _22 := sload(dataSlot)\n                        let toInsert := and(shl(_2, mload(_19)), 0xffffffff0000000000000000)\n                        sstore(dataSlot, or(or(or(and(_22, not(0xffffffffffffffffffffffffffffffff)), _21), toInsert), and(shl(96, mload(_20)), shl(96, 0xffffffff))))\n                        /// @src 1:6167:6351  \"RandomWordsRequested(...\"\n                        let _23 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                        mstore(_23, _17)\n                        mstore(add(_23, 32), _18)\n                        mstore(add(_23, _2), _10)\n                        mstore(add(_23, 96), _12)\n                        mstore(add(_23, 128), _13)\n                        /// @src 1:6167:6351  \"RandomWordsRequested(...\"\n                        log4(_23, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 160, /** @src 1:6167:6351  \"RandomWordsRequested(...\" */ 0x63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a9772, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ calldataload(_3), /** @src 1:6167:6351  \"RandomWordsRequested(...\" */ _9, /** @src 1:5832:5842  \"msg.sender\" */ caller())\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, _17)\n                        return(memPos_3, 32)\n                    }\n                    case 0x5fbbc0d2 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_4 := mload(_2)\n                        /// @src 1:9170:9176  \"100000\"\n                        let _24 := 0x0186a0\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(memPos_4, /** @src 1:9170:9176  \"100000\" */ _24)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_4, 32), /** @src 1:9170:9176  \"100000\" */ _24)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_4, _2), /** @src 1:9170:9176  \"100000\" */ _24)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_4, 96), /** @src 1:9170:9176  \"100000\" */ _24)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_4, 128), /** @src 1:9170:9176  \"100000\" */ _24)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_4, 160), 0)\n                        mstore(add(memPos_4, 192), 0)\n                        mstore(add(memPos_4, 224), 0)\n                        mstore(add(memPos_4, 256), 0)\n                        return(memPos_4, 288)\n                    }\n                    case 0x64d51a2a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, and(/** @src 1:468:511  \"uint16 public immutable MAX_CONSUMERS = 100\" */ loadimmutable(\"112\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xffff))\n                        return(memPos_5, 32)\n                    }\n                    case 0x7341c10c {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0 := abi_decode_uint64()\n                        let value1_1 := abi_decode_address()\n                        mstore(0, and(value0, 0xffffffffffffffff))\n                        mstore(32, /** @src 1:7309:7324  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let cleaned := and(sload(keccak256(0, _2)), sub(shl(160, 1), 1))\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        if /** @src 1:7348:7367  \"owner == address(0)\" */ iszero(cleaned)\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            let _25 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            mstore(_25, /** @src 1:5932:5953  \"InvalidSubscription()\" */ shl(225, 0x0fb532db))\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            revert(_25, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        if /** @src 1:7421:7440  \"msg.sender != owner\" */ iszero(eq(/** @src 1:7421:7431  \"msg.sender\" */ caller(), /** @src 1:7421:7440  \"msg.sender != owner\" */ cleaned))\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        {\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            let _26 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            mstore(_26, shl(225, 0x6c51fda9))\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            mstore(/** @src 1:7457:7478  \"MustBeSubOwner(owner)\" */ add(_26, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3), cleaned)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            revert(_26, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 36)\n                        }\n                        /// @src 1:7490:7491  \"_\"\n                        fun_addConsumer_inner(value0, value1_1)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0x79ba5097 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _27 := sload(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _28 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 3:1136:1164  \"msg.sender == s_pendingOwner\" */ eq(/** @src 3:1136:1146  \"msg.sender\" */ caller(), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(_27, _28)))\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 22)\n                            mstore(add(memPtr_2, 68), \"Must be proposed owner\")\n                            revert(memPtr_2, 100)\n                        }\n                        let _29 := sload(0)\n                        let _30 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(0, or(and(_29, _30), /** @src 3:1136:1146  \"msg.sender\" */ caller()))\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        sstore(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(_27, _30))\n                        /// @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\"\n                        log3(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0, 0, /** @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(_29, _28), /** @src 3:1136:1146  \"msg.sender\" */ caller())\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0x808974ff {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value1_2 := abi_decode_address()\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        if /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:9377:9385  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xff)\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        {\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            let _31 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            mstore(_31, shl(225, 0x769dd353))\n                            revert(_31, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        let memPtr_3 := mload(_2)\n                        finalize_allocation_19288(memPtr_3)\n                        mstore(memPtr_3, 0)\n                        /// @src 1:3560:3576  \"new uint256[](0)\"\n                        fun_fulfillRandomWordsWithOverride(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ calldataload(_3), /** @src 1:3560:3576  \"new uint256[](0)\" */ value1_2, memPtr_3)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0x82359740 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        pop(abi_decode_uint64())\n                        /// @ast-id 1011 @src 1:9718:9837  \"function acceptSubscriptionOwnerTransfer(uint64 /*_subId*\\/) external pure override {...\"\n                        /** @ast-id 1011 */ /** @ast-id 1011 */ fun_requestSubscriptionOwnerTransfer()\n                    }\n                    case /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x8b673e7a {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        /// @src 3:2048:2107  \"modifier onlyOwner() {...\"\n                        fun_validateOwnership()\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let memPtr_4 := mload(_2)\n                        let newFreePtr := add(memPtr_4, 32)\n                        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr_4))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 0x24)\n                        }\n                        sstore(/** @src 1:2332:2374  \"s_config = Config({reentrancyLock: false})\" */ 0x02, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:2332:2374  \"s_config = Config({reentrancyLock: false})\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ not(255)))\n                        /// @src 1:2385:2396  \"ConfigSet()\"\n                        log1(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0, 0, /** @src 1:2385:2396  \"ConfigSet()\" */ 0x4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, cleaned_1)\n                        return(memPos_6, 32)\n                    }\n                    case 0x9f87fad7 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_1 := abi_decode_uint64()\n                        let value1_3 := abi_decode_address()\n                        let _32 := and(value0_1, 0xffffffffffffffff)\n                        mstore(0, _32)\n                        mstore(32, /** @src 1:7309:7324  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _33 := sub(shl(160, 1), 1)\n                        let cleaned_2 := and(sload(keccak256(0, _2)), _33)\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        if /** @src 1:7348:7367  \"owner == address(0)\" */ iszero(cleaned_2)\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            let _34 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            mstore(_34, /** @src 1:5932:5953  \"InvalidSubscription()\" */ shl(225, 0x0fb532db))\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            revert(_34, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        if /** @src 1:7421:7440  \"msg.sender != owner\" */ iszero(eq(/** @src 1:7421:7431  \"msg.sender\" */ caller(), /** @src 1:7421:7440  \"msg.sender != owner\" */ cleaned_2))\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        {\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            let _35 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            mstore(_35, shl(225, 0x6c51fda9))\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            mstore(/** @src 1:7457:7478  \"MustBeSubOwner(owner)\" */ add(_35, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3), cleaned_2)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            revert(_35, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 36)\n                        }\n                        /// @src 1:2766:2846  \"if (!consumerIsAdded(_subId, _consumer)) {...\"\n                        if /** @src 1:2770:2805  \"!consumerIsAdded(_subId, _consumer)\" */ iszero(/** @src 1:2771:2805  \"consumerIsAdded(_subId, _consumer)\" */ fun_consumerIsAdded(value0_1, value1_3))\n                        /// @src 1:2766:2846  \"if (!consumerIsAdded(_subId, _consumer)) {...\"\n                        {\n                            /// @src 1:2822:2839  \"InvalidConsumer()\"\n                            let _36 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:2822:2839  \"InvalidConsumer()\"\n                            mstore(_36, shl(224, 0x71e83137))\n                            revert(_36, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        if /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:9377:9385  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xff)\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        {\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            let _37 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            mstore(_37, shl(225, 0x769dd353))\n                            revert(_37, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        mstore(0, _32)\n                        mstore(32, /** @src 1:8190:8201  \"s_consumers\" */ 0x07)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let dataSlot_1 := keccak256(0, _2)\n                        /// @src 1:8220:8233  \"uint256 i = 0\"\n                        let var_i := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0\n                        let _38 := and(/** @src 1:8274:8299  \"consumers[i] == _consumer\" */ value1_3, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _33)\n                        /// @src 1:8215:8441  \"for (uint256 i = 0; i < consumers.length; i++) {...\"\n                        for { }\n                        /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1\n                        /// @src 1:8220:8233  \"uint256 i = 0\"\n                        {\n                            /// @src 1:8257:8260  \"i++\"\n                            var_i := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ add(/** @src 1:8257:8260  \"i++\" */ var_i, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1)\n                        }\n                        /// @src 1:8257:8260  \"i++\"\n                        {\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            let _39 := sload(/** @src 1:8239:8255  \"consumers.length\" */ dataSlot_1)\n                            /// @src 1:8235:8255  \"i < consumers.length\"\n                            if iszero(lt(var_i, _39)) { break }\n                            /// @src 1:8274:8286  \"consumers[i]\"\n                            let _40, _41 := storage_array_index_access_address_dyn_ptr(dataSlot_1, var_i)\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            let _42 := sload(/** @src 1:8274:8286  \"consumers[i]\" */ _40)\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            let _43 := 3\n                            /// @src 1:8270:8435  \"if (consumers[i] == _consumer) {...\"\n                            if /** @src 1:8274:8299  \"consumers[i] == _consumer\" */ eq(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(shr(shl(_43, _41), _42), _33), _38)\n                            /// @src 1:8270:8435  \"if (consumers[i] == _consumer) {...\"\n                            {\n                                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                                let _44 := not(0)\n                                let diff := add(_39, _44)\n                                if gt(diff, _39)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x11)\n                                    revert(0, 36)\n                                }\n                                /// @src 1:8326:8357  \"consumers[consumers.length - 1]\"\n                                let _45, _46 := storage_array_index_access_address_dyn_ptr(dataSlot_1, /** @src 1:8336:8356  \"consumers.length - 1\" */ diff)\n                                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                                let value_4 := and(shr(shl(_43, _46), sload(/** @src 1:8326:8357  \"consumers[consumers.length - 1]\" */ _45)), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _33)\n                                /// @src 1:8367:8379  \"consumers[i]\"\n                                let _47, _48 := storage_array_index_access_address_dyn_ptr(dataSlot_1, var_i)\n                                /// @src 1:8367:8386  \"consumers[i] = last\"\n                                update_storage_value_address_to_address(_47, _48, value_4)\n                                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                                let oldLen := sload(dataSlot_1)\n                                if iszero(oldLen)\n                                {\n                                    mstore(0, shl(224, 0x4e487b71))\n                                    mstore(_3, 0x31)\n                                    revert(0, 36)\n                                }\n                                let newLen := add(oldLen, _44)\n                                let slot, offset_1 := storage_array_index_access_address_dyn_ptr(dataSlot_1, newLen)\n                                let _49 := sload(slot)\n                                sstore(slot, and(_49, not(shl(shl(_43, offset_1), _33))))\n                                sstore(dataSlot_1, newLen)\n                                /// @src 1:8421:8426  \"break\"\n                                break\n                            }\n                        }\n                        /// @src 1:8452:8486  \"ConsumerRemoved(_subId, _consumer)\"\n                        let _50 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                        mstore(_50, _38)\n                        /// @src 1:8452:8486  \"ConsumerRemoved(_subId, _consumer)\"\n                        log2(_50, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 32, /** @src 1:8452:8486  \"ConsumerRemoved(_subId, _consumer)\" */ 0xf9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc, _32)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0xa21a23e4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _51 := sload(/** @src 1:6460:6476  \"s_currentSubId++\" */ 0x03)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _52 := 0xffffffffffffffff\n                        let cleaned_3 := and(_51, _52)\n                        if eq(cleaned_3, _52)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(0, 0x24)\n                        }\n                        let _53 := and(add(cleaned_3, 1), _52)\n                        sstore(/** @src 1:6460:6476  \"s_currentSubId++\" */ 0x03, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ or(and(_51, not(0xffffffffffffffff)), _53))\n                        let memPtr_5 := mload(_2)\n                        let newFreePtr_1 := add(memPtr_5, _2)\n                        if or(gt(newFreePtr_1, _52), lt(newFreePtr_1, memPtr_5))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        mstore(memPtr_5, /** @src 1:6537:6547  \"msg.sender\" */ caller())\n                        /// @src 1:6516:6561  \"Subscription({owner: msg.sender, balance: 0})\"\n                        let _54 := add(memPtr_5, 32)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(_54, 0)\n                        mstore(0, _53)\n                        mstore(/** @src 1:6516:6561  \"Subscription({owner: msg.sender, balance: 0})\" */ 32, /** @src 1:6482:6497  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let dataSlot_2 := keccak256(0, _2)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), shl(160, 0xffffffffffffffffffffffff)), and(mload(memPtr_5), sub(shl(160, 1), 1))))\n                        update_storage_value_offsett_uint96_to_uint96(dataSlot_2, and(mload(_54), 0xffffffffffffffffffffffff))\n                        let cleaned_4 := and(sload(/** @src 1:6460:6476  \"s_currentSubId++\" */ 0x03), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _52)\n                        /// @src 1:6572:6619  \"SubscriptionCreated(s_currentSubId, msg.sender)\"\n                        let _55 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                        mstore(_55, /** @src 1:6537:6547  \"msg.sender\" */ caller())\n                        /// @src 1:6572:6619  \"SubscriptionCreated(s_currentSubId, msg.sender)\"\n                        log2(_55, /** @src 1:6516:6561  \"Subscription({owner: msg.sender, balance: 0})\" */ 32, /** @src 1:6572:6619  \"SubscriptionCreated(s_currentSubId, msg.sender)\" */ 0x464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf, cleaned_4)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, cleaned_4)\n                        return(memPos_7, /** @src 1:6516:6561  \"Subscription({owner: msg.sender, balance: 0})\" */ 32)\n                    }\n                    case /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xa410347f {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_8 := mload(_2)\n                        mstore(memPos_8, and(/** @src 1:426:464  \"uint96 public immutable GAS_PRICE_LINK\" */ loadimmutable(\"109\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xffffffffffffffffffffffff))\n                        return(memPos_8, 32)\n                    }\n                    case 0xa47c7696 {\n                        if callvalue() { revert(0, 0) }\n                        let _56 := 32\n                        if slt(add(calldatasize(), not(3)), _56) { revert(0, 0) }\n                        let _57 := and(abi_decode_uint64(), 0xffffffffffffffff)\n                        mstore(0, _57)\n                        mstore(_56, /** @src 1:6821:6836  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _58 := sub(shl(160, 1), 1)\n                        /// @src 1:6817:6909  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        if /** @src 1:6821:6864  \"s_subscriptions[_subId].owner == address(0)\" */ iszero(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(keccak256(0, _2)), _58))\n                        /// @src 1:6817:6909  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        {\n                            /// @src 1:6881:6902  \"InvalidSubscription()\"\n                            let _59 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:6881:6902  \"InvalidSubscription()\"\n                            mstore(_59, /** @src 1:5932:5953  \"InvalidSubscription()\" */ shl(225, 0x0fb532db))\n                            /// @src 1:6881:6902  \"InvalidSubscription()\"\n                            revert(_59, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        mstore(0, _57)\n                        mstore(_56, /** @src 1:6821:6836  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _60 := sload(keccak256(0, _2))\n                        mstore(_56, /** @src 1:6989:7000  \"s_consumers\" */ 0x07)\n                        /// @src 1:6914:7009  \"return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId])\"\n                        let var_consumers_mpos := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ copy_array_from_storage_to_memory_array_address_dyn(keccak256(0, _2))\n                        let memPos_9 := mload(_2)\n                        let tail_1 := add(memPos_9, 128)\n                        mstore(memPos_9, shr(160, _60))\n                        mstore(add(memPos_9, _56), 0)\n                        mstore(add(memPos_9, _2), and(_60, _58))\n                        mstore(add(memPos_9, 96), 128)\n                        let pos_1 := tail_1\n                        let length_1 := mload(var_consumers_mpos)\n                        mstore(tail_1, length_1)\n                        pos_1 := add(memPos_9, 160)\n                        let srcPtr_1 := add(var_consumers_mpos, _56)\n                        let i_1 := 0\n                        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n                        {\n                            mstore(pos_1, and(mload(srcPtr_1), _58))\n                            pos_1 := add(pos_1, _56)\n                            srcPtr_1 := add(srcPtr_1, _56)\n                        }\n                        return(memPos_9, sub(pos_1, memPos_9))\n                    }\n                    case 0xafc69b53 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_2 := abi_decode_uint64()\n                        let value_5 := calldataload(36)\n                        let _61 := 0xffffffffffffffffffffffff\n                        if iszero(eq(value_5, and(value_5, _61))) { revert(0, 0) }\n                        let _62 := and(value0_2, 0xffffffffffffffff)\n                        mstore(0, _62)\n                        mstore(32, /** @src 1:5337:5352  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:5333:5425  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        if /** @src 1:5337:5380  \"s_subscriptions[_subId].owner == address(0)\" */ iszero(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(keccak256(0, _2)), sub(shl(160, 1), 1)))\n                        /// @src 1:5333:5425  \"if (s_subscriptions[_subId].owner == address(0)) {...\"\n                        {\n                            /// @src 1:5397:5418  \"InvalidSubscription()\"\n                            let _63 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:5397:5418  \"InvalidSubscription()\"\n                            mstore(_63, /** @src 1:5932:5953  \"InvalidSubscription()\" */ shl(225, 0x0fb532db))\n                            /// @src 1:5397:5418  \"InvalidSubscription()\"\n                            revert(_63, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        mstore(0, _62)\n                        mstore(32, /** @src 1:5337:5352  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let dataSlot_3 := keccak256(0, _2)\n                        let _64 := shr(160, sload(dataSlot_3))\n                        /// @src 1:5487:5529  \"s_subscriptions[_subId].balance += _amount\"\n                        update_storage_value_offsett_uint96_to_uint96(dataSlot_3, checked_add_uint96(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _64, /** @src 1:5487:5529  \"s_subscriptions[_subId].balance += _amount\" */ value_5))\n                        /// @src 1:5579:5599  \"oldBalance + _amount\"\n                        let expr := checked_add_uint96(_64, value_5)\n                        /// @src 1:5540:5600  \"SubscriptionFunded(_subId, oldBalance, oldBalance + _amount)\"\n                        let _65 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                        mstore(_65, _64)\n                        mstore(add(_65, 32), and(expr, _61))\n                        /// @src 1:5540:5600  \"SubscriptionFunded(_subId, oldBalance, oldBalance + _amount)\"\n                        log2(_65, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _2, /** @src 1:5540:5600  \"SubscriptionFunded(_subId, oldBalance, oldBalance + _amount)\" */ 0xd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f8, _62)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                    case 0xc3f909d4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, _3)\n                        mstore(add(memPos_10, 32), /** @src 1:8716:8725  \"2_500_000\" */ 0x2625a0)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_10, _2), /** @src 1:8727:8732  \"2_700\" */ 0x0a8c)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(add(memPos_10, 96), /** @src 1:8734:8739  \"33285\" */ 0x8205)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(memPos_10, 128)\n                    }\n                    case 0xd7ae1d30 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_3 := abi_decode_uint64()\n                        let value1_4 := abi_decode_address()\n                        let _66 := and(value0_3, 0xffffffffffffffff)\n                        mstore(0, _66)\n                        mstore(32, /** @src 1:7309:7324  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _67 := sub(shl(160, 1), 1)\n                        let cleaned_5 := and(sload(keccak256(0, _2)), _67)\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        if /** @src 1:7348:7367  \"owner == address(0)\" */ iszero(cleaned_5)\n                        /// @src 1:7344:7412  \"if (owner == address(0)) {...\"\n                        {\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            let _68 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            mstore(_68, /** @src 1:5932:5953  \"InvalidSubscription()\" */ shl(225, 0x0fb532db))\n                            /// @src 1:7384:7405  \"InvalidSubscription()\"\n                            revert(_68, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        if /** @src 1:7421:7440  \"msg.sender != owner\" */ iszero(eq(/** @src 1:7421:7431  \"msg.sender\" */ caller(), /** @src 1:7421:7440  \"msg.sender != owner\" */ cleaned_5))\n                        /// @src 1:7417:7485  \"if (msg.sender != owner) {...\"\n                        {\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            let _69 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            mstore(_69, shl(225, 0x6c51fda9))\n                            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                            mstore(/** @src 1:7457:7478  \"MustBeSubOwner(owner)\" */ add(_69, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3), cleaned_5)\n                            /// @src 1:7457:7478  \"MustBeSubOwner(owner)\"\n                            revert(_69, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 36)\n                        }\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        if /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:9377:9385  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xff)\n                        /// @src 1:9373:9435  \"if (s_config.reentrancyLock) {...\"\n                        {\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            let _70 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                            /// @src 1:9417:9428  \"Reentrant()\"\n                            mstore(_70, shl(225, 0x769dd353))\n                            revert(_70, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        }\n                        mstore(0, _66)\n                        mstore(32, /** @src 1:7309:7324  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        let _71 := shr(160, sload(keccak256(0, _2)))\n                        /// @src 1:7137:7203  \"SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance)\"\n                        let _72 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_2)\n                        mstore(_72, and(value1_4, _67))\n                        mstore(add(_72, 32), _71)\n                        /// @src 1:7137:7203  \"SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance)\"\n                        log2(_72, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _2, /** @src 1:7137:7203  \"SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance)\" */ 0xe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815, _66)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(0, _66)\n                        mstore(32, /** @src 1:7309:7324  \"s_subscriptions\" */ 0x06)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        sstore(keccak256(0, _2), 0)\n                        return(0, 0)\n                    }\n                    case 0xe82ad7d4 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        pop(abi_decode_uint64())\n                        /// @ast-id 1024 @src 1:9841:9961  \"function pendingRequestExists(uint64 /*subId*\\/) public pure override returns (bool) {...\"\n                        /** @ast-id 1024 */ /** @ast-id 1024 */ fun_requestSubscriptionOwnerTransfer()\n                    }\n                    case /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xed5eb06d {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_4 := abi_decode_uint64()\n                        let ret := fun_consumerIsAdded(value0_4, abi_decode_address())\n                        let memPos_11 := mload(_2)\n                        mstore(memPos_11, iszero(iszero(ret)))\n                        return(memPos_11, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value_6 := calldataload(_3)\n                        let _73 := sub(shl(160, 1), 1)\n                        let _74 := and(value_6, _73)\n                        if iszero(eq(value_6, _74)) { revert(0, 0) }\n                        /// @src 3:2048:2107  \"modifier onlyOwner() {...\"\n                        fun_validateOwnership()\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        if /** @src 3:1649:1665  \"to != msg.sender\" */ eq(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _74, /** @src 3:1655:1665  \"msg.sender\" */ caller())\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        {\n                            let memPtr_6 := mload(_2)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _3), 32)\n                            mstore(add(memPtr_6, 36), 23)\n                            mstore(add(memPtr_6, 68), \"Cannot transfer to self\")\n                            revert(memPtr_6, 100)\n                        }\n                        sstore(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ or(and(sload(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(160, 0xffffffffffffffffffffffff)), _74))\n                        /// @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\"\n                        log3(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0, 0, /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(0), _73), /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ _74)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_decode_uint64() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, 0xffffffffffffffff))) { revert(0, 0) }\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation_15220(memPtr)\n            {\n                let newFreePtr := add(memPtr, 96)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation_19288(memPtr)\n            {\n                let newFreePtr := add(memPtr, 0x20)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function array_allocation_size_array_uint256_dyn(length) -> size\n            {\n                if gt(length, 0xffffffffffffffff)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                size := add(shl(5, length), 0x20)\n            }\n            /// @ast-id 1000 @src 1:9571:9714  \"function requestSubscriptionOwnerTransfer(uint64 /*_subId*\\/, address /*_newOwner*\\/) external pure override {...\"\n            function fun_requestSubscriptionOwnerTransfer()\n            {\n                /// @src 1:9684:9709  \"revert(\\\"not implemented\\\")\"\n                let _1 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(64)\n                /// @src 1:9684:9709  \"revert(\\\"not implemented\\\")\"\n                mstore(_1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(229, 4594637))\n                mstore(/** @src 1:9684:9709  \"revert(\\\"not implemented\\\")\" */ add(_1, 4), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 32)\n                mstore(add(/** @src 1:9684:9709  \"revert(\\\"not implemented\\\")\" */ _1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 36), 15)\n                mstore(add(/** @src 1:9684:9709  \"revert(\\\"not implemented\\\")\" */ _1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 68), \"not implemented\")\n                /// @src 1:9684:9709  \"revert(\\\"not implemented\\\")\"\n                revert(_1, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 100)\n            }\n            function memory_array_index_access_uint256_dyn(baseRef, index) -> addr\n            {\n                if iszero(lt(index, mload(baseRef)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                addr := add(add(baseRef, shl(5, index)), 32)\n            }\n            function update_storage_value_offsett_uint96_to_uint96(slot, value)\n            {\n                let _1 := sload(slot)\n                sstore(slot, or(and(_1, sub(shl(160, 1), 1)), and(shl(160, value), shl(160, 0xffffffffffffffffffffffff))))\n            }\n            /// @ast-id 529 @src 1:3862:5061  \"function fulfillRandomWordsWithOverride(uint256 _requestId, address _consumer, uint256[] memory _words) public {...\"\n            function fun_fulfillRandomWordsWithOverride(var_requestId, var_consumer, var_words_mpos)\n            {\n                /// @src 1:3998:4007  \"gasleft()\"\n                let expr := gas()\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ var_requestId)\n                let _1 := 0x20\n                mstore(_1, /** @src 1:4017:4027  \"s_requests\" */ 0x08)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _2 := 0xffffffffffffffff\n                let _3 := 0x40\n                /// @src 1:4013:4096  \"if (s_requests[_requestId].subId == 0) {...\"\n                if /** @src 1:4017:4050  \"s_requests[_requestId].subId == 0\" */ iszero(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)), _2))\n                /// @src 1:4013:4096  \"if (s_requests[_requestId].subId == 0) {...\"\n                {\n                    /// @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\"\n                    let _4 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                    /// @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\"\n                    mstore(_4, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(229, 4594637))\n                    mstore(/** @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\" */ add(_4, 4), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                    mstore(add(/** @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\" */ _4, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 36), 19)\n                    mstore(add(/** @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\" */ _4, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 68), \"nonexistent request\")\n                    /// @src 1:4060:4089  \"revert(\\\"nonexistent request\\\")\"\n                    revert(_4, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 100)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ var_requestId)\n                mstore(_1, /** @src 1:4017:4027  \"s_requests\" */ 0x08)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                let memPtr := mload(_3)\n                finalize_allocation_15220(memPtr)\n                let _5 := sload(dataSlot)\n                mstore(memPtr, and(_5, _2))\n                let _6 := 0xffffffff\n                let _7 := add(memPtr, _1)\n                mstore(_7, and(shr(_3, _5), _6))\n                let value := and(shr(96, _5), _6)\n                let _8 := add(memPtr, _3)\n                mstore(_8, value)\n                /// @src 1:4155:4168  \"_words.length\"\n                let expr_1 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(/** @src 1:4155:4168  \"_words.length\" */ var_words_mpos)\n                /// @src 1:4151:4435  \"if (_words.length == 0) {...\"\n                switch /** @src 1:4155:4173  \"_words.length == 0\" */ iszero(expr_1)\n                case /** @src 1:4151:4435  \"if (_words.length == 0) {...\" */ 0 {\n                    /// @src 1:4358:4435  \"if (_words.length != req.numWords) {...\"\n                    if /** @src 1:4362:4391  \"_words.length != req.numWords\" */ iszero(eq(expr_1, value))\n                    /// @src 1:4358:4435  \"if (_words.length != req.numWords) {...\"\n                    {\n                        /// @src 1:4408:4428  \"InvalidRandomWords()\"\n                        let _9 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                        /// @src 1:4408:4428  \"InvalidRandomWords()\"\n                        mstore(_9, shl(225, 0x1f9efadb))\n                        revert(_9, 4)\n                    }\n                }\n                default /// @src 1:4151:4435  \"if (_words.length == 0) {...\"\n                {\n                    /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                    let _10 := and(mload(/** @src 1:4206:4218  \"req.numWords\" */ _8), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _6)\n                    let _11 := array_allocation_size_array_uint256_dyn(_10)\n                    let memPtr_1 := mload(_3)\n                    finalize_allocation(memPtr_1, _11)\n                    mstore(memPtr_1, _10)\n                    calldatacopy(add(memPtr_1, _1), calldatasize(), add(array_allocation_size_array_uint256_dyn(_10), not(31)))\n                    /// @src 1:4183:4219  \"_words = new uint256[](req.numWords)\"\n                    var_words_mpos := memPtr_1\n                    /// @src 1:4232:4245  \"uint256 i = 0\"\n                    let var_i := /** @src -1:-1:-1 */ 0\n                    /// @src 1:4227:4346  \"for (uint256 i = 0; i < req.numWords; i++) {...\"\n                    for { }\n                    /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1\n                    /// @src 1:4232:4245  \"uint256 i = 0\"\n                    {\n                        /// @src 1:4265:4268  \"i++\"\n                        var_i := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ add(/** @src 1:4265:4268  \"i++\" */ var_i, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1)\n                    }\n                    /// @src 1:4265:4268  \"i++\"\n                    {\n                        /// @src 1:4247:4263  \"i < req.numWords\"\n                        if iszero(lt(var_i, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(mload(/** @src 1:4251:4263  \"req.numWords\" */ _8), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _6)))\n                        /// @src 1:4247:4263  \"i < req.numWords\"\n                        { break }\n                        /// @src 1:4310:4335  \"abi.encode(_requestId, i)\"\n                        let expr_mpos := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                        /// @src 1:4310:4335  \"abi.encode(_requestId, i)\"\n                        let _12 := add(expr_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                        mstore(_12, var_requestId)\n                        mstore(add(/** @src 1:4310:4335  \"abi.encode(_requestId, i)\" */ expr_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3), var_i)\n                        /// @src 1:4310:4335  \"abi.encode(_requestId, i)\"\n                        mstore(expr_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                        /// @src 1:4310:4335  \"abi.encode(_requestId, i)\"\n                        finalize_allocation_15220(expr_mpos)\n                        /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                        mstore(/** @src 1:4280:4337  \"_words[i] = uint256(keccak256(abi.encode(_requestId, i)))\" */ memory_array_index_access_uint256_dyn(memPtr_1, var_i), /** @src 1:4300:4336  \"keccak256(abi.encode(_requestId, i))\" */ keccak256(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _12, mload(/** @src 1:4300:4336  \"keccak256(abi.encode(_requestId, i))\" */ expr_mpos)))\n                    }\n                }\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                let expr_455_mpos := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                let _13 := add(expr_455_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                mstore(_13, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x1fe543e3))\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                let _14 := 36\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let tail := add(/** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ expr_455_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 100)\n                mstore(/** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ add(expr_455_mpos, _14), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ var_requestId)\n                mstore(add(/** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ expr_455_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 68), _3)\n                let pos := tail\n                let length := mload(var_words_mpos)\n                mstore(tail, length)\n                pos := add(/** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ expr_455_mpos, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 132)\n                let srcPtr := add(var_words_mpos, _1)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, mload(srcPtr))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, _1)\n                }\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                let _15 := sub(pos, expr_455_mpos)\n                let _16 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ not(31)\n                /// @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\"\n                mstore(expr_455_mpos, add(_15, _16))\n                finalize_allocation(expr_455_mpos, _15)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _17 := not(255)\n                sstore(/** @src 1:4571:4579  \"s_config\" */ 0x02, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ or(and(sload(/** @src 1:4571:4579  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _17), 1))\n                let cleaned := and(mload(/** @src 1:4646:4666  \"req.callbackGasLimit\" */ _7), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _6)\n                /// @src 1:4626:4676  \"_consumer.call{gas: req.callbackGasLimit}(callReq)\"\n                let expr_component := call(cleaned, var_consumer, /** @src -1:-1:-1 */ 0, /** @src 1:4626:4676  \"_consumer.call{gas: req.callbackGasLimit}(callReq)\" */ _13, mload(expr_455_mpos), /** @src -1:-1:-1 */ 0, 0)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                switch returndatasize()\n                case 0 { }\n                default {\n                    let _18 := returndatasize()\n                    if gt(_18, _2)\n                    {\n                        mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                        mstore(4, 0x41)\n                        revert(/** @src -1:-1:-1 */ 0, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _14)\n                    }\n                    /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                    let memPtr_2 := mload(_3)\n                    finalize_allocation(memPtr_2, add(and(add(_18, 31), /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _16), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1))\n                    mstore(memPtr_2, _18)\n                    returndatacopy(add(memPtr_2, _1), /** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ returndatasize())\n                }\n                sstore(/** @src 1:4571:4579  \"s_config\" */ 0x02, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 1:4571:4579  \"s_config\" */ 0x02), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _17))\n                /// @src 1:4768:4777  \"gasleft()\"\n                let _19 := gas()\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let diff := sub(expr, _19)\n                if gt(diff, expr)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _14)\n                }\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _20 := 0xffffffffffffffffffffffff\n                let _21 := and(/** @src 1:4781:4795  \"GAS_PRICE_LINK\" */ loadimmutable(\"109\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _20)\n                let product := mul(diff, _21)\n                if iszero(or(eq(expr, _19), eq(_21, div(product, diff))))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _14)\n                }\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _22 := and(/** @src 1:4744:4752  \"BASE_FEE\" */ loadimmutable(\"107\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _20)\n                let sum := add(_22, product)\n                if gt(_22, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _14)\n                }\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let cleaned_1 := and(sum, _20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(mload(/** @src 1:4823:4832  \"req.subId\" */ memPtr), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _2))\n                mstore(_1, /** @src 1:4807:4822  \"s_subscriptions\" */ 0x06)\n                /// @src 1:4803:4896  \"if (s_subscriptions[req.subId].balance < payment) {...\"\n                if /** @src 1:4807:4851  \"s_subscriptions[req.subId].balance < payment\" */ lt(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shr(160, sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3))), cleaned_1)\n                /// @src 1:4803:4896  \"if (s_subscriptions[req.subId].balance < payment) {...\"\n                {\n                    /// @src 1:4868:4889  \"InsufficientBalance()\"\n                    let _23 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                    /// @src 1:4868:4889  \"InsufficientBalance()\"\n                    mstore(_23, shl(227, 0x1e9acf17))\n                    revert(_23, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ 4)\n                }\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(mload(/** @src 1:4917:4926  \"req.subId\" */ memPtr), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _2))\n                mstore(_1, /** @src 1:4807:4822  \"s_subscriptions\" */ 0x06)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let dataSlot_1 := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3)\n                let diff_1 := sub(shr(160, sload(/** @src 1:4901:4946  \"s_subscriptions[req.subId].balance -= payment\" */ dataSlot_1)), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ cleaned_1)\n                if gt(diff_1, _20)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:4489:4565  \"abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words)\" */ _14)\n                }\n                /// @src 1:4901:4946  \"s_subscriptions[req.subId].balance -= payment\"\n                update_storage_value_offsett_uint96_to_uint96(dataSlot_1, diff_1)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ var_requestId)\n                mstore(_1, /** @src 1:4017:4027  \"s_requests\" */ 0x08)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                sstore(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _3), /** @src -1:-1:-1 */ 0)\n                /// @src 1:4994:5056  \"RandomWordsFulfilled(_requestId, _requestId, payment, success)\"\n                let _24 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(_3)\n                mstore(_24, var_requestId)\n                mstore(add(_24, _1), cleaned_1)\n                mstore(add(_24, _3), iszero(iszero(expr_component)))\n                /// @src 1:4994:5056  \"RandomWordsFulfilled(_requestId, _requestId, payment, success)\"\n                log2(_24, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 96, /** @src 1:4994:5056  \"RandomWordsFulfilled(_requestId, _requestId, payment, success)\" */ 0x7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4, var_requestId)\n            }\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function storage_array_index_access_address_dyn_ptr(array, index) -> slot, offset\n            {\n                if iszero(lt(index, sload(array)))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x32)\n                    revert(0, 0x24)\n                }\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ array)\n                slot := add(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x20), index)\n                offset := /** @src -1:-1:-1 */ 0\n            }\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            function update_storage_value_address_to_address(slot, offset, value)\n            {\n                let _1 := sub(shl(160, 1), 1)\n                let _2 := sload(slot)\n                let shiftBits := shl(3, offset)\n                sstore(slot, or(and(_2, not(shl(shiftBits, _1))), shl(shiftBits, and(value, _1))))\n            }\n            /// @src 1:7646:7991  \"function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {...\"\n            function fun_addConsumer_inner(var__subId, var_consumer)\n            {\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let _1 := and(var__subId, 0xffffffffffffffff)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                mstore(0x20, /** @src 1:7750:7761  \"s_consumers\" */ 0x07)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let length := sload(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x40))\n                /// @src 1:7746:7835  \"if (s_consumers[_subId].length == MAX_CONSUMERS) {...\"\n                if /** @src 1:7750:7793  \"s_consumers[_subId].length == MAX_CONSUMERS\" */ eq(length, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(/** @src 1:7780:7793  \"MAX_CONSUMERS\" */ loadimmutable(\"112\"), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0xffff))\n                /// @src 1:7746:7835  \"if (s_consumers[_subId].length == MAX_CONSUMERS) {...\"\n                {\n                    /// @src 1:7810:7828  \"TooManyConsumers()\"\n                    let _2 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(0x40)\n                    /// @src 1:7810:7828  \"TooManyConsumers()\"\n                    mstore(_2, shl(224, 0x05a48e0f))\n                    revert(_2, 4)\n                }\n                /// @src 1:7841:7902  \"if (consumerIsAdded(_subId, _consumer)) {...\"\n                if /** @src 1:7845:7879  \"consumerIsAdded(_subId, _consumer)\" */ fun_consumerIsAdded(var__subId, var_consumer)\n                /// @src 1:7841:7902  \"if (consumerIsAdded(_subId, _consumer)) {...\"\n                {\n                    /// @src 1:7889:7896  \"return;\"\n                    leave\n                }\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                mstore(0x20, /** @src 1:7750:7761  \"s_consumers\" */ 0x07)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let dataSlot := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x40)\n                let oldLen := sload(dataSlot)\n                if iszero(lt(oldLen, 18446744073709551616))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x24)\n                }\n                sstore(dataSlot, add(oldLen, 1))\n                let slot, offset := storage_array_index_access_address_dyn_ptr(dataSlot, oldLen)\n                update_storage_value_address_to_address(slot, offset, var_consumer)\n                /// @src 1:7954:7986  \"ConsumerAdded(_subId, _consumer)\"\n                let _3 := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(0x40)\n                mstore(_3, and(var_consumer, sub(shl(160, 1), 1)))\n                /// @src 1:7954:7986  \"ConsumerAdded(_subId, _consumer)\"\n                log2(_3, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x20, /** @src 1:7954:7986  \"ConsumerAdded(_subId, _consumer)\" */ 0x752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc3, _1)\n            }\n            /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n            function copy_array_from_storage_to_memory_array_address_dyn(slot) -> memPtr\n            {\n                memPtr := mload(64)\n                let pos := memPtr\n                let length := sload(slot)\n                mstore(memPtr, length)\n                let _1 := 0x20\n                pos := add(memPtr, 0x20)\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ slot)\n                let srcPtr := keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x20)\n                let i := /** @src -1:-1:-1 */ 0\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                for { } lt(i, length) { i := add(i, 1) }\n                {\n                    mstore(pos, and(sload(srcPtr), sub(shl(160, 1), 1)))\n                    pos := add(pos, _1)\n                    srcPtr := add(srcPtr, 1)\n                }\n                finalize_allocation(memPtr, sub(pos, memPtr))\n            }\n            function checked_add_uint96(x, y) -> sum\n            {\n                let _1 := 0xffffffffffffffffffffffff\n                sum := add(and(x, _1), and(y, _1))\n                if gt(sum, _1)\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n            }\n            /// @ast-id 315 @src 1:2405:2695  \"function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {...\"\n            function fun_consumerIsAdded(var_subId, var_consumer) -> var\n            {\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(var_subId, 0xffffffffffffffff))\n                mstore(0x20, /** @src 1:2526:2537  \"s_consumers\" */ 0x07)\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                let converted := copy_array_from_storage_to_memory_array_address_dyn(keccak256(/** @src -1:-1:-1 */ 0, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 0x40))\n                /// @src 1:2556:2569  \"uint256 i = 0\"\n                let var_i := /** @src -1:-1:-1 */ 0\n                /// @src 1:2551:2673  \"for (uint256 i = 0; i < consumers.length; i++) {...\"\n                for { }\n                /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1\n                /// @src 1:2556:2569  \"uint256 i = 0\"\n                {\n                    /// @src 1:2593:2596  \"i++\"\n                    var_i := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ add(/** @src 1:2593:2596  \"i++\" */ var_i, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1)\n                }\n                /// @src 1:2593:2596  \"i++\"\n                {\n                    /// @src 1:2571:2591  \"i < consumers.length\"\n                    if iszero(lt(var_i, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ mload(/** @src 1:2575:2591  \"consumers.length\" */ converted)))\n                    /// @src 1:2571:2591  \"i < consumers.length\"\n                    { break }\n                    /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                    let _1 := sub(shl(160, 1), 1)\n                    let cleaned := and(mload(/** @src 1:2610:2622  \"consumers[i]\" */ memory_array_index_access_uint256_dyn(converted, var_i)), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1)\n                    /// @src 1:2606:2667  \"if (consumers[i] == _consumer) {...\"\n                    if /** @src 1:2610:2635  \"consumers[i] == _consumer\" */ eq(/** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ cleaned, and(/** @src 1:2610:2635  \"consumers[i] == _consumer\" */ var_consumer, /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ _1))\n                    /// @src 1:2606:2667  \"if (consumers[i] == _consumer) {...\"\n                    {\n                        /// @src 1:2647:2658  \"return true\"\n                        var := /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ 1\n                        /// @src 1:2647:2658  \"return true\"\n                        leave\n                    }\n                }\n                /// @src 1:2678:2690  \"return false\"\n                var := /** @src -1:-1:-1 */ 0\n            }\n            /// @ast-id 1200 @src 3:1809:1971  \"function _validateOwnership() internal view {...\"\n            function fun_validateOwnership()\n            {\n                /// @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\"\n                if iszero(/** @src 3:1918:1939  \"msg.sender == s_owner\" */ eq(/** @src 3:1918:1928  \"msg.sender\" */ caller(), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ and(sload(/** @src 3:1932:1939  \"s_owner\" */ 0x00), /** @src 1:311:9963  \"contract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface, ConfirmedOwner {...\" */ sub(shl(160, 1), 1))))\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Only callable by owner\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220ae415184c2caf77545afeaa5b5faac9843978a6a9d833598df86d454332175a164736f6c63430008180033\"\n    }\n}\n",
        "hash": "01000299098270addfc0f70ef57ffa21b92f8cf8b93090bb3ed1f98a2ceb6052",
        "factoryDependencies": {}
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
      "ConfirmedOwner": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ConfirmedOwner.sol:ConfirmedOwner\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr6\n\tsub!\tr6, r3, r3\n\tjump.ne\t@.BB0_18\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tor\tr4, r6, r4\n\tsstore\tr0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tand\t@CPI0_2[0], r3, r5\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n.BB0_32:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_33:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tand\t@CPI0_2[0], r2, r1\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_11\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r5\n\tcontext.caller\tr1\n\tsub!\tr1, r5, r1\n\tjump.ne\t@.BB0_28\n\tsub!\tr6, r5, r1\n\tjump.ne\t@.BB0_31\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_11:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_31:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tjump\t@.BB0_32\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 30477107189792067803313207904920092556244933919346619109201225024049046880256\nCPI0_6:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_7:\n\t.cell 7922816251426433759354395033600\nCPI0_8:\n\t.cell 4076725131\nCPI0_9:\n\t.cell 2376452955\nCPI0_10:\n\t.cell 2042253463\nCPI0_11:\n\t.cell 35927816869373543188625519729548758844492007594142020231330326663764612481024\nCPI0_12:\n\t.cell 7922816253787617000789217640448\nCPI0_13:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell -8352700767705030668357216594227241474277607171479992828920686105414662745480\nCPI0_15:\n\t.cell 30477107189792067809907278063365548287250439923367031265618412078853158600704\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 35035607279084747875032095267602354476277983814074373230998149299897699926016\nCPI0_18:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\n",
          "bytecode": {
            "object": "00000000030100190000006003300270000000320330019700000001022001900000002f0000c13d0000008002000039000000400020043f000000040230008c0000008e0000413d000000000201043b000000e0022002700000003a0420009c0000006b0000613d0000003b0120009c000000860000613d0000003c0120009c0000008e0000c13d0000000001000416000000000101004b0000008e0000c13d0000000101000039000000000201041a00000034032001970000000006000411000000000336004b000000990000c13d000000000300041a0000003504300197000000000464019f000000000040041b0000003502200197000000000021041b00000032010000410000000002000414000000320420009c0000000002018019000000c00120021000000034053001970000003f011001c70000800d020000390000000303000039000000440400004100c100bc0000040f00000001012001900000008e0000613d0000000001000019000000c20001042e0000000002000416000000000202004b0000008e0000c13d0000001f0230003900000033022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000420000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000003a0000413d000000000502004b000000510000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200130008c0000008e0000413d000000800200043d0000003401200197000000340220009c0000008e0000213d000000000201004b000000900000c13d000000400100043d000000440210003900000037030000410000000000320435000000240210003900000018030000390000000000320435000000380200004100000000002104350000000402100039000000200300003900000000003204350000003202000041000000320310009c0000000001028019000000400110021000000039011001c7000000c3000104300000000002000416000000240330008c0000008e0000413d000000000202004b0000008e0000c13d0000000401100370000000000101043b0000003406100197000000340110009c0000008e0000213d000000000100041a00000034051001970000000001000411000000000151004b000000a30000c13d000000000156004b000000ad0000c13d0000003801000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f0000004101000041000000c40010043f0000003e01000041000000c3000104300000000001000416000000000101004b0000008e0000c13d000000000100041a0000003401100197000000800010043f0000004201000041000000c20001042e0000000001000019000000c300010430000000000200041a0000003502200197000000000112019f000000000010041b0000002001000039000001000010044300000120000004430000003601000041000000c20001042e0000003801000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004301000041000000c40010043f0000003e01000041000000c3000104300000003801000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000003d01000041000000c40010043f0000003e01000041000000c3000104300000000101000039000000000201041a0000003502200197000000000262019f000000000021041b00000032010000410000000002000414000000320320009c0000000002018019000000c0012002100000003f011001c70000800d02000039000000030300003900000040040000410000002a0000013d000000bf002104210000000102000039000000000001042d0000000002000019000000000001042d000000c100000432000000c20001042e000000c300010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000043616e6e6f7420736574206f776e657220746f207a65726f000000000000000008c379a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000079ba50974f6e6c792063616c6c61626c65206279206f776e65720000000000000000000000000000000000000000000000000000000000640000008000000000000000000200000000000000000000000000000000000000000000000000000000000000ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127843616e6e6f74207472616e7366657220746f2073656c6600000000000000000000000000000000000000000000000000000000200000008000000000000000004d7573742062652070726f706f736564206f776e6572000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0000000000000000000000000000000000000000000000000000000000000000032baeccd88ff6ec84cbb5b5b2a67100d08fd628e596996b4247767f8e398370e"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 2:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\", 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\", 4:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\"\nobject \"ConfirmedOwner_1046\" {\n    code {\n        {\n            /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ConfirmedOwner_1046\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            if /** @src 3:598:620  \"newOwner != address(0)\" */ iszero(/** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _2)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 24)\n                mstore(add(memPtr, 68), \"Cannot set owner to zero\")\n                revert(memPtr, 100)\n            }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"ConfirmedOwner_1046_deployed\")\n            codecopy(_3, dataoffset(\"ConfirmedOwner_1046_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 2:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\", 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\"\n    object \"ConfirmedOwner_1046_deployed\" {\n        code {\n            {\n                /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x79ba5097 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01)\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        let _3 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 3:1136:1164  \"msg.sender == s_pendingOwner\" */ eq(/** @src 3:1136:1146  \"msg.sender\" */ caller(), /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_2, _3)))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 22)\n                            mstore(add(_1, 68), \"Must be proposed owner\")\n                            revert(_1, 100)\n                        }\n                        let _4 := sload(0)\n                        let _5 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(0, or(and(_4, _5), /** @src 3:1136:1146  \"msg.sender\" */ caller()))\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        sstore(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_2, _5))\n                        /// @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\"\n                        log3(/** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ 0, 0, /** @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_4, _3), /** @src 3:1136:1146  \"msg.sender\" */ caller())\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        return(memPos, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _6 := sub(shl(160, 1), 1)\n                        let _7 := and(value, _6)\n                        if iszero(eq(value, _7)) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), _6)\n                        if iszero(/** @src 3:1918:1939  \"msg.sender == s_owner\" */ eq(/** @src 3:1918:1928  \"msg.sender\" */ caller(), /** @src 3:1918:1939  \"msg.sender == s_owner\" */ cleaned_1))\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"Only callable by owner\")\n                            revert(memPtr, 100)\n                        }\n                        if /** @src 3:1649:1665  \"to != msg.sender\" */ eq(/** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _7, /** @src 3:1918:1928  \"msg.sender\" */ caller())\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 23)\n                            mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01, /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ or(and(sload(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01), /** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ shl(160, 0xffffffffffffffffffffffff)), _7))\n                        /// @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\"\n                        log3(/** @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ 0, 0, /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, cleaned_1, _7)\n                        /// @src 2:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220560437d83b9c798178246db01f075beef5f94b24ac03daaaf1f1c9bb2f7e8fce64736f6c63430008180033\"\n    }\n}\n",
        "hash": "01000047922220c1f3d26af2f62772b3d6f13938d6c80993ef538ce4f50bd973",
        "factoryDependencies": {}
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
      "ConfirmedOwnerWithProposal": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "newOwner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "pendingOwner",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferRequested",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.eq\t@.BB0_30\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.eq\t@.BB0_28\n\tsub.s!\t@CPI0_13[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr6\n\tsub!\tr6, r3, r3\n\tjump.ne\t@.BB0_24\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tor\tr4, r6, r4\n\tsstore\tr0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tand\t@CPI0_2[0], r3, r5\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n.BB0_38:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_39\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_39:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t64, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_2[0], r5, r1\n\tjump.gt\t@.BB0_2\n\tld.1\t160, r6\n\tsub.s!\t@CPI0_2[0], r6, r1\n\tjump.gt\t@.BB0_2\n\tsub!\tr5, r0, r1\n\tjump.ne\t@.BB0_13\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_10[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tjump\t@.BB0_12\n.BB0_30:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tcontext.caller\tr5\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB0_34\n\tsub!\tr6, r5, r1\n\tjump.ne\t@.BB0_37\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_13:\n\tsload\tr0, r1\n\tand\t@CPI0_3[0], r1, r1\n\tor\tr1, r5, r1\n\tsstore\tr0, r1\n\tsub!\tr6, r0, r1\n\tjump.eq\t@.BB0_15\n\tcontext.caller\tr1\n\tsub!\tr6, r1, r1\n\tjump.ne\t@.BB0_17\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n.BB0_12:\n\tst.1\tr2, r3\n\tadd\t@CPI0_7[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_34:\n\tadd\t@CPI0_7[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_14[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_17:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n.BB0_15:\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_9[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_37:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_4[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_5[0], r0, r4\n\tjump\t@.BB0_38\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_5:\n\t.cell -8352700767705030668357216594227241474277607171479992828920686105414662745480\nCPI0_6:\n\t.cell 30477107189792067809907278063365548287250439923367031265618412078853158600704\nCPI0_7:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_8:\n\t.cell 7922816251426433759354395033600\nCPI0_9:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_10:\n\t.cell 30477107189792067803313207904920092556244933919346619109201225024049046880256\nCPI0_11:\n\t.cell 4076725131\nCPI0_12:\n\t.cell 2376452955\nCPI0_13:\n\t.cell 2042253463\nCPI0_14:\n\t.cell 35927816869373543188625519729548758844492007594142020231330326663764612481024\nCPI0_15:\n\t.cell 7922816253787617000789217640448\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 35035607279084747875032095267602354476277983814074373230998149299897699926016\nCPI0_18:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\n",
          "bytecode": {
            "object": "00000000030100190000006003300270000000390330019700000001022001900000002f0000c13d0000008002000039000000400020043f000000040230008c000000ca0000413d000000000201043b000000e002200270000000440420009c000000620000613d000000450120009c0000007d0000613d000000460120009c000000ca0000c13d0000000001000416000000000101004b000000ca0000c13d0000000101000039000000000201041a0000003b032001970000000006000411000000000336004b000000a00000c13d000000000300041a0000003c04300197000000000464019f000000000040041b0000003c02200197000000000021041b00000039010000410000000002000414000000390420009c0000000002018019000000c0012002100000003b053001970000003d011001c70000800d0200003900000003030000390000004b0400004100e000db0000040f0000000101200190000000ca0000613d0000000001000019000000e10001042e0000000002000416000000000202004b000000ca0000c13d0000001f023000390000003a022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000420000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000003a0000413d000000000502004b000000510000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000400130008c000000ca0000413d000000800500043d0000003b0150009c000000ca0000213d000000a00600043d0000003b0160009c000000ca0000213d000000000105004b000000850000c13d000000400100043d00000044021000390000004303000041000000000032043500000024021000390000001803000039000000940000013d0000000002000416000000240330008c000000ca0000413d000000000202004b000000ca0000c13d0000000401100370000000000101043b0000003b061001970000003b0110009c000000ca0000213d000000000100041a0000003b011001970000000005000411000000000115004b000000aa0000c13d000000000156004b000000cc0000c13d0000004001000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f0000003f01000041000000c40010043f0000004801000041000000e2000104300000000001000416000000000101004b000000ca0000c13d000000000100041a0000003b01100197000000800010043f0000004901000041000000e10001042e000000000100041a0000003c01100197000000000151019f000000000010041b000000000106004b000000c50000613d0000000001000411000000000116004b000000b40000c13d000000400100043d00000044021000390000003f030000410000000000320435000000240210003900000017030000390000000000320435000000400200004100000000002104350000000402100039000000200300003900000000003204350000003902000041000000390310009c0000000001028019000000400110021000000041011001c7000000e2000104300000004001000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004a01000041000000c40010043f0000004801000041000000e2000104300000004001000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004701000041000000c40010043f0000004801000041000000e2000104300000000101000039000000000201041a0000003c02200197000000000262019f000000000021041b00000039010000410000000002000414000000390320009c0000000002018019000000c0012002100000003d011001c70000800d0200003900000003030000390000003e0400004100e000db0000040f0000000101200190000000ca0000613d0000002001000039000001000010044300000120000004430000004201000041000000e10001042e0000000001000019000000e2000104300000000101000039000000000201041a0000003c02200197000000000262019f000000000021041b00000039010000410000000002000414000000390320009c0000000002018019000000c0012002100000003d011001c70000800d0200003900000003030000390000003e040000410000002a0000013d000000de002104210000000102000039000000000001042d0000000002000019000000000001042d000000e000000432000000e10001042e000000e200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127843616e6e6f74207472616e7366657220746f2073656c6600000000000000000008c379a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000064000000000000000000000000000000020000000000000000000000000000004000000100000000000000000043616e6e6f7420736574206f776e657220746f207a65726f000000000000000000000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000079ba50974f6e6c792063616c6c61626c65206279206f776e657200000000000000000000000000000000000000000000000000000000006400000080000000000000000000000000000000000000000000000000000000200000008000000000000000004d7573742062652070726f706f736564206f776e6572000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0039f3f3974f112dcc5dcb454f7f5f2d262147b83bdf0b6cdf0cc4fefdfbf4238"
          },
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": "/// @use-src 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\", 4:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\"\nobject \"ConfirmedOwnerWithProposal_1209\" {\n    code {\n        {\n            /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ConfirmedOwnerWithProposal_1209\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 64)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n            let value0 := abi_decode_address_fromMemory(_1)\n            let value1 := abi_decode_address_fromMemory(add(_1, 32))\n            let _2 := sub(shl(160, 1), 1)\n            let _3 := and(/** @src 3:598:620  \"newOwner != address(0)\" */ value0, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _2)\n            if /** @src 3:598:620  \"newOwner != address(0)\" */ iszero(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _3)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 24)\n                mstore(add(memPtr, 68), \"Cannot set owner to zero\")\n                revert(memPtr, 100)\n            }\n            let _4 := not(sub(shl(160, 1), 1))\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _4), _3))\n            let _5 := and(/** @src 3:684:710  \"pendingOwner != address(0)\" */ value1, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _2)\n            /// @src 3:680:759  \"if (pendingOwner != address(0)) {...\"\n            if /** @src 3:684:710  \"pendingOwner != address(0)\" */ iszero(iszero(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _5))\n            /// @src 3:680:759  \"if (pendingOwner != address(0)) {...\"\n            {\n                /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                if /** @src 3:1649:1665  \"to != msg.sender\" */ eq(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _5, /** @src 3:1655:1665  \"msg.sender\" */ caller())\n                /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                {\n                    let memPtr_1 := mload(64)\n                    mstore(memPtr_1, shl(229, 4594637))\n                    mstore(add(memPtr_1, 4), 32)\n                    mstore(add(memPtr_1, 36), 23)\n                    mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                    revert(memPtr_1, 100)\n                }\n                sstore(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ or(and(sload(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01), /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _4), _5))\n                /// @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\"\n                log3(/** @src -1:-1:-1 */ 0, 0, /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _3, /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ _5)\n            }\n            /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n            let _6 := mload(64)\n            let _7 := datasize(\"ConfirmedOwnerWithProposal_1209_deployed\")\n            codecopy(_6, dataoffset(\"ConfirmedOwnerWithProposal_1209_deployed\"), _7)\n            return(_6, _7)\n        }\n        function abi_decode_address_fromMemory(offset) -> value\n        {\n            value := mload(offset)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        }\n    }\n    /// @use-src 3:\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\"\n    object \"ConfirmedOwnerWithProposal_1209_deployed\" {\n        code {\n            {\n                /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x79ba5097 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _2 := sload(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01)\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        let _3 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 3:1136:1164  \"msg.sender == s_pendingOwner\" */ eq(/** @src 3:1136:1146  \"msg.sender\" */ caller(), /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ and(_2, _3)))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 22)\n                            mstore(add(_1, 68), \"Must be proposed owner\")\n                            revert(_1, 100)\n                        }\n                        let _4 := sload(0)\n                        let _5 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(0, or(and(_4, _5), /** @src 3:1136:1146  \"msg.sender\" */ caller()))\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        sstore(/** @src 3:1150:1164  \"s_pendingOwner\" */ 0x01, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ and(_2, _5))\n                        /// @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\"\n                        log3(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ 0, 0, /** @src 3:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ and(_4, _3), /** @src 3:1136:1146  \"msg.sender\" */ caller())\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        return(0, 0)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let cleaned := and(sload(0), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        return(memPos, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        let value := calldataload(4)\n                        let _6 := sub(shl(160, 1), 1)\n                        let _7 := and(value, _6)\n                        if iszero(eq(value, _7)) { revert(0, 0) }\n                        let cleaned_1 := and(sload(0), _6)\n                        if iszero(/** @src 3:1918:1939  \"msg.sender == s_owner\" */ eq(/** @src 3:1918:1928  \"msg.sender\" */ caller(), /** @src 3:1918:1939  \"msg.sender == s_owner\" */ cleaned_1))\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"Only callable by owner\")\n                            revert(memPtr, 100)\n                        }\n                        if /** @src 3:1649:1665  \"to != msg.sender\" */ eq(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ _7, /** @src 3:1918:1928  \"msg.sender\" */ caller())\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 23)\n                            mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01, /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ or(and(sload(/** @src 3:1700:1719  \"s_pendingOwner = to\" */ 0x01), /** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ shl(160, 0xffffffffffffffffffffffff)), _7))\n                        /// @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\"\n                        log3(/** @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\" */ 0, 0, /** @src 3:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, cleaned_1, _7)\n                        /// @src 3:216:2109  \"contract ConfirmedOwnerWithProposal is IOwnable {...\"\n                        return(0, 0)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220aaccd0b6d937aa13150f0347500589797ece4356a25eaa6520548381a930063f64736f6c63430008180033\"\n    }\n}\n",
        "hash": "0100004d15845207658cbf7f4926c81208acc1e51438f9b7e3fee03444804bde",
        "factoryDependencies": {}
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
      "IOwnable": {
        "abi": [
          {
            "inputs": [],
            "name": "acceptOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "owner",
            "outputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "recipient",
                "type": "address"
              }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "acceptOwnership()": "79ba5097",
            "owner()": "8da5cb5b",
            "transferOwnership(address)": "f2fde38b"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
      "LinkTokenInterface": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "remaining",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "balance",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "decimalPlaces",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "addedValue",
                "type": "uint256"
              }
            ],
            "name": "decreaseApproval",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "subtractedValue",
                "type": "uint256"
              }
            ],
            "name": "increaseApproval",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "tokenName",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "tokenSymbol",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "totalTokensIssued",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "bytes",
                "name": "data",
                "type": "bytes"
              }
            ],
            "name": "transferAndCall",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "decreaseApproval(address,uint256)": "66188463",
            "increaseApproval(address,uint256)": "d73dd623",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferAndCall(address,uint256,bytes)": "4000aea0",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
      "VRFConsumerBaseV2": {
        "abi": [
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "have",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "want",
                "type": "address"
              }
            ],
            "name": "OnlyCoordinatorCanFulfill",
            "type": "error"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "requestId",
                "type": "uint256"
              },
              {
                "internalType": "uint256[]",
                "name": "randomWords",
                "type": "uint256[]"
              }
            ],
            "name": "rawFulfillRandomWords",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
          }
        },
        "irOptimized": ""
      }
    }
  },
  "sources": {
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
        "exportedSymbols": {
          "VRFCoordinatorV2Interface": [
            95
          ]
        },
        "id": 96,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "VRFCoordinatorV2Interface",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 95,
            "linearizedBaseContracts": [
              95
            ],
            "name": "VRFCoordinatorV2Interface",
            "nameLocation": "67:25:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "documentation": {
                  "id": 2,
                  "nodeType": "StructuredDocumentation",
                  "src": "97:267:0",
                  "text": " @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"
                },
                "functionSelector": "00012291",
                "id": 12,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getRequestConfig",
                "nameLocation": "376:16:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 3,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "392:2:0"
                },
                "returnParameters": {
                  "id": 11,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 5,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 12,
                      "src": "418:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "418:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 12,
                      "src": "426:6:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "426:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 12,
                      "src": "434:16:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 8,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "434:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 9,
                        "nodeType": "ArrayTypeName",
                        "src": "434:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "417:34:0"
                },
                "scope": 95,
                "src": "367:85:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 13,
                  "nodeType": "StructuredDocumentation",
                  "src": "456:1511:0",
                  "text": " @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."
                },
                "functionSelector": "5d3b1d30",
                "id": 28,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "requestRandomWords",
                "nameLocation": "1979:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 24,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 15,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nameLocation": "2011:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2003:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 14,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2003:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "2031:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2024:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 16,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2024:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19,
                      "mutability": "mutable",
                      "name": "minimumRequestConfirmations",
                      "nameLocation": "2049:27:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2042:34:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 18,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "2042:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21,
                      "mutability": "mutable",
                      "name": "callbackGasLimit",
                      "nameLocation": "2089:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2082:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 20,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2082:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23,
                      "mutability": "mutable",
                      "name": "numWords",
                      "nameLocation": "2118:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2111:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 22,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2111:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1997:133:0"
                },
                "returnParameters": {
                  "id": 27,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 26,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "2157:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 28,
                      "src": "2149:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2149:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2148:19:0"
                },
                "scope": 95,
                "src": "1970:198:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 29,
                  "nodeType": "StructuredDocumentation",
                  "src": "2172:384:0",
                  "text": " @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"
                },
                "functionSelector": "a21a23e4",
                "id": 34,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "createSubscription",
                "nameLocation": "2568:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 30,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2586:2:0"
                },
                "returnParameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "2614:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "2607:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2607:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2606:14:0"
                },
                "scope": 95,
                "src": "2559:62:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 35,
                  "nodeType": "StructuredDocumentation",
                  "src": "2625:381:0",
                  "text": " @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."
                },
                "functionSelector": "a47c7696",
                "id": 49,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "getSubscription",
                "nameLocation": "3018:15:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 38,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "3046:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "3039:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3039:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3033:22:0"
                },
                "returnParameters": {
                  "id": 48,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 40,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "3086:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "3079:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "3079:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "reqCount",
                      "nameLocation": "3102:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "3095:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3095:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 44,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3120:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "3112:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 43,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3112:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "consumers",
                      "nameLocation": "3144:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 49,
                      "src": "3127:26:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 45,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3127:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 46,
                        "nodeType": "ArrayTypeName",
                        "src": "3127:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3078:76:0"
                },
                "scope": 95,
                "src": "3009:146:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 50,
                  "nodeType": "StructuredDocumentation",
                  "src": "3159:164:0",
                  "text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"
                },
                "functionSelector": "04c357cb",
                "id": 57,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "requestSubscriptionOwnerTransfer",
                "nameLocation": "3335:32:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 55,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "3375:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "3368:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3368:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 54,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "3390:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 57,
                      "src": "3382:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3382:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3367:32:0"
                },
                "returnParameters": {
                  "id": 56,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3408:0:0"
                },
                "scope": 95,
                "src": "3326:83:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 58,
                  "nodeType": "StructuredDocumentation",
                  "src": "3413:212:0",
                  "text": " @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."
                },
                "functionSelector": "82359740",
                "id": 63,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "acceptSubscriptionOwnerTransfer",
                "nameLocation": "3637:31:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 61,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "3676:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 63,
                      "src": "3669:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3669:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3668:14:0"
                },
                "returnParameters": {
                  "id": 62,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3691:0:0"
                },
                "scope": 95,
                "src": "3628:64:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 64,
                  "nodeType": "StructuredDocumentation",
                  "src": "3696:170:0",
                  "text": " @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"
                },
                "functionSelector": "7341c10c",
                "id": 71,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "addConsumer",
                "nameLocation": "3878:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 69,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 66,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "3897:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "3890:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 65,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3890:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 68,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nameLocation": "3912:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "3904:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 67,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3904:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3889:32:0"
                },
                "returnParameters": {
                  "id": 70,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3930:0:0"
                },
                "scope": 95,
                "src": "3869:62:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 72,
                  "nodeType": "StructuredDocumentation",
                  "src": "3935:172:0",
                  "text": " @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"
                },
                "functionSelector": "9f87fad7",
                "id": 79,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "removeConsumer",
                "nameLocation": "4119:14:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 77,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "4141:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "4134:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4134:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 76,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nameLocation": "4156:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "4148:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 75,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4148:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4133:32:0"
                },
                "returnParameters": {
                  "id": 78,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4174:0:0"
                },
                "scope": 95,
                "src": "4110:65:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 80,
                  "nodeType": "StructuredDocumentation",
                  "src": "4179:140:0",
                  "text": " @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"
                },
                "functionSelector": "d7ae1d30",
                "id": 87,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "cancelSubscription",
                "nameLocation": "4331:18:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 85,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "4357:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "4350:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 81,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4350:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4372:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "4364:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4364:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4349:26:0"
                },
                "returnParameters": {
                  "id": 86,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4384:0:0"
                },
                "scope": 95,
                "src": "4322:63:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "e82ad7d4",
                "id": 94,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "pendingRequestExists",
                "nameLocation": "4690:20:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 90,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 89,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "4718:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "4711:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 88,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4711:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4710:14:0"
                },
                "returnParameters": {
                  "id": 93,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "4748:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4748:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4747:6:0"
                },
                "scope": 95,
                "src": "4681:73:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 96,
            "src": "57:4699:0",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "32:4725:0"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol",
        "exportedSymbols": {
          "ConfirmedOwner": [
            1046
          ],
          "ConfirmedOwnerWithProposal": [
            1209
          ],
          "LinkTokenInterface": [
            1320
          ],
          "VRFConsumerBaseV2": [
            1378
          ],
          "VRFCoordinatorV2Interface": [
            95
          ],
          "VRFCoordinatorV2Mock": [
            1025
          ]
        },
        "id": 1026,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 97,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "92:23:1"
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
            "file": "../shared/interfaces/LinkTokenInterface.sol",
            "id": 98,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1026,
            "sourceUnit": 1321,
            "src": "117:53:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol",
            "file": "../interfaces/VRFCoordinatorV2Interface.sol",
            "id": 99,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1026,
            "sourceUnit": 96,
            "src": "171:53:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
            "file": "../vrf/VRFConsumerBaseV2.sol",
            "id": 100,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1026,
            "sourceUnit": 1379,
            "src": "225:38:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
            "file": "../shared/access/ConfirmedOwner.sol",
            "id": 101,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1026,
            "sourceUnit": 1047,
            "src": "264:45:1",
            "symbolAliases": [],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 102,
                  "name": "VRFCoordinatorV2Interface",
                  "nameLocations": [
                    "344:25:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "344:25:1"
                },
                "id": 103,
                "nodeType": "InheritanceSpecifier",
                "src": "344:25:1"
              },
              {
                "baseName": {
                  "id": 104,
                  "name": "ConfirmedOwner",
                  "nameLocations": [
                    "371:14:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1046,
                  "src": "371:14:1"
                },
                "id": 105,
                "nodeType": "InheritanceSpecifier",
                "src": "371:14:1"
              }
            ],
            "canonicalName": "VRFCoordinatorV2Mock",
            "contractDependencies": [],
            "contractKind": "contract",
            "fullyImplemented": true,
            "id": 1025,
            "linearizedBaseContracts": [
              1025,
              1046,
              1209,
              1225,
              95
            ],
            "name": "VRFCoordinatorV2Mock",
            "nameLocation": "320:20:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "functionSelector": "3d18651e",
                "id": 107,
                "mutability": "immutable",
                "name": "BASE_FEE",
                "nameLocation": "414:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "390:32:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 106,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "390:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "a410347f",
                "id": 109,
                "mutability": "immutable",
                "name": "GAS_PRICE_LINK",
                "nameLocation": "450:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "426:38:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint96",
                  "typeString": "uint96"
                },
                "typeName": {
                  "id": 108,
                  "name": "uint96",
                  "nodeType": "ElementaryTypeName",
                  "src": "426:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "functionSelector": "64d51a2a",
                "id": 112,
                "mutability": "immutable",
                "name": "MAX_CONSUMERS",
                "nameLocation": "492:13:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "468:43:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                },
                "typeName": {
                  "id": 110,
                  "name": "uint16",
                  "nodeType": "ElementaryTypeName",
                  "src": "468:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  }
                },
                "value": {
                  "hexValue": "313030",
                  "id": 111,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "508:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "visibility": "public"
              },
              {
                "errorSelector": "1f6a65b6",
                "id": 114,
                "name": "InvalidSubscription",
                "nameLocation": "522:19:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 113,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "541:2:1"
                },
                "src": "516:28:1"
              },
              {
                "errorSelector": "f4d678b8",
                "id": 116,
                "name": "InsufficientBalance",
                "nameLocation": "553:19:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 115,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "572:2:1"
                },
                "src": "547:28:1"
              },
              {
                "errorSelector": "d8a3fb52",
                "id": 120,
                "name": "MustBeSubOwner",
                "nameLocation": "584:14:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 119,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 118,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "607:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 120,
                      "src": "599:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 117,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "599:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "598:15:1"
                },
                "src": "578:36:1"
              },
              {
                "errorSelector": "05a48e0f",
                "id": 122,
                "name": "TooManyConsumers",
                "nameLocation": "623:16:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 121,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "639:2:1"
                },
                "src": "617:25:1"
              },
              {
                "errorSelector": "71e83137",
                "id": 124,
                "name": "InvalidConsumer",
                "nameLocation": "651:15:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 123,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "666:2:1"
                },
                "src": "645:24:1"
              },
              {
                "errorSelector": "3f3df5b6",
                "id": 126,
                "name": "InvalidRandomWords",
                "nameLocation": "678:18:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 125,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "696:2:1"
                },
                "src": "672:27:1"
              },
              {
                "errorSelector": "ed3ba6a6",
                "id": 128,
                "name": "Reentrant",
                "nameLocation": "708:9:1",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 127,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "717:2:1"
                },
                "src": "702:18:1"
              },
              {
                "anonymous": false,
                "eventSelector": "63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a9772",
                "id": 146,
                "name": "RandomWordsRequested",
                "nameLocation": "730:20:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 145,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 130,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "keyHash",
                      "nameLocation": "772:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "756:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "756:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 132,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "793:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "785:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 131,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 134,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "preSeed",
                      "nameLocation": "816:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "808:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 133,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "808:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 136,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "844:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "829:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 135,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "829:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 138,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "minimumRequestConfirmations",
                      "nameLocation": "862:27:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "855:34:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 137,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "855:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 140,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "callbackGasLimit",
                      "nameLocation": "902:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "895:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 139,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "895:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 142,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "numWords",
                      "nameLocation": "931:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "924:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 141,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "924:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 144,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "961:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 146,
                      "src": "945:22:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 143,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "945:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "750:221:1"
                },
                "src": "724:248:1"
              },
              {
                "anonymous": false,
                "eventSelector": "7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4",
                "id": 156,
                "name": "RandomWordsFulfilled",
                "nameLocation": "981:20:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 155,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 148,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "1018:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1002:25:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 147,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1002:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 150,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "outputSeed",
                      "nameLocation": "1037:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1029:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 149,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1029:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 152,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "payment",
                      "nameLocation": "1056:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1049:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 151,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "1049:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 154,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1070:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1065:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 153,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1065:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1001:77:1"
                },
                "src": "975:104:1"
              },
              {
                "anonymous": false,
                "eventSelector": "464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf",
                "id": 162,
                "name": "SubscriptionCreated",
                "nameLocation": "1088:19:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 161,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 158,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "1123:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1108:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1108:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 160,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1138:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 162,
                      "src": "1130:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 159,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1130:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1107:37:1"
                },
                "src": "1082:63:1"
              },
              {
                "anonymous": false,
                "eventSelector": "d39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f8",
                "id": 170,
                "name": "SubscriptionFunded",
                "nameLocation": "1154:18:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 169,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 164,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "1188:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1173:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1173:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 166,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "oldBalance",
                      "nameLocation": "1203:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1195:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 165,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1195:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 168,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "newBalance",
                      "nameLocation": "1223:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "1215:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1215:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1172:62:1"
                },
                "src": "1148:87:1"
              },
              {
                "anonymous": false,
                "eventSelector": "e8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815",
                "id": 178,
                "name": "SubscriptionCanceled",
                "nameLocation": "1244:20:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 177,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 172,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "1280:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "1265:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 171,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1265:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 174,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1295:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "1287:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 173,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1287:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 176,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1307:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 178,
                      "src": "1299:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 175,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1264:50:1"
                },
                "src": "1238:77:1"
              },
              {
                "anonymous": false,
                "eventSelector": "752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc3",
                "id": 184,
                "name": "ConsumerAdded",
                "nameLocation": "1324:13:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 183,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 180,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "1353:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1338:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 179,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1338:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 182,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nameLocation": "1368:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 184,
                      "src": "1360:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1360:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1337:40:1"
                },
                "src": "1318:60:1"
              },
              {
                "anonymous": false,
                "eventSelector": "f9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc",
                "id": 190,
                "name": "ConsumerRemoved",
                "nameLocation": "1387:15:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 189,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 186,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "subId",
                      "nameLocation": "1418:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1403:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 185,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1403:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 188,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "consumer",
                      "nameLocation": "1433:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 190,
                      "src": "1425:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 187,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1425:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1402:40:1"
                },
                "src": "1381:62:1"
              },
              {
                "anonymous": false,
                "eventSelector": "4b2974a542484cba2783812ff8033f7fc682cac2fe0905c28c5e27869b3155be",
                "id": 192,
                "name": "ConfigSet",
                "nameLocation": "1452:9:1",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 191,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1461:2:1"
                },
                "src": "1446:18:1"
              },
              {
                "canonicalName": "VRFCoordinatorV2Mock.Config",
                "id": 195,
                "members": [
                  {
                    "constant": false,
                    "id": 194,
                    "mutability": "mutable",
                    "name": "reentrancyLock",
                    "nameLocation": "1523:14:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 195,
                    "src": "1518:19:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "typeName": {
                      "id": 193,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1518:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Config",
                "nameLocation": "1475:6:1",
                "nodeType": "StructDefinition",
                "scope": 1025,
                "src": "1468:74:1",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 198,
                "mutability": "mutable",
                "name": "s_config",
                "nameLocation": "1560:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1545:23:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Config_$195_storage",
                  "typeString": "struct VRFCoordinatorV2Mock.Config"
                },
                "typeName": {
                  "id": 197,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 196,
                    "name": "Config",
                    "nameLocations": [
                      "1545:6:1"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 195,
                    "src": "1545:6:1"
                  },
                  "referencedDeclaration": 195,
                  "src": "1545:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Config_$195_storage_ptr",
                    "typeString": "struct VRFCoordinatorV2Mock.Config"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 200,
                "mutability": "mutable",
                "name": "s_currentSubId",
                "nameLocation": "1579:14:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1572:21:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 199,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "1572:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 203,
                "mutability": "mutable",
                "name": "s_nextRequestId",
                "nameLocation": "1605:15:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1597:27:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 201,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1597:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "31",
                  "id": 202,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1623:1:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 206,
                "mutability": "mutable",
                "name": "s_nextPreSeed",
                "nameLocation": "1636:13:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1628:27:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 204,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1628:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": {
                  "hexValue": "313030",
                  "id": 205,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1652:3:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                "visibility": "internal"
              },
              {
                "canonicalName": "VRFCoordinatorV2Mock.Subscription",
                "id": 211,
                "members": [
                  {
                    "constant": false,
                    "id": 208,
                    "mutability": "mutable",
                    "name": "owner",
                    "nameLocation": "1693:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 211,
                    "src": "1685:13:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "typeName": {
                      "id": 207,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1685:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 210,
                    "mutability": "mutable",
                    "name": "balance",
                    "nameLocation": "1711:7:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 211,
                    "src": "1704:14:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    },
                    "typeName": {
                      "id": 209,
                      "name": "uint96",
                      "nodeType": "ElementaryTypeName",
                      "src": "1704:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Subscription",
                "nameLocation": "1666:12:1",
                "nodeType": "StructDefinition",
                "scope": 1025,
                "src": "1659:64:1",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 216,
                "mutability": "mutable",
                "name": "s_subscriptions",
                "nameLocation": "1758:15:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1726:47:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                  "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"
                },
                "typeName": {
                  "id": 215,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 212,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1726:31:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                    "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 214,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 213,
                      "name": "Subscription",
                      "nameLocations": [
                        "1744:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 211,
                      "src": "1744:12:1"
                    },
                    "referencedDeclaration": 211,
                    "src": "1744:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Subscription_$211_storage_ptr",
                      "typeString": "struct VRFCoordinatorV2Mock.Subscription"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 221,
                "mutability": "mutable",
                "name": "s_consumers",
                "nameLocation": "1837:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1808:40:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                  "typeString": "mapping(uint64 => address[])"
                },
                "typeName": {
                  "id": 220,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 217,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1808:28:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                    "typeString": "mapping(uint64 => address[])"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "baseType": {
                      "id": 218,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1826:7:1",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 219,
                    "nodeType": "ArrayTypeName",
                    "src": "1826:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "canonicalName": "VRFCoordinatorV2Mock.Request",
                "id": 228,
                "members": [
                  {
                    "constant": false,
                    "id": 223,
                    "mutability": "mutable",
                    "name": "subId",
                    "nameLocation": "1909:5:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 228,
                    "src": "1902:12:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "typeName": {
                      "id": 222,
                      "name": "uint64",
                      "nodeType": "ElementaryTypeName",
                      "src": "1902:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 225,
                    "mutability": "mutable",
                    "name": "callbackGasLimit",
                    "nameLocation": "1927:16:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 228,
                    "src": "1920:23:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "typeName": {
                      "id": 224,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1920:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "visibility": "internal"
                  },
                  {
                    "constant": false,
                    "id": 227,
                    "mutability": "mutable",
                    "name": "numWords",
                    "nameLocation": "1956:8:1",
                    "nodeType": "VariableDeclaration",
                    "scope": 228,
                    "src": "1949:15:1",
                    "stateVariable": false,
                    "storageLocation": "default",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "typeName": {
                      "id": 226,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1949:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "visibility": "internal"
                  }
                ],
                "name": "Request",
                "nameLocation": "1888:7:1",
                "nodeType": "StructDefinition",
                "scope": 1025,
                "src": "1881:88:1",
                "visibility": "public"
              },
              {
                "constant": false,
                "id": 233,
                "mutability": "mutable",
                "name": "s_requests",
                "nameLocation": "2000:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 1025,
                "src": "1972:38:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                  "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"
                },
                "typeName": {
                  "id": 232,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1980:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1972:27:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                    "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 231,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 230,
                      "name": "Request",
                      "nameLocations": [
                        "1991:7:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 228,
                      "src": "1991:7:1"
                    },
                    "referencedDeclaration": 228,
                    "src": "1991:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$228_storage_ptr",
                      "typeString": "struct VRFCoordinatorV2Mock.Request"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 255,
                  "nodeType": "Block",
                  "src": "2123:83:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 244,
                          "name": "BASE_FEE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "2129:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 245,
                          "name": "_baseFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 235,
                          "src": "2140:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "2129:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "id": 247,
                      "nodeType": "ExpressionStatement",
                      "src": "2129:19:1"
                    },
                    {
                      "expression": {
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 248,
                          "name": "GAS_PRICE_LINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 109,
                          "src": "2154:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 249,
                          "name": "_gasPriceLink",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 237,
                          "src": "2171:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "2154:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "id": 251,
                      "nodeType": "ExpressionStatement",
                      "src": "2154:30:1"
                    },
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 252,
                          "name": "setConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 272,
                          "src": "2190:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2190:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 254,
                      "nodeType": "ExpressionStatement",
                      "src": "2190:11:1"
                    }
                  ]
                },
                "id": 256,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 240,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2111:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2115:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2111:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 242,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 239,
                      "name": "ConfirmedOwner",
                      "nameLocations": [
                        "2096:14:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1046,
                      "src": "2096:14:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2096:26:1"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 238,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "_baseFee",
                      "nameLocation": "2064:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2057:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "2057:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 237,
                      "mutability": "mutable",
                      "name": "_gasPriceLink",
                      "nameLocation": "2081:13:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 256,
                      "src": "2074:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 236,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "2074:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2056:39:1"
                },
                "returnParameters": {
                  "id": 243,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2123:0:1"
                },
                "scope": 1025,
                "src": "2045:161:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 271,
                  "nodeType": "Block",
                  "src": "2326:75:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 262,
                          "name": "s_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "2332:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$195_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Config storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2367:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 263,
                            "name": "Config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2343:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Config_$195_storage_ptr_$",
                              "typeString": "type(struct VRFCoordinatorV2Mock.Config storage pointer)"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "2351:14:1"
                          ],
                          "names": [
                            "reentrancyLock"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "2343:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$195_memory_ptr",
                            "typeString": "struct VRFCoordinatorV2Mock.Config memory"
                          }
                        },
                        "src": "2332:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Config_$195_storage",
                          "typeString": "struct VRFCoordinatorV2Mock.Config storage ref"
                        }
                      },
                      "id": 267,
                      "nodeType": "ExpressionStatement",
                      "src": "2332:42:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 268,
                          "name": "ConfigSet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2385:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                            "typeString": "function ()"
                          }
                        },
                        "id": 269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2385:11:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 270,
                      "nodeType": "EmitStatement",
                      "src": "2380:16:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 257,
                  "nodeType": "StructuredDocumentation",
                  "src": "2210:75:1",
                  "text": " @notice Sets the configuration of the vrfv2 mock coordinator"
                },
                "functionSelector": "8b673e7a",
                "id": 272,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 260,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 259,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "2316:9:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1208,
                      "src": "2316:9:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "2316:9:1"
                  }
                ],
                "name": "setConfig",
                "nameLocation": "2297:9:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 258,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2306:2:1"
                },
                "returnParameters": {
                  "id": 261,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2326:0:1"
                },
                "scope": 1025,
                "src": "2288:113:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 314,
                  "nodeType": "Block",
                  "src": "2491:204:1",
                  "statements": [
                    {
                      "assignments": [
                        285
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 285,
                          "mutability": "mutable",
                          "name": "consumers",
                          "nameLocation": "2514:9:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 314,
                          "src": "2497:26:1",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 283,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2497:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 284,
                            "nodeType": "ArrayTypeName",
                            "src": "2497:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 289,
                      "initialValue": {
                        "baseExpression": {
                          "id": 286,
                          "name": "s_consumers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "2526:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint64 => address[] storage ref)"
                          }
                        },
                        "id": 288,
                        "indexExpression": {
                          "id": 287,
                          "name": "_subId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 274,
                          "src": "2538:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2526:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "2497:48:1"
                    },
                    {
                      "body": {
                        "id": 310,
                        "nodeType": "Block",
                        "src": "2598:75:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 305,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 301,
                                  "name": "consumers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 285,
                                  "src": "2610:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 303,
                                "indexExpression": {
                                  "id": 302,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "2620:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2610:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 304,
                                "name": "_consumer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 276,
                                "src": "2626:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2610:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 309,
                            "nodeType": "IfStatement",
                            "src": "2606:61:1",
                            "trueBody": {
                              "id": 308,
                              "nodeType": "Block",
                              "src": "2637:30:1",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "74727565",
                                    "id": 306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2654:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  "functionReturnParameters": 280,
                                  "id": 307,
                                  "nodeType": "Return",
                                  "src": "2647:11:1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 294,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 291,
                          "src": "2571:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 295,
                            "name": "consumers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 285,
                            "src": "2575:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2585:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2575:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2571:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 311,
                      "initializationExpression": {
                        "assignments": [
                          291
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 291,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "2564:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 311,
                            "src": "2556:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 290,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2556:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 293,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2568:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2556:13:1"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "2593:3:1",
                          "subExpression": {
                            "id": 298,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "2593:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 300,
                        "nodeType": "ExpressionStatement",
                        "src": "2593:3:1"
                      },
                      "nodeType": "ForStatement",
                      "src": "2551:122:1"
                    },
                    {
                      "expression": {
                        "hexValue": "66616c7365",
                        "id": 312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2685:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "functionReturnParameters": 280,
                      "id": 313,
                      "nodeType": "Return",
                      "src": "2678:12:1"
                    }
                  ]
                },
                "functionSelector": "ed5eb06d",
                "id": 315,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "consumerIsAdded",
                "nameLocation": "2414:15:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 277,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 274,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "2437:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "2430:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 273,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2430:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 276,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "2453:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "2445:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 275,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2445:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2429:34:1"
                },
                "returnParameters": {
                  "id": 280,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 315,
                      "src": "2485:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2485:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2484:6:1"
                },
                "scope": 1025,
                "src": "2405:290:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 332,
                  "nodeType": "Block",
                  "src": "2760:97:1",
                  "statements": [
                    {
                      "condition": {
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2770:35:1",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 322,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 317,
                              "src": "2787:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 323,
                              "name": "_consumer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "2795:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 321,
                            "name": "consumerIsAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "2771:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (uint64,address) view returns (bool)"
                            }
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2771:34:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 330,
                      "nodeType": "IfStatement",
                      "src": "2766:80:1",
                      "trueBody": {
                        "id": 329,
                        "nodeType": "Block",
                        "src": "2807:39:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 326,
                                "name": "InvalidConsumer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 124,
                                "src": "2822:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2822:17:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 328,
                            "nodeType": "RevertStatement",
                            "src": "2815:24:1"
                          }
                        ]
                      }
                    },
                    {
                      "id": 331,
                      "nodeType": "PlaceholderStatement",
                      "src": "2851:1:1"
                    }
                  ]
                },
                "id": 333,
                "name": "onlyValidConsumer",
                "nameLocation": "2708:17:1",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 320,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "2733:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 333,
                      "src": "2726:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2726:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "2749:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 333,
                      "src": "2741:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2741:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2725:34:1"
                },
                "src": "2699:158:1",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 353,
                  "nodeType": "Block",
                  "src": "3500:82:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 344,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "3537:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 345,
                            "name": "_consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 338,
                            "src": "3549:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3574:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "3560:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (uint256[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 346,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3564:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 347,
                                "nodeType": "ArrayTypeName",
                                "src": "3564:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                  "typeString": "uint256[]"
                                }
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3560:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 343,
                          "name": "fulfillRandomWordsWithOverride",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 529,
                          "src": "3506:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,address,uint256[] memory)"
                          }
                        },
                        "id": 351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3506:71:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 352,
                      "nodeType": "ExpressionStatement",
                      "src": "3506:71:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 334,
                  "nodeType": "StructuredDocumentation",
                  "src": "2861:547:1",
                  "text": " @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"
                },
                "functionSelector": "808974ff",
                "id": 354,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 341,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 340,
                      "name": "nonReentrant",
                      "nameLocations": [
                        "3487:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 979,
                      "src": "3487:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "3487:12:1"
                  }
                ],
                "name": "fulfillRandomWords",
                "nameLocation": "3420:18:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 339,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 336,
                      "mutability": "mutable",
                      "name": "_requestId",
                      "nameLocation": "3447:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "3439:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 335,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3439:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "3467:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 354,
                      "src": "3459:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3459:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3438:39:1"
                },
                "returnParameters": {
                  "id": 342,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3500:0:1"
                },
                "scope": 1025,
                "src": "3411:171:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 528,
                  "nodeType": "Block",
                  "src": "3973:1088:1",
                  "statements": [
                    {
                      "assignments": [
                        366
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 366,
                          "mutability": "mutable",
                          "name": "startGas",
                          "nameLocation": "3987:8:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "3979:16:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 365,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3979:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 369,
                      "initialValue": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 367,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "3998:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3998:9:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3979:28:1"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 375,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 370,
                              "name": "s_requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 233,
                              "src": "4017:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                                "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"
                              }
                            },
                            "id": 372,
                            "indexExpression": {
                              "id": 371,
                              "name": "_requestId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 357,
                              "src": "4028:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4017:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$228_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4040:5:1",
                          "memberName": "subId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 223,
                          "src": "4017:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4049:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4017:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 381,
                      "nodeType": "IfStatement",
                      "src": "4013:83:1",
                      "trueBody": {
                        "id": 380,
                        "nodeType": "Block",
                        "src": "4052:44:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "6e6f6e6578697374656e742072657175657374",
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4067:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0",
                                    "typeString": "literal_string \"nonexistent request\""
                                  },
                                  "value": "nonexistent request"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0",
                                    "typeString": "literal_string \"nonexistent request\""
                                  }
                                ],
                                "id": 376,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "4060:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4060:29:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 379,
                            "nodeType": "ExpressionStatement",
                            "src": "4060:29:1"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        384
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 384,
                          "mutability": "mutable",
                          "name": "req",
                          "nameLocation": "4116:3:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "4101:18:1",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                            "typeString": "struct VRFCoordinatorV2Mock.Request"
                          },
                          "typeName": {
                            "id": 383,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 382,
                              "name": "Request",
                              "nameLocations": [
                                "4101:7:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 228,
                              "src": "4101:7:1"
                            },
                            "referencedDeclaration": 228,
                            "src": "4101:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Request_$228_storage_ptr",
                              "typeString": "struct VRFCoordinatorV2Mock.Request"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 388,
                      "initialValue": {
                        "baseExpression": {
                          "id": 385,
                          "name": "s_requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 233,
                          "src": "4122:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                            "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"
                          }
                        },
                        "id": 387,
                        "indexExpression": {
                          "id": 386,
                          "name": "_requestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 357,
                          "src": "4133:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4122:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$228_storage",
                          "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4101:43:1"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 389,
                            "name": "_words",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "4155:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4162:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4155:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4172:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4155:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 431,
                              "name": "_words",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 362,
                              "src": "4362:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4369:6:1",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "4362:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 433,
                              "name": "req",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "4379:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                              }
                            },
                            "id": 434,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4383:8:1",
                            "memberName": "numWords",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 227,
                            "src": "4379:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "4362:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 440,
                        "nodeType": "IfStatement",
                        "src": "4358:77:1",
                        "trueBody": {
                          "id": 439,
                          "nodeType": "Block",
                          "src": "4393:42:1",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 436,
                                  "name": "InvalidRandomWords",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 126,
                                  "src": "4408:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4408:20:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 438,
                              "nodeType": "RevertStatement",
                              "src": "4401:27:1"
                            }
                          ]
                        }
                      },
                      "id": 441,
                      "nodeType": "IfStatement",
                      "src": "4151:284:1",
                      "trueBody": {
                        "id": 430,
                        "nodeType": "Block",
                        "src": "4175:177:1",
                        "statements": [
                          {
                            "expression": {
                              "id": 400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 393,
                                "name": "_words",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 362,
                                "src": "4183:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 397,
                                      "name": "req",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 384,
                                      "src": "4206:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                        "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                                      }
                                    },
                                    "id": 398,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "4210:8:1",
                                    "memberName": "numWords",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 227,
                                    "src": "4206:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  ],
                                  "id": 396,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "4192:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                                    "typeString": "function (uint256) pure returns (uint256[] memory)"
                                  },
                                  "typeName": {
                                    "baseType": {
                                      "id": 394,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4196:7:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 395,
                                    "nodeType": "ArrayTypeName",
                                    "src": "4196:9:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                      "typeString": "uint256[]"
                                    }
                                  }
                                },
                                "id": 399,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4192:27:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "src": "4183:36:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 401,
                            "nodeType": "ExpressionStatement",
                            "src": "4183:36:1"
                          },
                          {
                            "body": {
                              "id": 428,
                              "nodeType": "Block",
                              "src": "4270:76:1",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 413,
                                        "name": "_words",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 362,
                                        "src": "4280:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 415,
                                      "indexExpression": {
                                        "id": 414,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 403,
                                        "src": "4287:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "4280:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "id": 421,
                                                  "name": "_requestId",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 357,
                                                  "src": "4321:10:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                {
                                                  "id": 422,
                                                  "name": "i",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 403,
                                                  "src": "4333:1:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  },
                                                  {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 419,
                                                  "name": "abi",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -1,
                                                  "src": "4310:3:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_abi",
                                                    "typeString": "abi"
                                                  }
                                                },
                                                "id": 420,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberLocation": "4314:6:1",
                                                "memberName": "encode",
                                                "nodeType": "MemberAccess",
                                                "src": "4310:10:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                                  "typeString": "function () pure returns (bytes memory)"
                                                }
                                              },
                                              "id": 423,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "4310:25:1",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            ],
                                            "id": 418,
                                            "name": "keccak256",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -8,
                                            "src": "4300:9:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                              "typeString": "function (bytes memory) pure returns (bytes32)"
                                            }
                                          },
                                          "id": 424,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4300:36:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 417,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4292:7:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 416,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4292:7:1",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 425,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4292:45:1",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4280:57:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 427,
                                  "nodeType": "ExpressionStatement",
                                  "src": "4280:57:1"
                                }
                              ]
                            },
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 406,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 403,
                                "src": "4247:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "expression": {
                                  "id": 407,
                                  "name": "req",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 384,
                                  "src": "4251:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                    "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                                  }
                                },
                                "id": 408,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4255:8:1",
                                "memberName": "numWords",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 227,
                                "src": "4251:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "4247:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 429,
                            "initializationExpression": {
                              "assignments": [
                                403
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 403,
                                  "mutability": "mutable",
                                  "name": "i",
                                  "nameLocation": "4240:1:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 429,
                                  "src": "4232:9:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 402,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4232:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 405,
                              "initialValue": {
                                "hexValue": "30",
                                "id": 404,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4244:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4232:13:1"
                            },
                            "isSimpleCounterLoop": true,
                            "loopExpression": {
                              "expression": {
                                "id": 411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "4265:3:1",
                                "subExpression": {
                                  "id": 410,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 403,
                                  "src": "4265:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 412,
                              "nodeType": "ExpressionStatement",
                              "src": "4265:3:1"
                            },
                            "nodeType": "ForStatement",
                            "src": "4227:119:1"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        444
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 444,
                          "mutability": "mutable",
                          "name": "v",
                          "nameLocation": "4459:1:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "4441:19:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VRFConsumerBaseV2_$1378",
                            "typeString": "contract VRFConsumerBaseV2"
                          },
                          "typeName": {
                            "id": 443,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 442,
                              "name": "VRFConsumerBaseV2",
                              "nameLocations": [
                                "4441:17:1"
                              ],
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1378,
                              "src": "4441:17:1"
                            },
                            "referencedDeclaration": 1378,
                            "src": "4441:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VRFConsumerBaseV2_$1378",
                              "typeString": "contract VRFConsumerBaseV2"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 445,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4441:19:1"
                    },
                    {
                      "assignments": [
                        447
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 447,
                          "mutability": "mutable",
                          "name": "callReq",
                          "nameLocation": "4479:7:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "4466:20:1",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes"
                          },
                          "typeName": {
                            "id": 446,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4466:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 456,
                      "initialValue": {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 450,
                                "name": "v",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 444,
                                "src": "4512:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_VRFConsumerBaseV2_$1378",
                                  "typeString": "contract VRFConsumerBaseV2"
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4514:21:1",
                              "memberName": "rawFulfillRandomWords",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1377,
                              "src": "4512:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                                "typeString": "function (uint256,uint256[] memory) external"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4536:8:1",
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "4512:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 453,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "4546:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 454,
                            "name": "_words",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 362,
                            "src": "4558:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "expression": {
                            "id": 448,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4489:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "4493:18:1",
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "4489:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4489:76:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4466:99:1"
                    },
                    {
                      "expression": {
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 457,
                            "name": "s_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "4571:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$195_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Config storage ref"
                            }
                          },
                          "id": 459,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "4580:14:1",
                          "memberName": "reentrancyLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 194,
                          "src": "4571:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4597:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "4571:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 462,
                      "nodeType": "ExpressionStatement",
                      "src": "4571:30:1"
                    },
                    {
                      "assignments": [
                        464,
                        null
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 464,
                          "mutability": "mutable",
                          "name": "success",
                          "nameLocation": "4613:7:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "4608:12:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "typeName": {
                            "id": 463,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "4608:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "visibility": "internal"
                        },
                        null
                      ],
                      "id": 472,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 470,
                            "name": "callReq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 447,
                            "src": "4668:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 465,
                              "name": "_consumer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 359,
                              "src": "4626:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4636:4:1",
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "src": "4626:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "names": [
                            "gas"
                          ],
                          "nodeType": "FunctionCallOptions",
                          "options": [
                            {
                              "expression": {
                                "id": 467,
                                "name": "req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "4646:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                  "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                                }
                              },
                              "id": 468,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4650:16:1",
                              "memberName": "callbackGasLimit",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 225,
                              "src": "4646:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "src": "4626:41:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                            "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                          }
                        },
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4626:50:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "tuple(bool,bytes memory)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4607:69:1"
                    },
                    {
                      "expression": {
                        "id": 477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "id": 473,
                            "name": "s_config",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 198,
                            "src": "4682:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Config_$195_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Config storage ref"
                            }
                          },
                          "id": 475,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "4691:14:1",
                          "memberName": "reentrancyLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 194,
                          "src": "4682:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "66616c7365",
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4708:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "4682:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 478,
                      "nodeType": "ExpressionStatement",
                      "src": "4682:31:1"
                    },
                    {
                      "assignments": [
                        480
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 480,
                          "mutability": "mutable",
                          "name": "payment",
                          "nameLocation": "4727:7:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 528,
                          "src": "4720:14:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "typeName": {
                            "id": 479,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4720:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 494,
                      "initialValue": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 492,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 483,
                              "name": "BASE_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 107,
                              "src": "4744:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 484,
                                          "name": "startGas",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 366,
                                          "src": "4757:8:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "arguments": [],
                                          "expression": {
                                            "argumentTypes": [],
                                            "id": 485,
                                            "name": "gasleft",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -7,
                                            "src": "4768:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                              "typeString": "function () view returns (uint256)"
                                            }
                                          },
                                          "id": 486,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4768:9:1",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "4757:20:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 488,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4756:22:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 489,
                                    "name": "GAS_PRICE_LINK",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 109,
                                    "src": "4781:14:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint96",
                                      "typeString": "uint96"
                                    }
                                  },
                                  "src": "4756:39:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 491,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4755:41:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4744:52:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4737:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint96_$",
                            "typeString": "type(uint96)"
                          },
                          "typeName": {
                            "id": 481,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "4737:6:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4737:60:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4720:77:1"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        "id": 501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 495,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "4807:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 498,
                            "indexExpression": {
                              "expression": {
                                "id": 496,
                                "name": "req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "4823:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                  "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                                }
                              },
                              "id": 497,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4827:5:1",
                              "memberName": "subId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 223,
                              "src": "4823:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4807:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4834:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 210,
                          "src": "4807:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 500,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "4844:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "4807:44:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 506,
                      "nodeType": "IfStatement",
                      "src": "4803:93:1",
                      "trueBody": {
                        "id": 505,
                        "nodeType": "Block",
                        "src": "4853:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 502,
                                "name": "InsufficientBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 116,
                                "src": "4868:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4868:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 504,
                            "nodeType": "RevertStatement",
                            "src": "4861:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 507,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "4901:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 510,
                            "indexExpression": {
                              "expression": {
                                "id": 508,
                                "name": "req",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 384,
                                "src": "4917:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                                  "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                                }
                              },
                              "id": 509,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4921:5:1",
                              "memberName": "subId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 223,
                              "src": "4917:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4901:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 511,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "4928:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 210,
                          "src": "4901:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "id": 512,
                          "name": "payment",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 480,
                          "src": "4939:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "4901:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "id": 514,
                      "nodeType": "ExpressionStatement",
                      "src": "4901:45:1"
                    },
                    {
                      "expression": {
                        "id": 519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "4952:31:1",
                        "subExpression": {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 515,
                                "name": "s_requests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 233,
                                "src": "4960:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                                  "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"
                                }
                              },
                              "id": 517,
                              "indexExpression": {
                                "id": 516,
                                "name": "_requestId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "4971:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "4960:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Request_$228_storage",
                                "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                              }
                            }
                          ],
                          "id": 518,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "4959:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$228_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 520,
                      "nodeType": "ExpressionStatement",
                      "src": "4952:31:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 522,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "5015:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 523,
                            "name": "_requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "5027:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 524,
                            "name": "payment",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "5039:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "id": 525,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 464,
                            "src": "5048:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "id": 521,
                          "name": "RandomWordsFulfilled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 156,
                          "src": "4994:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$",
                            "typeString": "function (uint256,uint256,uint96,bool)"
                          }
                        },
                        "id": 526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4994:62:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 527,
                      "nodeType": "EmitStatement",
                      "src": "4989:67:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 355,
                  "nodeType": "StructuredDocumentation",
                  "src": "3586:273:1",
                  "text": " @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"
                },
                "functionSelector": "08e3898e",
                "id": 529,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "fulfillRandomWordsWithOverride",
                "nameLocation": "3871:30:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 363,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 357,
                      "mutability": "mutable",
                      "name": "_requestId",
                      "nameLocation": "3910:10:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "3902:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 356,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3902:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "3930:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "3922:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3922:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 362,
                      "mutability": "mutable",
                      "name": "_words",
                      "nameLocation": "3958:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 529,
                      "src": "3941:23:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3941:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 361,
                        "nodeType": "ArrayTypeName",
                        "src": "3941:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3901:64:1"
                },
                "returnParameters": {
                  "id": 364,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "3973:0:1"
                },
                "scope": 1025,
                "src": "3862:1199:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 573,
                  "nodeType": "Block",
                  "src": "5327:278:1",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 537,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5337:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 539,
                            "indexExpression": {
                              "id": 538,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "5353:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5337:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5361:5:1",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 208,
                          "src": "5337:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5378:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 542,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5370:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 541,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5370:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5370:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5337:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 550,
                      "nodeType": "IfStatement",
                      "src": "5333:92:1",
                      "trueBody": {
                        "id": 549,
                        "nodeType": "Block",
                        "src": "5382:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 546,
                                "name": "InvalidSubscription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "5397:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5397:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 548,
                            "nodeType": "RevertStatement",
                            "src": "5390:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        552
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 552,
                          "mutability": "mutable",
                          "name": "oldBalance",
                          "nameLocation": "5437:10:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 573,
                          "src": "5430:17:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          },
                          "typeName": {
                            "id": 551,
                            "name": "uint96",
                            "nodeType": "ElementaryTypeName",
                            "src": "5430:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 557,
                      "initialValue": {
                        "expression": {
                          "baseExpression": {
                            "id": 553,
                            "name": "s_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "5450:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                              "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                            }
                          },
                          "id": 555,
                          "indexExpression": {
                            "id": 554,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "5466:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5450:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$211_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                          }
                        },
                        "id": 556,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5474:7:1",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 210,
                        "src": "5450:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5430:51:1"
                    },
                    {
                      "expression": {
                        "id": 563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "expression": {
                            "baseExpression": {
                              "id": 558,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5487:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 560,
                            "indexExpression": {
                              "id": 559,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 532,
                              "src": "5503:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5487:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "5511:7:1",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 210,
                          "src": "5487:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "id": 562,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "5522:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint96",
                            "typeString": "uint96"
                          }
                        },
                        "src": "5487:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "id": 564,
                      "nodeType": "ExpressionStatement",
                      "src": "5487:42:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 566,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 532,
                            "src": "5559:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 567,
                            "name": "oldBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 552,
                            "src": "5567:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            "id": 570,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 568,
                              "name": "oldBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 552,
                              "src": "5579:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 569,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 534,
                              "src": "5592:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "5579:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 565,
                          "name": "SubscriptionFunded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 170,
                          "src": "5540:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$",
                            "typeString": "function (uint64,uint256,uint256)"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5540:60:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 572,
                      "nodeType": "EmitStatement",
                      "src": "5535:65:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 530,
                  "nodeType": "StructuredDocumentation",
                  "src": "5065:195:1",
                  "text": " @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"
                },
                "functionSelector": "afc69b53",
                "id": 574,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "fundSubscription",
                "nameLocation": "5272:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 535,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 532,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "5296:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 574,
                      "src": "5289:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 531,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "5289:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 534,
                      "mutability": "mutable",
                      "name": "_amount",
                      "nameLocation": "5311:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 574,
                      "src": "5304:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 533,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "5304:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5288:31:1"
                },
                "returnParameters": {
                  "id": 536,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5327:0:1"
                },
                "scope": 1025,
                "src": "5263:342:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  28
                ],
                "body": {
                  "id": 645,
                  "nodeType": "Block",
                  "src": "5862:516:1",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 597,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "5872:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "id": 598,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "5888:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5872:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5896:5:1",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 208,
                          "src": "5872:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5913:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5905:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 601,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5905:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5872:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 610,
                      "nodeType": "IfStatement",
                      "src": "5868:92:1",
                      "trueBody": {
                        "id": 609,
                        "nodeType": "Block",
                        "src": "5917:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 606,
                                "name": "InvalidSubscription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "5932:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5932:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 608,
                            "nodeType": "RevertStatement",
                            "src": "5925:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "assignments": [
                        612
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 612,
                          "mutability": "mutable",
                          "name": "requestId",
                          "nameLocation": "5974:9:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 645,
                          "src": "5966:17:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 611,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5966:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 615,
                      "initialValue": {
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "5986:17:1",
                        "subExpression": {
                          "id": 613,
                          "name": "s_nextRequestId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "5986:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "5966:37:1"
                    },
                    {
                      "assignments": [
                        617
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 617,
                          "mutability": "mutable",
                          "name": "preSeed",
                          "nameLocation": "6017:7:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 645,
                          "src": "6009:15:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 616,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6009:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 620,
                      "initialValue": {
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "6027:15:1",
                        "subExpression": {
                          "id": 618,
                          "name": "s_nextPreSeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 206,
                          "src": "6027:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6009:33:1"
                    },
                    {
                      "expression": {
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 621,
                            "name": "s_requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 233,
                            "src": "6049:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Request_$228_storage_$",
                              "typeString": "mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"
                            }
                          },
                          "id": 623,
                          "indexExpression": {
                            "id": 622,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6060:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6049:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$228_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 625,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "6089:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            {
                              "id": 626,
                              "name": "_callbackGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "6115:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 627,
                              "name": "_numWords",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 584,
                              "src": "6144:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            ],
                            "id": 624,
                            "name": "Request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 228,
                            "src": "6073:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Request_$228_storage_ptr_$",
                              "typeString": "type(struct VRFCoordinatorV2Mock.Request storage pointer)"
                            }
                          },
                          "id": 628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "6082:5:1",
                            "6097:16:1",
                            "6134:8:1"
                          ],
                          "names": [
                            "subId",
                            "callbackGasLimit",
                            "numWords"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "6073:82:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Request_$228_memory_ptr",
                            "typeString": "struct VRFCoordinatorV2Mock.Request memory"
                          }
                        },
                        "src": "6049:106:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$228_storage",
                          "typeString": "struct VRFCoordinatorV2Mock.Request storage ref"
                        }
                      },
                      "id": 630,
                      "nodeType": "ExpressionStatement",
                      "src": "6049:106:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 632,
                            "name": "_keyHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "6195:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 633,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "6211:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 634,
                            "name": "preSeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 617,
                            "src": "6228:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 635,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 578,
                            "src": "6243:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 636,
                            "name": "_minimumRequestConfirmations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 580,
                            "src": "6257:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          {
                            "id": 637,
                            "name": "_callbackGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 582,
                            "src": "6293:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 638,
                            "name": "_numWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "6318:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 639,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6335:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6339:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6335:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 631,
                          "name": "RandomWordsRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 146,
                          "src": "6167:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$",
                            "typeString": "function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6167:184:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 642,
                      "nodeType": "EmitStatement",
                      "src": "6162:189:1"
                    },
                    {
                      "expression": {
                        "id": 643,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 612,
                        "src": "6364:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 596,
                      "id": 644,
                      "nodeType": "Return",
                      "src": "6357:16:1"
                    }
                  ]
                },
                "functionSelector": "5d3b1d30",
                "id": 646,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 588,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 587,
                      "name": "nonReentrant",
                      "nameLocations": [
                        "5793:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 979,
                      "src": "5793:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5793:12:1"
                  },
                  {
                    "arguments": [
                      {
                        "id": 590,
                        "name": "_subId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 578,
                        "src": "5824:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5832:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5836:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5832:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 593,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 589,
                      "name": "onlyValidConsumer",
                      "nameLocations": [
                        "5806:17:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 333,
                      "src": "5806:17:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "5806:37:1"
                  }
                ],
                "name": "requestRandomWords",
                "nameLocation": "5618:18:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 586,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "5784:8:1"
                },
                "parameters": {
                  "id": 585,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 576,
                      "mutability": "mutable",
                      "name": "_keyHash",
                      "nameLocation": "5650:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5642:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 575,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5642:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 578,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "5671:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5664:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 577,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "5664:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 580,
                      "mutability": "mutable",
                      "name": "_minimumRequestConfirmations",
                      "nameLocation": "5690:28:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5683:35:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 579,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "5683:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 582,
                      "mutability": "mutable",
                      "name": "_callbackGasLimit",
                      "nameLocation": "5731:17:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5724:24:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 581,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5724:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 584,
                      "mutability": "mutable",
                      "name": "_numWords",
                      "nameLocation": "5761:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5754:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 583,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5754:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5636:138:1"
                },
                "returnParameters": {
                  "id": 596,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 595,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 646,
                      "src": "5853:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 594,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5853:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5852:9:1"
                },
                "scope": 1025,
                "src": "5609:769:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  34
                ],
                "body": {
                  "id": 673,
                  "nodeType": "Block",
                  "src": "6454:197:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": false,
                        "src": "6460:16:1",
                        "subExpression": {
                          "id": 652,
                          "name": "s_currentSubId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "6460:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "id": 654,
                      "nodeType": "ExpressionStatement",
                      "src": "6460:16:1"
                    },
                    {
                      "expression": {
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 655,
                            "name": "s_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "6482:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                              "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                            }
                          },
                          "id": 657,
                          "indexExpression": {
                            "id": 656,
                            "name": "s_currentSubId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6498:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6482:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$211_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 659,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6537:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 660,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6541:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6537:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6558:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 658,
                            "name": "Subscription",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "6516:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Subscription_$211_storage_ptr_$",
                              "typeString": "type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"
                            }
                          },
                          "id": 662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "6530:5:1",
                            "6549:7:1"
                          ],
                          "names": [
                            "owner",
                            "balance"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "6516:45:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$211_memory_ptr",
                            "typeString": "struct VRFCoordinatorV2Mock.Subscription memory"
                          }
                        },
                        "src": "6482:79:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Subscription_$211_storage",
                          "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                        }
                      },
                      "id": 664,
                      "nodeType": "ExpressionStatement",
                      "src": "6482:79:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 666,
                            "name": "s_currentSubId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "6592:14:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 667,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6608:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6612:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6608:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 665,
                          "name": "SubscriptionCreated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 162,
                          "src": "6572:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$",
                            "typeString": "function (uint64,address)"
                          }
                        },
                        "id": 669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6572:47:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 670,
                      "nodeType": "EmitStatement",
                      "src": "6567:52:1"
                    },
                    {
                      "expression": {
                        "id": 671,
                        "name": "s_currentSubId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 200,
                        "src": "6632:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "functionReturnParameters": 651,
                      "id": 672,
                      "nodeType": "Return",
                      "src": "6625:21:1"
                    }
                  ]
                },
                "functionSelector": "a21a23e4",
                "id": 674,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "createSubscription",
                "nameLocation": "6391:18:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 648,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "6421:8:1"
                },
                "parameters": {
                  "id": 647,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6409:2:1"
                },
                "returnParameters": {
                  "id": 651,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 650,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "6446:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 674,
                      "src": "6439:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 649,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6439:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6438:15:1"
                },
                "scope": 1025,
                "src": "6382:269:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  49
                ],
                "body": {
                  "id": 717,
                  "nodeType": "Block",
                  "src": "6811:203:1",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 689,
                              "name": "s_subscriptions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 216,
                              "src": "6821:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                              }
                            },
                            "id": 691,
                            "indexExpression": {
                              "id": 690,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "6837:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6821:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Subscription_$211_storage",
                              "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6845:5:1",
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 208,
                          "src": "6821:29:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 695,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6862:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6854:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6854:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6854:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6821:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 702,
                      "nodeType": "IfStatement",
                      "src": "6817:92:1",
                      "trueBody": {
                        "id": 701,
                        "nodeType": "Block",
                        "src": "6866:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 698,
                                "name": "InvalidSubscription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "6881:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6881:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 700,
                            "nodeType": "RevertStatement",
                            "src": "6874:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "components": [
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 703,
                                "name": "s_subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "6922:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                  "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                                }
                              },
                              "id": 705,
                              "indexExpression": {
                                "id": 704,
                                "name": "_subId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 676,
                                "src": "6938:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6922:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$211_storage",
                                "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                              }
                            },
                            "id": 706,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6946:7:1",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 210,
                            "src": "6922:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 707,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6955:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 708,
                                "name": "s_subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "6958:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                  "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                                }
                              },
                              "id": 710,
                              "indexExpression": {
                                "id": 709,
                                "name": "_subId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 676,
                                "src": "6974:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6958:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$211_storage",
                                "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                              }
                            },
                            "id": 711,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6982:5:1",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 208,
                            "src": "6958:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "baseExpression": {
                              "id": 712,
                              "name": "s_consumers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "6989:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint64 => address[] storage ref)"
                              }
                            },
                            "id": 714,
                            "indexExpression": {
                              "id": 713,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 676,
                              "src": "7001:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6989:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          }
                        ],
                        "id": 715,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6921:88:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_storage_$",
                          "typeString": "tuple(uint96,int_const 0,address,address[] storage ref)"
                        }
                      },
                      "functionReturnParameters": 688,
                      "id": 716,
                      "nodeType": "Return",
                      "src": "6914:95:1"
                    }
                  ]
                },
                "functionSelector": "a47c7696",
                "id": 718,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getSubscription",
                "nameLocation": "6664:15:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 678,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "6717:8:1"
                },
                "parameters": {
                  "id": 677,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 676,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "6692:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "6685:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 675,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6685:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6679:23:1"
                },
                "returnParameters": {
                  "id": 688,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 680,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6742:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "6735:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 679,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "6735:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 682,
                      "mutability": "mutable",
                      "name": "reqCount",
                      "nameLocation": "6758:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "6751:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 681,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "6751:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 684,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "6776:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "6768:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 683,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6768:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 687,
                      "mutability": "mutable",
                      "name": "consumers",
                      "nameLocation": "6800:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 718,
                      "src": "6783:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6783:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 686,
                        "nodeType": "ArrayTypeName",
                        "src": "6783:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6734:76:1"
                },
                "scope": 1025,
                "src": "6655:359:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  87
                ],
                "body": {
                  "id": 746,
                  "nodeType": "Block",
                  "src": "7126:120:1",
                  "statements": [
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 732,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 720,
                            "src": "7158:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 733,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 722,
                            "src": "7166:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "baseExpression": {
                                "id": 734,
                                "name": "s_subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "7171:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                  "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                                }
                              },
                              "id": 736,
                              "indexExpression": {
                                "id": 735,
                                "name": "_subId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "7187:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7171:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$211_storage",
                                "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "7195:7:1",
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 210,
                            "src": "7171:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 731,
                          "name": "SubscriptionCanceled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 178,
                          "src": "7137:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (uint64,address,uint256)"
                          }
                        },
                        "id": 738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7137:66:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 739,
                      "nodeType": "EmitStatement",
                      "src": "7132:71:1"
                    },
                    {
                      "expression": {
                        "id": 744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "delete",
                        "prefix": true,
                        "src": "7209:32:1",
                        "subExpression": {
                          "components": [
                            {
                              "baseExpression": {
                                "id": 740,
                                "name": "s_subscriptions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "7217:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                                  "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                                }
                              },
                              "id": 742,
                              "indexExpression": {
                                "id": 741,
                                "name": "_subId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 720,
                                "src": "7233:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "7217:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Subscription_$211_storage",
                                "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                              }
                            }
                          ],
                          "id": 743,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "TupleExpression",
                          "src": "7216:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$211_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 745,
                      "nodeType": "ExpressionStatement",
                      "src": "7209:32:1"
                    }
                  ]
                },
                "functionSelector": "d7ae1d30",
                "id": 747,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 726,
                        "name": "_subId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 720,
                        "src": "7105:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "id": 727,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 725,
                      "name": "onlySubOwner",
                      "nameLocations": [
                        "7092:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 781,
                      "src": "7092:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7092:20:1"
                  },
                  {
                    "id": 729,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 728,
                      "name": "nonReentrant",
                      "nameLocations": [
                        "7113:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 979,
                      "src": "7113:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7113:12:1"
                  }
                ],
                "name": "cancelSubscription",
                "nameLocation": "7027:18:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 724,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7083:8:1"
                },
                "parameters": {
                  "id": 723,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 720,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "7053:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "7046:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 719,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "7046:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 722,
                      "mutability": "mutable",
                      "name": "_to",
                      "nameLocation": "7069:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 747,
                      "src": "7061:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 721,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7061:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7045:28:1"
                },
                "returnParameters": {
                  "id": 730,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7126:0:1"
                },
                "scope": 1025,
                "src": "7018:228:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 780,
                  "nodeType": "Block",
                  "src": "7287:209:1",
                  "statements": [
                    {
                      "assignments": [
                        752
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 752,
                          "mutability": "mutable",
                          "name": "owner",
                          "nameLocation": "7301:5:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 780,
                          "src": "7293:13:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 751,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7293:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 757,
                      "initialValue": {
                        "expression": {
                          "baseExpression": {
                            "id": 753,
                            "name": "s_subscriptions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "7309:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint64_$_t_struct$_Subscription_$211_storage_$",
                              "typeString": "mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"
                            }
                          },
                          "id": 755,
                          "indexExpression": {
                            "id": 754,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "7325:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7309:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Subscription_$211_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Subscription storage ref"
                          }
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7333:5:1",
                        "memberName": "owner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 208,
                        "src": "7309:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "7293:45:1"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 758,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "7348:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 761,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7365:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 760,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7357:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 759,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7357:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7357:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7348:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 768,
                      "nodeType": "IfStatement",
                      "src": "7344:68:1",
                      "trueBody": {
                        "id": 767,
                        "nodeType": "Block",
                        "src": "7369:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 764,
                                "name": "InvalidSubscription",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 114,
                                "src": "7384:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 765,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7384:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 766,
                            "nodeType": "RevertStatement",
                            "src": "7377:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 769,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7421:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7425:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7421:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 771,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "7435:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7421:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 778,
                      "nodeType": "IfStatement",
                      "src": "7417:68:1",
                      "trueBody": {
                        "id": 777,
                        "nodeType": "Block",
                        "src": "7442:43:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "id": 774,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 752,
                                  "src": "7472:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 773,
                                "name": "MustBeSubOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 120,
                                "src": "7457:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                  "typeString": "function (address) pure"
                                }
                              },
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7457:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 776,
                            "nodeType": "RevertStatement",
                            "src": "7450:28:1"
                          }
                        ]
                      }
                    },
                    {
                      "id": 779,
                      "nodeType": "PlaceholderStatement",
                      "src": "7490:1:1"
                    }
                  ]
                },
                "id": 781,
                "name": "onlySubOwner",
                "nameLocation": "7259:12:1",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 750,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "7279:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 781,
                      "src": "7272:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "7272:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7271:15:1"
                },
                "src": "7250:246:1",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  12
                ],
                "body": {
                  "id": 801,
                  "nodeType": "Block",
                  "src": "7594:48:1",
                  "statements": [
                    {
                      "expression": {
                        "components": [
                          {
                            "hexValue": "33",
                            "id": 792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7608:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          },
                          {
                            "hexValue": "32303030303030",
                            "id": 793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7611:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2000000_by_1",
                              "typeString": "int_const 2000000"
                            },
                            "value": "2000000"
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7634:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 796,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "7620:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                                "typeString": "function (uint256) pure returns (bytes32[] memory)"
                              },
                              "typeName": {
                                "baseType": {
                                  "id": 794,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7624:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "id": 795,
                                "nodeType": "ArrayTypeName",
                                "src": "7624:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                  "typeString": "bytes32[]"
                                }
                              }
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7620:16:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                              "typeString": "bytes32[] memory"
                            }
                          }
                        ],
                        "id": 799,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7607:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                          "typeString": "tuple(int_const 3,int_const 2000000,bytes32[] memory)"
                        }
                      },
                      "functionReturnParameters": 791,
                      "id": 800,
                      "nodeType": "Return",
                      "src": "7600:37:1"
                    }
                  ]
                },
                "functionSelector": "00012291",
                "id": 802,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getRequestConfig",
                "nameLocation": "7509:16:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 783,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7542:8:1"
                },
                "parameters": {
                  "id": 782,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7525:2:1"
                },
                "returnParameters": {
                  "id": 791,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 785,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 802,
                      "src": "7560:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 784,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "7560:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 787,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 802,
                      "src": "7568:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 786,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7568:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 790,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 802,
                      "src": "7576:16:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                        "typeString": "bytes32[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 788,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7576:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 789,
                        "nodeType": "ArrayTypeName",
                        "src": "7576:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                          "typeString": "bytes32[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7559:34:1"
                },
                "scope": 1025,
                "src": "7500:142:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  71
                ],
                "body": {
                  "id": 843,
                  "nodeType": "Block",
                  "src": "7740:251:1",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 813,
                              "name": "s_consumers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "7750:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint64 => address[] storage ref)"
                              }
                            },
                            "id": 815,
                            "indexExpression": {
                              "id": 814,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "7762:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7750:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7770:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "7750:26:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 817,
                          "name": "MAX_CONSUMERS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "7780:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "src": "7750:43:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 823,
                      "nodeType": "IfStatement",
                      "src": "7746:89:1",
                      "trueBody": {
                        "id": 822,
                        "nodeType": "Block",
                        "src": "7795:40:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 819,
                                "name": "TooManyConsumers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 122,
                                "src": "7810:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7810:18:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 821,
                            "nodeType": "RevertStatement",
                            "src": "7803:25:1"
                          }
                        ]
                      }
                    },
                    {
                      "condition": {
                        "arguments": [
                          {
                            "id": 825,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "7861:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 826,
                            "name": "_consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "7869:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 824,
                          "name": "consumerIsAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 315,
                          "src": "7845:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (uint64,address) view returns (bool)"
                          }
                        },
                        "id": 827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7845:34:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 830,
                      "nodeType": "IfStatement",
                      "src": "7841:61:1",
                      "trueBody": {
                        "id": 829,
                        "nodeType": "Block",
                        "src": "7881:21:1",
                        "statements": [
                          {
                            "functionReturnParameters": 812,
                            "id": 828,
                            "nodeType": "Return",
                            "src": "7889:7:1"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 835,
                            "name": "_consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "7933:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "baseExpression": {
                              "id": 831,
                              "name": "s_consumers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "7908:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                                "typeString": "mapping(uint64 => address[] storage ref)"
                              }
                            },
                            "id": 833,
                            "indexExpression": {
                              "id": 832,
                              "name": "_subId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 804,
                              "src": "7920:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7908:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7928:4:1",
                          "memberName": "push",
                          "nodeType": "MemberAccess",
                          "src": "7908:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                            "typeString": "function (address[] storage pointer,address)"
                          }
                        },
                        "id": 836,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7908:35:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 837,
                      "nodeType": "ExpressionStatement",
                      "src": "7908:35:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 839,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "7968:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 840,
                            "name": "_consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "7976:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 838,
                          "name": "ConsumerAdded",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "7954:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$",
                            "typeString": "function (uint64,address)"
                          }
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7954:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 842,
                      "nodeType": "EmitStatement",
                      "src": "7949:37:1"
                    }
                  ]
                },
                "functionSelector": "7341c10c",
                "id": 844,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 810,
                        "name": "_subId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 804,
                        "src": "7732:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "id": 811,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 809,
                      "name": "onlySubOwner",
                      "nameLocations": [
                        "7719:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 781,
                      "src": "7719:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "7719:20:1"
                  }
                ],
                "name": "addConsumer",
                "nameLocation": "7655:11:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 808,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "7710:8:1"
                },
                "parameters": {
                  "id": 807,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 804,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "7674:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "7667:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 803,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "7667:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "7690:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 844,
                      "src": "7682:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7682:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7666:34:1"
                },
                "returnParameters": {
                  "id": 812,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7740:0:1"
                },
                "scope": 1025,
                "src": "7646:345:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  79
                ],
                "body": {
                  "id": 916,
                  "nodeType": "Block",
                  "src": "8154:337:1",
                  "statements": [
                    {
                      "assignments": [
                        865
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 865,
                          "mutability": "mutable",
                          "name": "consumers",
                          "nameLocation": "8178:9:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 916,
                          "src": "8160:27:1",
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 863,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8160:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 864,
                            "nodeType": "ArrayTypeName",
                            "src": "8160:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 869,
                      "initialValue": {
                        "baseExpression": {
                          "id": 866,
                          "name": "s_consumers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "8190:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(uint64 => address[] storage ref)"
                          }
                        },
                        "id": 868,
                        "indexExpression": {
                          "id": 867,
                          "name": "_subId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "8202:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8190:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8160:49:1"
                    },
                    {
                      "body": {
                        "id": 909,
                        "nodeType": "Block",
                        "src": "8262:179:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 881,
                                  "name": "consumers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 865,
                                  "src": "8274:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                    "typeString": "address[] storage pointer"
                                  }
                                },
                                "id": 883,
                                "indexExpression": {
                                  "id": 882,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 871,
                                  "src": "8284:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8274:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 884,
                                "name": "_consumer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 848,
                                "src": "8290:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8274:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 908,
                            "nodeType": "IfStatement",
                            "src": "8270:165:1",
                            "trueBody": {
                              "id": 907,
                              "nodeType": "Block",
                              "src": "8301:134:1",
                              "statements": [
                                {
                                  "assignments": [
                                    887
                                  ],
                                  "declarations": [
                                    {
                                      "constant": false,
                                      "id": 887,
                                      "mutability": "mutable",
                                      "name": "last",
                                      "nameLocation": "8319:4:1",
                                      "nodeType": "VariableDeclaration",
                                      "scope": 907,
                                      "src": "8311:12:1",
                                      "stateVariable": false,
                                      "storageLocation": "default",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      "typeName": {
                                        "id": 886,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8311:7:1",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "visibility": "internal"
                                    }
                                  ],
                                  "id": 894,
                                  "initialValue": {
                                    "baseExpression": {
                                      "id": 888,
                                      "name": "consumers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 865,
                                      "src": "8326:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                        "typeString": "address[] storage pointer"
                                      }
                                    },
                                    "id": 893,
                                    "indexExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 892,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 889,
                                          "name": "consumers",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 865,
                                          "src": "8336:9:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                            "typeString": "address[] storage pointer"
                                          }
                                        },
                                        "id": 890,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "8346:6:1",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "8336:16:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "hexValue": "31",
                                        "id": 891,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8355:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "src": "8336:20:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8326:31:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "nodeType": "VariableDeclarationStatement",
                                  "src": "8311:46:1"
                                },
                                {
                                  "expression": {
                                    "id": 899,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 895,
                                        "name": "consumers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 865,
                                        "src": "8367:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                          "typeString": "address[] storage pointer"
                                        }
                                      },
                                      "id": 897,
                                      "indexExpression": {
                                        "id": 896,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 871,
                                        "src": "8377:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "8367:12:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 898,
                                      "name": "last",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 887,
                                      "src": "8382:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "8367:19:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 900,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8367:19:1"
                                },
                                {
                                  "expression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 901,
                                        "name": "consumers",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 865,
                                        "src": "8396:9:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                                          "typeString": "address[] storage pointer"
                                        }
                                      },
                                      "id": 903,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "8406:3:1",
                                      "memberName": "pop",
                                      "nodeType": "MemberAccess",
                                      "src": "8396:13:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                        "typeString": "function (address[] storage pointer)"
                                      }
                                    },
                                    "id": 904,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8396:15:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 905,
                                  "nodeType": "ExpressionStatement",
                                  "src": "8396:15:1"
                                },
                                {
                                  "id": 906,
                                  "nodeType": "Break",
                                  "src": "8421:5:1"
                                }
                              ]
                            }
                          }
                        ]
                      },
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 874,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 871,
                          "src": "8235:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 875,
                            "name": "consumers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 865,
                            "src": "8239:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[] storage pointer"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8249:6:1",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "8239:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8235:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 910,
                      "initializationExpression": {
                        "assignments": [
                          871
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 871,
                            "mutability": "mutable",
                            "name": "i",
                            "nameLocation": "8228:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 910,
                            "src": "8220:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 870,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8220:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 873,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 872,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8232:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8220:13:1"
                      },
                      "isSimpleCounterLoop": true,
                      "loopExpression": {
                        "expression": {
                          "id": 879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8257:3:1",
                          "subExpression": {
                            "id": 878,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 871,
                            "src": "8257:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 880,
                        "nodeType": "ExpressionStatement",
                        "src": "8257:3:1"
                      },
                      "nodeType": "ForStatement",
                      "src": "8215:226:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 912,
                            "name": "_subId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 846,
                            "src": "8468:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "id": 913,
                            "name": "_consumer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 848,
                            "src": "8476:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 911,
                          "name": "ConsumerRemoved",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "8452:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$",
                            "typeString": "function (uint64,address)"
                          }
                        },
                        "id": 914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8452:34:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 915,
                      "nodeType": "EmitStatement",
                      "src": "8447:39:1"
                    }
                  ]
                },
                "functionSelector": "9f87fad7",
                "id": 917,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 852,
                        "name": "_subId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "8096:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "id": 853,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 851,
                      "name": "onlySubOwner",
                      "nameLocations": [
                        "8083:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 781,
                      "src": "8083:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8083:20:1"
                  },
                  {
                    "arguments": [
                      {
                        "id": 855,
                        "name": "_subId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "8122:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 856,
                        "name": "_consumer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 848,
                        "src": "8130:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 857,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 854,
                      "name": "onlyValidConsumer",
                      "nameLocations": [
                        "8104:17:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 333,
                      "src": "8104:17:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8104:36:1"
                  },
                  {
                    "id": 859,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 858,
                      "name": "nonReentrant",
                      "nameLocations": [
                        "8141:12:1"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 979,
                      "src": "8141:12:1"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "8141:12:1"
                  }
                ],
                "name": "removeConsumer",
                "nameLocation": "8004:14:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 850,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "8074:8:1"
                },
                "parameters": {
                  "id": 849,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 846,
                      "mutability": "mutable",
                      "name": "_subId",
                      "nameLocation": "8031:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "8024:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 845,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "8024:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 848,
                      "mutability": "mutable",
                      "name": "_consumer",
                      "nameLocation": "8051:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 917,
                      "src": "8043:17:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 847,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8043:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8018:46:1"
                },
                "returnParameters": {
                  "id": 860,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8154:0:1"
                },
                "scope": 1025,
                "src": "7995:496:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 934,
                  "nodeType": "Block",
                  "src": "8699:46:1",
                  "statements": [
                    {
                      "expression": {
                        "components": [
                          {
                            "hexValue": "34",
                            "id": 928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8713:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          },
                          {
                            "hexValue": "325f3530305f303030",
                            "id": 929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8716:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2500000_by_1",
                              "typeString": "int_const 2500000"
                            },
                            "value": "2_500_000"
                          },
                          {
                            "hexValue": "325f373030",
                            "id": 930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8727:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2700_by_1",
                              "typeString": "int_const 2700"
                            },
                            "value": "2_700"
                          },
                          {
                            "hexValue": "3333323835",
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8734:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_33285_by_1",
                              "typeString": "int_const 33285"
                            },
                            "value": "33285"
                          }
                        ],
                        "id": 932,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "8712:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_rational_4_by_1_$_t_rational_2500000_by_1_$_t_rational_2700_by_1_$_t_rational_33285_by_1_$",
                          "typeString": "tuple(int_const 4,int_const 2500000,int_const 2700,int_const 33285)"
                        }
                      },
                      "functionReturnParameters": 927,
                      "id": 933,
                      "nodeType": "Return",
                      "src": "8705:35:1"
                    }
                  ]
                },
                "functionSelector": "c3f909d4",
                "id": 935,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getConfig",
                "nameLocation": "8504:9:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 918,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8513:2:1"
                },
                "returnParameters": {
                  "id": 927,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 920,
                      "mutability": "mutable",
                      "name": "minimumRequestConfirmations",
                      "nameLocation": "8565:27:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "8558:34:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 919,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "8558:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 922,
                      "mutability": "mutable",
                      "name": "maxGasLimit",
                      "nameLocation": "8607:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "8600:18:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 921,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8600:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 924,
                      "mutability": "mutable",
                      "name": "stalenessSeconds",
                      "nameLocation": "8633:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "8626:23:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 923,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8626:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 926,
                      "mutability": "mutable",
                      "name": "gasAfterPaymentCalculation",
                      "nameLocation": "8664:26:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 935,
                      "src": "8657:33:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 925,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8657:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8550:146:1"
                },
                "scope": 1025,
                "src": "8495:250:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 967,
                  "nodeType": "Block",
                  "src": "9149:190:1",
                  "statements": [
                    {
                      "expression": {
                        "components": [
                          {
                            "hexValue": "313030303030",
                            "id": 956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9170:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9196:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9222:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9248:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "hexValue": "313030303030",
                            "id": 960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9274:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          {
                            "hexValue": "30",
                            "id": 961,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9300:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9309:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9318:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          {
                            "hexValue": "30",
                            "id": 964,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9327:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "id": 965,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "9162:172:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                          "typeString": "tuple(int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 0,int_const 0,int_const 0,int_const 0)"
                        }
                      },
                      "functionReturnParameters": 955,
                      "id": 966,
                      "nodeType": "Return",
                      "src": "9155:179:1"
                    }
                  ]
                },
                "functionSelector": "5fbbc0d2",
                "id": 968,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getFeeConfig",
                "nameLocation": "8758:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 936,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8770:2:1"
                },
                "returnParameters": {
                  "id": 955,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 938,
                      "mutability": "mutable",
                      "name": "fulfillmentFlatFeeLinkPPMTier1",
                      "nameLocation": "8822:30:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "8815:37:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 937,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8815:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 940,
                      "mutability": "mutable",
                      "name": "fulfillmentFlatFeeLinkPPMTier2",
                      "nameLocation": "8867:30:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "8860:37:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 939,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8860:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 942,
                      "mutability": "mutable",
                      "name": "fulfillmentFlatFeeLinkPPMTier3",
                      "nameLocation": "8912:30:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "8905:37:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 941,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8905:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 944,
                      "mutability": "mutable",
                      "name": "fulfillmentFlatFeeLinkPPMTier4",
                      "nameLocation": "8957:30:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "8950:37:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 943,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8950:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 946,
                      "mutability": "mutable",
                      "name": "fulfillmentFlatFeeLinkPPMTier5",
                      "nameLocation": "9002:30:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "8995:37:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 945,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8995:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 948,
                      "mutability": "mutable",
                      "name": "reqsForTier2",
                      "nameLocation": "9047:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "9040:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 947,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9040:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 950,
                      "mutability": "mutable",
                      "name": "reqsForTier3",
                      "nameLocation": "9074:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "9067:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 949,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9067:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 952,
                      "mutability": "mutable",
                      "name": "reqsForTier4",
                      "nameLocation": "9101:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "9094:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 951,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9094:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 954,
                      "mutability": "mutable",
                      "name": "reqsForTier5",
                      "nameLocation": "9128:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 968,
                      "src": "9121:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 953,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "9121:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8807:339:1"
                },
                "scope": 1025,
                "src": "8749:590:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "body": {
                  "id": 978,
                  "nodeType": "Block",
                  "src": "9367:79:1",
                  "statements": [
                    {
                      "condition": {
                        "expression": {
                          "id": 970,
                          "name": "s_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "9377:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Config_$195_storage",
                            "typeString": "struct VRFCoordinatorV2Mock.Config storage ref"
                          }
                        },
                        "id": 971,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9386:14:1",
                        "memberName": "reentrancyLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 194,
                        "src": "9377:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 976,
                      "nodeType": "IfStatement",
                      "src": "9373:62:1",
                      "trueBody": {
                        "id": 975,
                        "nodeType": "Block",
                        "src": "9402:33:1",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 972,
                                "name": "Reentrant",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 128,
                                "src": "9417:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9417:11:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 974,
                            "nodeType": "RevertStatement",
                            "src": "9410:18:1"
                          }
                        ]
                      }
                    },
                    {
                      "id": 977,
                      "nodeType": "PlaceholderStatement",
                      "src": "9440:1:1"
                    }
                  ]
                },
                "id": 979,
                "name": "nonReentrant",
                "nameLocation": "9352:12:1",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 969,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9364:2:1"
                },
                "src": "9343:103:1",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 986,
                  "nodeType": "Block",
                  "src": "9518:49:1",
                  "statements": [
                    {
                      "expression": {
                        "hexValue": "34303030303030303030303030303030",
                        "id": 984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9531:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4000000000000000_by_1",
                          "typeString": "int_const 4000000000000000"
                        },
                        "value": "4000000000000000"
                      },
                      "functionReturnParameters": 983,
                      "id": 985,
                      "nodeType": "Return",
                      "src": "9524:23:1"
                    }
                  ]
                },
                "functionSelector": "356dac71",
                "id": 987,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "getFallbackWeiPerUnitLink",
                "nameLocation": "9459:25:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 980,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9484:2:1"
                },
                "returnParameters": {
                  "id": 983,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 982,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 987,
                      "src": "9510:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 981,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9510:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9509:8:1"
                },
                "scope": 1025,
                "src": "9450:117:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  57
                ],
                "body": {
                  "id": 999,
                  "nodeType": "Block",
                  "src": "9678:36:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6e6f7420696d706c656d656e746564",
                            "id": 996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9691:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            },
                            "value": "not implemented"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            }
                          ],
                          "id": 995,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -19,
                            -19
                          ],
                          "referencedDeclaration": -19,
                          "src": "9684:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9684:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 998,
                      "nodeType": "ExpressionStatement",
                      "src": "9684:25:1"
                    }
                  ]
                },
                "functionSelector": "04c357cb",
                "id": 1000,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "requestSubscriptionOwnerTransfer",
                "nameLocation": "9580:32:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 993,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "9669:8:1"
                },
                "parameters": {
                  "id": 992,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 989,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "9613:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 988,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "9613:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 991,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1000,
                      "src": "9632:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 990,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9632:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9612:42:1"
                },
                "returnParameters": {
                  "id": 994,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9678:0:1"
                },
                "scope": 1025,
                "src": "9571:143:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  63
                ],
                "body": {
                  "id": 1010,
                  "nodeType": "Block",
                  "src": "9801:36:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6e6f7420696d706c656d656e746564",
                            "id": 1007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9814:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            },
                            "value": "not implemented"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            }
                          ],
                          "id": 1006,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -19,
                            -19
                          ],
                          "referencedDeclaration": -19,
                          "src": "9807:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9807:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1009,
                      "nodeType": "ExpressionStatement",
                      "src": "9807:25:1"
                    }
                  ]
                },
                "functionSelector": "82359740",
                "id": 1011,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "acceptSubscriptionOwnerTransfer",
                "nameLocation": "9727:31:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1004,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "9792:8:1"
                },
                "parameters": {
                  "id": 1003,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1002,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1011,
                      "src": "9759:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1001,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "9759:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9758:19:1"
                },
                "returnParameters": {
                  "id": 1005,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "9801:0:1"
                },
                "scope": 1025,
                "src": "9718:119:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  94
                ],
                "body": {
                  "id": 1023,
                  "nodeType": "Block",
                  "src": "9925:36:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "6e6f7420696d706c656d656e746564",
                            "id": 1020,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9938:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            },
                            "value": "not implemented"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9",
                              "typeString": "literal_string \"not implemented\""
                            }
                          ],
                          "id": 1019,
                          "name": "revert",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -19,
                            -19
                          ],
                          "referencedDeclaration": -19,
                          "src": "9931:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (string memory) pure"
                          }
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9931:25:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1022,
                      "nodeType": "ExpressionStatement",
                      "src": "9931:25:1"
                    }
                  ]
                },
                "functionSelector": "e82ad7d4",
                "id": 1024,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "pendingRequestExists",
                "nameLocation": "9850:20:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1015,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "9901:8:1"
                },
                "parameters": {
                  "id": 1014,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1013,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1024,
                      "src": "9871:6:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1012,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "9871:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9870:18:1"
                },
                "returnParameters": {
                  "id": 1018,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1017,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1024,
                      "src": "9919:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1016,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "9919:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "9918:6:1"
                },
                "scope": 1025,
                "src": "9841:120:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1026,
            "src": "311:9652:1",
            "usedErrors": [
              114,
              116,
              120,
              122,
              124,
              126,
              128
            ],
            "usedEvents": [
              146,
              156,
              162,
              170,
              178,
              184,
              190,
              192,
              1063,
              1069
            ]
          }
        ],
        "src": "92:9872:1"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
      "id": 2,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        "exportedSymbols": {
          "ConfirmedOwner": [
            1046
          ],
          "ConfirmedOwnerWithProposal": [
            1209
          ]
        },
        "id": 1047,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1027,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:2"
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
            "file": "./ConfirmedOwnerWithProposal.sol",
            "id": 1029,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1047,
            "sourceUnit": 1210,
            "src": "57:76:2",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1028,
                  "name": "ConfirmedOwnerWithProposal",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1209,
                  "src": "65:26:2",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1031,
                  "name": "ConfirmedOwnerWithProposal",
                  "nameLocations": [
                    "267:26:2"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1209,
                  "src": "267:26:2"
                },
                "id": 1032,
                "nodeType": "InheritanceSpecifier",
                "src": "267:26:2"
              }
            ],
            "canonicalName": "ConfirmedOwner",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1030,
              "nodeType": "StructuredDocumentation",
              "src": "135:105:2",
              "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
            },
            "fullyImplemented": true,
            "id": 1046,
            "linearizedBaseContracts": [
              1046,
              1209,
              1225
            ],
            "name": "ConfirmedOwner",
            "nameLocation": "249:14:2",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "body": {
                  "id": 1044,
                  "nodeType": "Block",
                  "src": "377:2:2",
                  "statements": []
                },
                "id": 1045,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [
                  {
                    "arguments": [
                      {
                        "id": 1037,
                        "name": "newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1034,
                        "src": "355:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 1040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "373:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 1039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "365:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1038,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "365:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "365:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 1042,
                    "kind": "baseConstructorSpecifier",
                    "modifierName": {
                      "id": 1036,
                      "name": "ConfirmedOwnerWithProposal",
                      "nameLocations": [
                        "328:26:2"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1209,
                      "src": "328:26:2"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "328:48:2"
                  }
                ],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1035,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1034,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "318:8:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 1045,
                      "src": "310:16:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1033,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "310:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "309:18:2"
                },
                "returnParameters": {
                  "id": 1043,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "377:0:2"
                },
                "scope": 1046,
                "src": "298:81:2",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              }
            ],
            "scope": 1047,
            "src": "240:141:2",
            "usedErrors": [],
            "usedEvents": [
              1063,
              1069
            ]
          }
        ],
        "src": "32:350:2"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
      "id": 3,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
        "exportedSymbols": {
          "ConfirmedOwnerWithProposal": [
            1209
          ],
          "IOwnable": [
            1225
          ]
        },
        "id": 1210,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1048,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:3"
          },
          {
            "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
            "file": "../interfaces/IOwnable.sol",
            "id": 1050,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 1210,
            "sourceUnit": 1226,
            "src": "57:52:3",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 1049,
                  "name": "IOwnable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1225,
                  "src": "65:8:3",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 1052,
                  "name": "IOwnable",
                  "nameLocations": [
                    "255:8:3"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1225,
                  "src": "255:8:3"
                },
                "id": 1053,
                "nodeType": "InheritanceSpecifier",
                "src": "255:8:3"
              }
            ],
            "canonicalName": "ConfirmedOwnerWithProposal",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1051,
              "nodeType": "StructuredDocumentation",
              "src": "111:105:3",
              "text": "@title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
            },
            "fullyImplemented": true,
            "id": 1209,
            "linearizedBaseContracts": [
              1209,
              1225
            ],
            "name": "ConfirmedOwnerWithProposal",
            "nameLocation": "225:26:3",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 1055,
                "mutability": "mutable",
                "name": "s_owner",
                "nameLocation": "284:7:3",
                "nodeType": "VariableDeclaration",
                "scope": 1209,
                "src": "268:23:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1054,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "constant": false,
                "id": 1057,
                "mutability": "mutable",
                "name": "s_pendingOwner",
                "nameLocation": "311:14:3",
                "nodeType": "VariableDeclaration",
                "scope": 1209,
                "src": "295:30:3",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1056,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "295:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "anonymous": false,
                "eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
                "id": 1063,
                "name": "OwnershipTransferRequested",
                "nameLocation": "336:26:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1062,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1059,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "379:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "363:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1058,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "363:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1061,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "401:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "385:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1060,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "385:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "362:42:3"
                },
                "src": "330:75:3"
              },
              {
                "anonymous": false,
                "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                "id": 1069,
                "name": "OwnershipTransferred",
                "nameLocation": "414:20:3",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 1068,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1065,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "451:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1069,
                      "src": "435:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "435:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1067,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "473:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1069,
                      "src": "457:18:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1066,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "457:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "434:42:3"
                },
                "src": "408:69:3"
              },
              {
                "body": {
                  "id": 1102,
                  "nodeType": "Block",
                  "src": "533:230:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1077,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1071,
                              "src": "598:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1080,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "618:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1079,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "610:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1078,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "610:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1081,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "610:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "598:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
                            "id": 1083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "622:26:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                              "typeString": "literal_string \"Cannot set owner to zero\""
                            },
                            "value": "Cannot set owner to zero"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
                              "typeString": "literal_string \"Cannot set owner to zero\""
                            }
                          ],
                          "id": 1076,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "590:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:59:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1085,
                      "nodeType": "ExpressionStatement",
                      "src": "590:59:3"
                    },
                    {
                      "expression": {
                        "id": 1088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1086,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "656:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1087,
                          "name": "newOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1071,
                          "src": "666:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "656:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1089,
                      "nodeType": "ExpressionStatement",
                      "src": "656:18:3"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1090,
                          "name": "pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1073,
                          "src": "684:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "708:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "700:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "700:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1094,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "700:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "684:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1101,
                      "nodeType": "IfStatement",
                      "src": "680:79:3",
                      "trueBody": {
                        "id": 1100,
                        "nodeType": "Block",
                        "src": "712:47:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1097,
                                  "name": "pendingOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1073,
                                  "src": "739:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1096,
                                "name": "_transferOwnership",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1187,
                                "src": "720:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                                  "typeString": "function (address)"
                                }
                              },
                              "id": 1098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "720:32:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1099,
                            "nodeType": "ExpressionStatement",
                            "src": "720:32:3"
                          }
                        ]
                      }
                    }
                  ]
                },
                "id": 1103,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1074,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1071,
                      "mutability": "mutable",
                      "name": "newOwner",
                      "nameLocation": "501:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "493:16:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1070,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "493:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1073,
                      "mutability": "mutable",
                      "name": "pendingOwner",
                      "nameLocation": "519:12:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1103,
                      "src": "511:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1072,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "511:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "492:40:3"
                },
                "returnParameters": {
                  "id": 1075,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "533:0:3"
                },
                "scope": 1209,
                "src": "481:282:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1221
                ],
                "body": {
                  "id": 1116,
                  "nodeType": "Block",
                  "src": "912:33:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1113,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "937:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1112,
                          "name": "_transferOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "918:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                            "typeString": "function (address)"
                          }
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "918:22:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1115,
                      "nodeType": "ExpressionStatement",
                      "src": "918:22:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1104,
                  "nodeType": "StructuredDocumentation",
                  "src": "767:77:3",
                  "text": "@notice Allows an owner to begin transferring ownership to a new address."
                },
                "functionSelector": "f2fde38b",
                "id": 1117,
                "implemented": true,
                "kind": "function",
                "modifiers": [
                  {
                    "id": 1110,
                    "kind": "modifierInvocation",
                    "modifierName": {
                      "id": 1109,
                      "name": "onlyOwner",
                      "nameLocations": [
                        "902:9:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1208,
                      "src": "902:9:3"
                    },
                    "nodeType": "ModifierInvocation",
                    "src": "902:9:3"
                  }
                ],
                "name": "transferOwnership",
                "nameLocation": "856:17:3",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1108,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "893:8:3"
                },
                "parameters": {
                  "id": 1107,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1106,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "882:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1117,
                      "src": "874:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1105,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "874:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "873:12:3"
                },
                "returnParameters": {
                  "id": 1111,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "912:0:3"
                },
                "scope": 1209,
                "src": "847:98:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  1224
                ],
                "body": {
                  "id": 1152,
                  "nodeType": "Block",
                  "src": "1071:271:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1126,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1123,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1136:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1124,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1140:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1136:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1125,
                              "name": "s_pendingOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "1150:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1136:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4d7573742062652070726f706f736564206f776e6572",
                            "id": 1127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1166:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                              "typeString": "literal_string \"Must be proposed owner\""
                            },
                            "value": "Must be proposed owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
                              "typeString": "literal_string \"Must be proposed owner\""
                            }
                          ],
                          "id": 1122,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1128:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1128:63:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1129,
                      "nodeType": "ExpressionStatement",
                      "src": "1128:63:3"
                    },
                    {
                      "assignments": [
                        1131
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 1131,
                          "mutability": "mutable",
                          "name": "oldOwner",
                          "nameLocation": "1206:8:3",
                          "nodeType": "VariableDeclaration",
                          "scope": 1152,
                          "src": "1198:16:3",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 1130,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1198:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 1133,
                      "initialValue": {
                        "id": 1132,
                        "name": "s_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "1217:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "1198:26:3"
                    },
                    {
                      "expression": {
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1134,
                          "name": "s_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1055,
                          "src": "1230:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "expression": {
                            "id": 1135,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1240:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1244:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1240:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1230:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1138,
                      "nodeType": "ExpressionStatement",
                      "src": "1230:20:3"
                    },
                    {
                      "expression": {
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1139,
                          "name": "s_pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1256:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1141,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1140,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1256:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1145,
                      "nodeType": "ExpressionStatement",
                      "src": "1256:27:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1147,
                            "name": "oldOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1131,
                            "src": "1316:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 1148,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1326:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1330:6:3",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1326:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1146,
                          "name": "OwnershipTransferred",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1069,
                          "src": "1295:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 1150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1295:42:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1151,
                      "nodeType": "EmitStatement",
                      "src": "1290:47:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1118,
                  "nodeType": "StructuredDocumentation",
                  "src": "949:74:3",
                  "text": "@notice Allows an ownership transfer to be completed by the recipient."
                },
                "functionSelector": "79ba5097",
                "id": 1153,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "acceptOwnership",
                "nameLocation": "1035:15:3",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1120,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1062:8:3"
                },
                "parameters": {
                  "id": 1119,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1050:2:3"
                },
                "returnParameters": {
                  "id": 1121,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1071:0:3"
                },
                "scope": 1209,
                "src": "1026:316:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  1216
                ],
                "body": {
                  "id": 1162,
                  "nodeType": "Block",
                  "src": "1438:25:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 1160,
                        "name": "s_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1055,
                        "src": "1451:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "functionReturnParameters": 1159,
                      "id": 1161,
                      "nodeType": "Return",
                      "src": "1444:14:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1154,
                  "nodeType": "StructuredDocumentation",
                  "src": "1346:33:3",
                  "text": "@notice Get the current owner"
                },
                "functionSelector": "8da5cb5b",
                "id": 1163,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "1391:5:3",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 1156,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1411:8:3"
                },
                "parameters": {
                  "id": 1155,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1396:2:3"
                },
                "returnParameters": {
                  "id": 1159,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1158,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1163,
                      "src": "1429:7:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1157,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1429:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1428:9:3"
                },
                "scope": 1209,
                "src": "1382:81:3",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 1186,
                  "nodeType": "Block",
                  "src": "1584:191:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1170,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1166,
                              "src": "1649:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "expression": {
                                "id": 1171,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1655:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1172,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1659:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1655:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1649:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1667:25:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                              "typeString": "literal_string \"Cannot transfer to self\""
                            },
                            "value": "Cannot transfer to self"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
                              "typeString": "literal_string \"Cannot transfer to self\""
                            }
                          ],
                          "id": 1169,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1641:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1641:52:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1176,
                      "nodeType": "ExpressionStatement",
                      "src": "1641:52:3"
                    },
                    {
                      "expression": {
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1177,
                          "name": "s_pendingOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1057,
                          "src": "1700:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1178,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1166,
                          "src": "1717:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1700:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1180,
                      "nodeType": "ExpressionStatement",
                      "src": "1700:19:3"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 1182,
                            "name": "s_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1055,
                            "src": "1758:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1183,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1166,
                            "src": "1767:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1181,
                          "name": "OwnershipTransferRequested",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1063,
                          "src": "1731:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                            "typeString": "function (address,address)"
                          }
                        },
                        "id": 1184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1731:39:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1185,
                      "nodeType": "EmitStatement",
                      "src": "1726:44:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1164,
                  "nodeType": "StructuredDocumentation",
                  "src": "1467:66:3",
                  "text": "@notice validate, transfer ownership, and emit relevant events"
                },
                "id": 1187,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_transferOwnership",
                "nameLocation": "1545:18:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1167,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1166,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1572:2:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1187,
                      "src": "1564:10:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1165,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1564:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1563:12:3"
                },
                "returnParameters": {
                  "id": 1168,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1584:0:3"
                },
                "scope": 1209,
                "src": "1536:239:3",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1199,
                  "nodeType": "Block",
                  "src": "1853:118:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1192,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1918:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1193,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1922:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1918:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 1194,
                              "name": "s_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1055,
                              "src": "1932:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "1918:21:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
                            "id": 1196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1941:24:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                              "typeString": "literal_string \"Only callable by owner\""
                            },
                            "value": "Only callable by owner"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
                              "typeString": "literal_string \"Only callable by owner\""
                            }
                          ],
                          "id": 1191,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "1910:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 1197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1910:56:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1198,
                      "nodeType": "ExpressionStatement",
                      "src": "1910:56:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1188,
                  "nodeType": "StructuredDocumentation",
                  "src": "1779:27:3",
                  "text": "@notice validate access"
                },
                "id": 1200,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_validateOwnership",
                "nameLocation": "1818:18:3",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1189,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1836:2:3"
                },
                "returnParameters": {
                  "id": 1190,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1853:0:3"
                },
                "scope": 1209,
                "src": "1809:162:3",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1207,
                  "nodeType": "Block",
                  "src": "2069:38:3",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1203,
                          "name": "_validateOwnership",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "2075:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$__$",
                            "typeString": "function () view"
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2075:20:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1205,
                      "nodeType": "ExpressionStatement",
                      "src": "2075:20:3"
                    },
                    {
                      "id": 1206,
                      "nodeType": "PlaceholderStatement",
                      "src": "2101:1:3"
                    }
                  ]
                },
                "documentation": {
                  "id": 1201,
                  "nodeType": "StructuredDocumentation",
                  "src": "1975:70:3",
                  "text": "@notice Reverts if called by anyone other than the contract owner."
                },
                "id": 1208,
                "name": "onlyOwner",
                "nameLocation": "2057:9:3",
                "nodeType": "ModifierDefinition",
                "parameters": {
                  "id": 1202,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2066:2:3"
                },
                "src": "2048:59:3",
                "virtual": false,
                "visibility": "internal"
              }
            ],
            "scope": 1210,
            "src": "216:1893:3",
            "usedErrors": [],
            "usedEvents": [
              1063,
              1069
            ]
          }
        ],
        "src": "32:2078:3"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
      "id": 4,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
        "exportedSymbols": {
          "IOwnable": [
            1225
          ]
        },
        "id": 1226,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1211,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:4"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IOwnable",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1225,
            "linearizedBaseContracts": [
              1225
            ],
            "name": "IOwnable",
            "nameLocation": "67:8:4",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "8da5cb5b",
                "id": 1216,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "owner",
                "nameLocation": "89:5:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1212,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "94:2:4"
                },
                "returnParameters": {
                  "id": 1215,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1214,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1216,
                      "src": "115:7:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1213,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "115:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "114:9:4"
                },
                "scope": 1225,
                "src": "80:44:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "f2fde38b",
                "id": 1221,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferOwnership",
                "nameLocation": "137:17:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1219,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1218,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "163:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 1221,
                      "src": "155:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1217,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "155:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "154:19:4"
                },
                "returnParameters": {
                  "id": 1220,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "182:0:4"
                },
                "scope": 1225,
                "src": "128:55:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "79ba5097",
                "id": 1224,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "acceptOwnership",
                "nameLocation": "196:15:4",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1222,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "211:2:4"
                },
                "returnParameters": {
                  "id": 1223,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "222:0:4"
                },
                "scope": 1225,
                "src": "187:36:4",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1226,
            "src": "57:168:4",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "32:194:4"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
      "id": 5,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
        "exportedSymbols": {
          "LinkTokenInterface": [
            1320
          ]
        },
        "id": 1321,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1227,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:5"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "LinkTokenInterface",
            "contractDependencies": [],
            "contractKind": "interface",
            "fullyImplemented": false,
            "id": 1320,
            "linearizedBaseContracts": [
              1320
            ],
            "name": "LinkTokenInterface",
            "nameLocation": "67:18:5",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "functionSelector": "dd62ed3e",
                "id": 1236,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "99:9:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1232,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1229,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "117:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1236,
                      "src": "109:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1228,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "109:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1231,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "132:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1236,
                      "src": "124:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1230,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "124:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "108:32:5"
                },
                "returnParameters": {
                  "id": 1235,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1234,
                      "mutability": "mutable",
                      "name": "remaining",
                      "nameLocation": "172:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1236,
                      "src": "164:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1233,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "164:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "163:19:5"
                },
                "scope": 1320,
                "src": "90:93:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "095ea7b3",
                "id": 1245,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "196:7:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1241,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1238,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "212:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "204:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1237,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "204:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1240,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "229:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "221:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1239,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "221:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "203:32:5"
                },
                "returnParameters": {
                  "id": 1244,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1243,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "259:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1245,
                      "src": "254:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1242,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "254:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "253:14:5"
                },
                "scope": 1320,
                "src": "187:81:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "70a08231",
                "id": 1252,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "281:9:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1248,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1247,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "299:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "291:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1246,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "291:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "290:15:5"
                },
                "returnParameters": {
                  "id": 1251,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1250,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "337:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1252,
                      "src": "329:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "329:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "328:17:5"
                },
                "scope": 1320,
                "src": "272:74:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "313ce567",
                "id": 1257,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "359:8:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1253,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "367:2:5"
                },
                "returnParameters": {
                  "id": 1256,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1255,
                      "mutability": "mutable",
                      "name": "decimalPlaces",
                      "nameLocation": "399:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1257,
                      "src": "393:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 1254,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "393:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "392:21:5"
                },
                "scope": 1320,
                "src": "350:64:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "66188463",
                "id": 1266,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "decreaseApproval",
                "nameLocation": "427:16:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1262,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1259,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "452:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "444:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "444:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1261,
                      "mutability": "mutable",
                      "name": "addedValue",
                      "nameLocation": "469:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "461:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1260,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "461:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "443:37:5"
                },
                "returnParameters": {
                  "id": 1265,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1264,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "504:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1266,
                      "src": "499:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1263,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "499:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "498:14:5"
                },
                "scope": 1320,
                "src": "418:95:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "d73dd623",
                "id": 1273,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "increaseApproval",
                "nameLocation": "526:16:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1271,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1268,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "551:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1273,
                      "src": "543:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1267,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "543:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1270,
                      "mutability": "mutable",
                      "name": "subtractedValue",
                      "nameLocation": "568:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1273,
                      "src": "560:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1269,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "560:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "542:42:5"
                },
                "returnParameters": {
                  "id": 1272,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "593:0:5"
                },
                "scope": 1320,
                "src": "517:77:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "06fdde03",
                "id": 1278,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "607:4:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1274,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "611:2:5"
                },
                "returnParameters": {
                  "id": 1277,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1276,
                      "mutability": "mutable",
                      "name": "tokenName",
                      "nameLocation": "651:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "637:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1275,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "637:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "636:25:5"
                },
                "scope": 1320,
                "src": "598:64:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "95d89b41",
                "id": 1283,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "675:6:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1279,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "681:2:5"
                },
                "returnParameters": {
                  "id": 1282,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1281,
                      "mutability": "mutable",
                      "name": "tokenSymbol",
                      "nameLocation": "721:11:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1283,
                      "src": "707:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1280,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "707:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "706:27:5"
                },
                "scope": 1320,
                "src": "666:68:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "18160ddd",
                "id": 1288,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "747:11:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1284,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "758:2:5"
                },
                "returnParameters": {
                  "id": 1287,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1286,
                      "mutability": "mutable",
                      "name": "totalTokensIssued",
                      "nameLocation": "792:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1288,
                      "src": "784:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "784:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "783:27:5"
                },
                "scope": 1320,
                "src": "738:73:5",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "a9059cbb",
                "id": 1297,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "824:8:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1293,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1290,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "841:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "833:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1289,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "833:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1292,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "853:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "845:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "845:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "832:27:5"
                },
                "returnParameters": {
                  "id": 1296,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1295,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "883:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1297,
                      "src": "878:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1294,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "878:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "877:14:5"
                },
                "scope": 1320,
                "src": "815:77:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "4000aea0",
                "id": 1308,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferAndCall",
                "nameLocation": "905:15:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1304,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1299,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "929:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1308,
                      "src": "921:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1298,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "921:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1301,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "941:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1308,
                      "src": "933:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1300,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "933:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1303,
                      "mutability": "mutable",
                      "name": "data",
                      "nameLocation": "963:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1308,
                      "src": "948:19:5",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1302,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "948:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "920:48:5"
                },
                "returnParameters": {
                  "id": 1307,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1306,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "992:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1308,
                      "src": "987:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1305,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "987:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "986:14:5"
                },
                "scope": 1320,
                "src": "896:105:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "functionSelector": "23b872dd",
                "id": 1319,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "1014:12:5",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1315,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1310,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "1035:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1027:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1309,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1027:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1312,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1049:2:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1041:10:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1311,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1041:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1314,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "1061:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1053:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1053:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1026:41:5"
                },
                "returnParameters": {
                  "id": 1318,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1317,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "1091:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1319,
                      "src": "1086:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1316,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1086:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1085:14:5"
                },
                "scope": 1320,
                "src": "1005:95:5",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1321,
            "src": "57:1045:5",
            "usedErrors": [],
            "usedEvents": []
          }
        ],
        "src": "32:1071:5"
      }
    },
    "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
      "id": 6,
      "ast": {
        "absolutePath": "lib/chainlink-brownie-contracts/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol",
        "exportedSymbols": {
          "VRFConsumerBaseV2": [
            1378
          ]
        },
        "id": 1379,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1322,
            "literals": [
              "solidity",
              "^",
              "0.8",
              ".4"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:23:6"
          },
          {
            "abstract": true,
            "baseContracts": [],
            "canonicalName": "VRFConsumerBaseV2",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 1323,
              "nodeType": "StructuredDocumentation",
              "src": "57:5275:6",
              "text": "****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."
            },
            "fullyImplemented": false,
            "id": 1378,
            "linearizedBaseContracts": [
              1378
            ],
            "name": "VRFConsumerBaseV2",
            "nameLocation": "5351:17:6",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "errorSelector": "1cf993f4",
                "id": 1329,
                "name": "OnlyCoordinatorCanFulfill",
                "nameLocation": "5379:25:6",
                "nodeType": "ErrorDefinition",
                "parameters": {
                  "id": 1328,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1325,
                      "mutability": "mutable",
                      "name": "have",
                      "nameLocation": "5413:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1329,
                      "src": "5405:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1324,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5405:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1327,
                      "mutability": "mutable",
                      "name": "want",
                      "nameLocation": "5427:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1329,
                      "src": "5419:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1326,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5419:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5404:28:6"
                },
                "src": "5373:60:6"
              },
              {
                "constant": false,
                "id": 1331,
                "mutability": "immutable",
                "name": "vrfCoordinator",
                "nameLocation": "5546:14:6",
                "nodeType": "VariableDeclaration",
                "scope": 1378,
                "src": "5520:40:6",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 1330,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5520:7:6",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 1341,
                  "nodeType": "Block",
                  "src": "5677:43:6",
                  "statements": [
                    {
                      "expression": {
                        "id": 1339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 1337,
                          "name": "vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "5683:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 1338,
                          "name": "_vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "5700:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5683:32:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1340,
                      "nodeType": "ExpressionStatement",
                      "src": "5683:32:6"
                    }
                  ]
                },
                "documentation": {
                  "id": 1332,
                  "nodeType": "StructuredDocumentation",
                  "src": "5565:72:6",
                  "text": " @param _vrfCoordinator address of VRFCoordinator contract"
                },
                "id": 1342,
                "implemented": true,
                "kind": "constructor",
                "modifiers": [],
                "name": "",
                "nameLocation": "-1:-1:-1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1335,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1334,
                      "mutability": "mutable",
                      "name": "_vrfCoordinator",
                      "nameLocation": "5660:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1342,
                      "src": "5652:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1333,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5652:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5651:25:6"
                },
                "returnParameters": {
                  "id": 1336,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5677:0:6"
                },
                "scope": 1378,
                "src": "5640:80:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "documentation": {
                  "id": 1343,
                  "nodeType": "StructuredDocumentation",
                  "src": "5724:686:6",
                  "text": " @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"
                },
                "id": 1351,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "fulfillRandomWords",
                "nameLocation": "6514:18:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1349,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1345,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "6541:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "6533:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1344,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6533:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1348,
                      "mutability": "mutable",
                      "name": "randomWords",
                      "nameLocation": "6569:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1351,
                      "src": "6552:28:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1346,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6552:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1347,
                        "nodeType": "ArrayTypeName",
                        "src": "6552:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6532:49:6"
                },
                "returnParameters": {
                  "id": 1350,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6598:0:6"
                },
                "scope": 1378,
                "src": "6505:94:6",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 1376,
                  "nodeType": "Block",
                  "src": "6883:167:6",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1359,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6893:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6897:6:6",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6893:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1361,
                          "name": "vrfCoordinator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1331,
                          "src": "6907:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6893:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 1370,
                      "nodeType": "IfStatement",
                      "src": "6889:109:6",
                      "trueBody": {
                        "id": 1369,
                        "nodeType": "Block",
                        "src": "6923:75:6",
                        "statements": [
                          {
                            "errorCall": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1364,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6964:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1365,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6968:6:6",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6964:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1366,
                                  "name": "vrfCoordinator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1331,
                                  "src": "6976:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1363,
                                "name": "OnlyCoordinatorCanFulfill",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1329,
                                "src": "6938:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
                                  "typeString": "function (address,address) pure"
                                }
                              },
                              "id": 1367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6938:53:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1368,
                            "nodeType": "RevertStatement",
                            "src": "6931:60:6"
                          }
                        ]
                      }
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 1372,
                            "name": "requestId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1353,
                            "src": "7022:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1373,
                            "name": "randomWords",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1356,
                            "src": "7033:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          ],
                          "id": 1371,
                          "name": "fulfillRandomWords",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1351,
                          "src": "7003:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                            "typeString": "function (uint256,uint256[] memory)"
                          }
                        },
                        "id": 1374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7003:42:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 1375,
                      "nodeType": "ExpressionStatement",
                      "src": "7003:42:6"
                    }
                  ]
                },
                "functionSelector": "1fe543e3",
                "id": 1377,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "rawFulfillRandomWords",
                "nameLocation": "6803:21:6",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 1357,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 1353,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "6833:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1377,
                      "src": "6825:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1352,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6825:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1356,
                      "mutability": "mutable",
                      "name": "randomWords",
                      "nameLocation": "6861:11:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1377,
                      "src": "6844:28:6",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1354,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6844:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1355,
                        "nodeType": "ArrayTypeName",
                        "src": "6844:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6824:49:6"
                },
                "returnParameters": {
                  "id": 1358,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6883:0:6"
                },
                "scope": 1378,
                "src": "6794:256:6",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 1379,
            "src": "5333:1719:6",
            "usedErrors": [
              1329
            ],
            "usedEvents": []
          }
        ],
        "src": "32:7021:6"
      }
    }
  },
  "errors": [],
  "version": "0.8.24",
  "long_version": "0.8.24+commit.e11b9ed9.Darwin.appleclang",
  "zk_version": "1.4.1"
}