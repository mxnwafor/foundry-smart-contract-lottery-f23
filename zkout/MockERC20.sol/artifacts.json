{
  "contracts": {
    "lib/forge-std/src/interfaces/IERC20.sol": {
      "IERC20": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "account",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.This includes the optional name, symbol, and decimals metadata.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set, where `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`).\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Be aware of front-running risks: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"balanceOf(address)\":{\"notice\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"notice\":\"Returns the decimals places of the token.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]}},\"version\":1}",
        "evm": {
          "legacyAssembly": null,
          "assembly": null,
          "bytecode": null,
          "methodIdentifiers": {
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "name()": "06fdde03",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": ""
      }
    },
    "lib/forge-std/src/mocks/MockERC20.sol": {
      "MockERC20": {
        "abi": [
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Approval",
            "type": "event"
          },
          {
            "anonymous": false,
            "inputs": [
              {
                "indexed": true,
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "indexed": true,
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "indexed": false,
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              }
            ],
            "name": "Transfer",
            "type": "event"
          },
          {
            "inputs": [],
            "name": "DOMAIN_SEPARATOR",
            "outputs": [
              {
                "internalType": "bytes32",
                "name": "",
                "type": "bytes32"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              }
            ],
            "name": "allowance",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "approve",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              }
            ],
            "name": "balanceOf",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "decimals",
            "outputs": [
              {
                "internalType": "uint8",
                "name": "",
                "type": "uint8"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "string",
                "name": "name_",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "symbol_",
                "type": "string"
              },
              {
                "internalType": "uint8",
                "name": "decimals_",
                "type": "uint8"
              }
            ],
            "name": "initialize",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "name",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "",
                "type": "address"
              }
            ],
            "name": "nonces",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "owner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "spender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "deadline",
                "type": "uint256"
              },
              {
                "internalType": "uint8",
                "name": "v",
                "type": "uint8"
              },
              {
                "internalType": "bytes32",
                "name": "r",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "s",
                "type": "bytes32"
              }
            ],
            "name": "permit",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "symbol",
            "outputs": [
              {
                "internalType": "string",
                "name": "",
                "type": "string"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
              {
                "internalType": "uint256",
                "name": "",
                "type": "uint256"
              }
            ],
            "stateMutability": "view",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transfer",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "from",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              }
            ],
            "name": "transferFrom",
            "outputs": [
              {
                "internalType": "bool",
                "name": "",
                "type": "bool"
              }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
          }
        ],
        "metadata": {
          "optimizer_settings": {
            "is_debug_logging_enabled": false,
            "is_fallback_to_size_enabled": false,
            "is_system_request_memoization_disabled": true,
            "is_verify_each_enabled": false,
            "jump_table_density_threshold": null,
            "level_back_end": "Aggressive",
            "level_middle_end": "Aggressive",
            "level_middle_end_size": "Zero"
          },
          "solc_metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC20.sol\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set, where `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`).\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Be aware of front-running risks: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\"},\"initialize(string,string,uint8)\":{\"details\":\"To hide constructor warnings across solc versions due to different constructor visibility requirements and syntaxes, we add an initialization function that can be called only once.\"}},\"stateVariables\":{\"initialized\":{\"details\":\"A bool to track whether the contract has been initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowance(address,address)\":{\"notice\":\"Returns the remaining number of tokens that `spender` is allowed to spend on behalf of `owner`\"},\"approve(address,uint256)\":{\"notice\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.\"},\"decimals()\":{\"notice\":\"Returns the decimals places of the token.\"},\"name()\":{\"notice\":\"Returns the name of the token.\"},\"symbol()\":{\"notice\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"notice\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"notice\":\"Moves `amount` tokens from the caller's account to `to`.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance.\"}},\"notice\":\"This is a mock contract of the ERC20 standard for testing purposes only, it SHOULD NOT be used in production.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/mocks/MockERC20.sol\":\"MockERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOcmu\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink-brownie-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x4cab887298790f908c27de107e4e2907ca5413aee482ef776f8d2f353c5ef947\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb715e0c4a2bdbe432bb624501506041f06e878e0b72675aebba30ad2c2b72e7\",\"dweb:/ipfs/QmWhhLSvkxS2NrukJJHqFY8gDVE5r9rD4PfHvR24pwdKv9\"]},\"lib/forge-std/src/mocks/MockERC20.sol\":{\"keccak256\":\"0xadbdfc6639edec00ba94bb1133a0fd8de31ccafe45c2ef5df9b3ca61b60b559b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc766f01bccf669abac8cc7b2096cc1352a66471ca3772ae61b1801dedc4ed4f\",\"dweb:/ipfs/QmNigaPj1LYkP7Z5xr4ijkUxr2K66fDGeoifG3WoM9ruyw\"]}},\"version\":1}",
          "solc_version": "0.8.24",
          "solc_zkvm_edition": null,
          "zk_version": "1.4.1"
        },
        "evm": {
          "legacyAssembly": null,
          "assembly": "\t.text\n\t.file\t\"MockERC20.sol:MockERC20\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[7]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tadd\t128, r0, r3\n\tst.1\t64, r3\n\tadd\tr1, r0, r4\n\tshr.s\t96, r4, r4\n\tand\t@CPI0_0[0], r4, r5\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub.s!\t4, r5, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_2[0], r2, r4\n\tjump.le\t@.BB0_6\n\tsub.s!\t@CPI0_3[0], r2, r4\n\tjump.le\t@.BB0_14\n\tsub.s!\t@CPI0_4[0], r2, r4\n\tjump.gt\t@.BB0_20\n\tsub.s!\t@CPI0_7[0], r2, r4\n\tjump.eq\t@.BB0_133\n\tsub.s!\t@CPI0_8[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[6]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r3\n\tsub.s!\tstack-[6], r3, r1\n\tjump.ge\t@.BB0_147\n.BB0_108:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_41[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t28, r0, r3\n.BB0_58:\n\tst.1\tr2, r3\n\tadd\t@CPI0_31[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_32[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_6:\n\tsub.s!\t@CPI0_12[0], r2, r3\n\tjump.gt\t@.BB0_10\n\tsub.s!\t@CPI0_16[0], r2, r3\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_17[0], r2, r3\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_18[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_42[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tadd\t35, r4, r2\n\tsub!\tr2, r5, r2\n\tjump.ge\t@.BB0_2\n\tadd\t4, r4, r6\n\tptr.add\tr1, r6, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_43[0], r3, r2\n\tjump.ge\t@.BB0_37\n\tadd\t31, r3, r7\n\tsub.s\t32, r0, r2\n\tand\tr7, r2, r7\n\tadd\t63, r7, r7\n\tand\tr7, r2, r7\n\tsub.s!\t@CPI0_44[0], r7, r8\n\tjump.le\t@.BB0_40\n.BB0_37:\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_14:\n\tsub.s!\t@CPI0_9[0], r2, r3\n\tjump.eq\t@.BB0_122\n\tsub.s!\t@CPI0_10[0], r2, r3\n\tjump.eq\t@.BB0_124\n\tsub.s!\t@CPI0_11[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t8, r0, r1\n\tjump\t@.BB0_128\n.BB0_10:\n\tsub.s!\t@CPI0_13[0], r2, r3\n\tjump.eq\t@.BB0_96\n\tsub.s!\t@CPI0_14[0], r2, r3\n\tjump.eq\t@.BB0_100\n\tsub.s!\t@CPI0_15[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t2, r0, r1\n\tsload\tr1, r1\n\tand\t255, r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_20:\n\tsub.s!\t@CPI0_5[0], r2, r3\n\tjump.eq\t@.BB0_152\n\tsub.s!\t@CPI0_6[0], r2, r2\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_19[0], r2, r3\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r3\n\tsub.s!\t@CPI0_19[0], r3, r1\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r2\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr2, r0, stack-[7]\n\tadd\tr0, r0, r1\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tadd\tr0, r0, r1\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_98\n.BB0_133:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r4\n\tsload\tr4, r2\n\tand!\t1, r2, r5\n\tshr.s\t1, r2, r6\n\tand\t127, r6, r1\n\tadd.ne\tr6, r0, r1\n\tsub.s!\t31, r1, r6\n\tadd\t0, r0, r6\n\tadd.gt\t1, r0, r6\n\txor\tr2, r6, r6\n\tand!\t1, r6, r6\n\tjump.eq\t@.BB0_135\n.BB0_61:\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tnear_call\tr0, @abi_encode_string_storage, @DEFAULT_UNWIND\n\tsub.s\t128, r1, r2\n\tadd\tstack-[7], r0, r1\n\tjump\t@.BB0_137\n.BB0_24:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t68, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tcontext.caller\tr1\n\tadd\tr1, r0, stack-[6]\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[7], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[5], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tadd\tstack-[6], r0, r5\n.BB0_30:\n\tadd\tstack-[7], r0, r6\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tld.1\t64, r1\n\tadd\t1, r0, r2\n\tst.1\tr1, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_122:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tnear_call\tr0, @fun_DOMAIN_SEPARATOR, @DEFAULT_UNWIND\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tor\t@CPI0_38[0], r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_124:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tsub.s!\t@CPI0_19[0], r1, r2\n\tjump.gt\t@.BB0_2\n\tst.1\t0, r1\n\tadd\t4, r0, r1\n.BB0_128:\n\tst.1\t32, r1\n\tadd\t64, r0, r2\n\tadd\tr0, r0, r1\n\tnear_call\tr0, @__sha3, @DEFAULT_UNWIND\n\tjump\t@.BB0_98\n.BB0_96:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t3, r0, r1\n.BB0_98:\n\tsload\tr1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_20[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_100:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t100, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r2\n\tadd\tr2, r0, stack-[7]\n\tsub.s!\t@CPI0_19[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tadd\tr1, r0, stack-[5]\n\tst.1\t0, r3\n\tadd\t5, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r4\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tadd\tr3, r0, stack-[6]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tcontext.caller\tr2\n\tadd\tr2, r0, stack-[3]\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tsub.s\t1, r0, r1\n\tsub!\tr2, r1, r1\n\tjump.ne\t@.BB0_107\n.BB0_112:\n\tst.1\t0, r3\n\tadd\t4, r0, r1\n\tadd\tr1, r0, stack-[4]\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r2\n\tadd\tr2, r0, stack-[3]\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB0_108\n\tst.1\t0, r3\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r3\n\tsub.s\tstack-[5], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[5], r1, stack-[3]\n\tsub!\tstack-[3], r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tsub.s!\t1, r1, r1\n\tjump.eq\t@.BB0_117\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[6], r0, r5\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[5], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_36[0], r0, r4\n\tjump\t@.BB0_30\n.BB0_152:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t228, r5, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r2\n\tld\tr2, r3\n\tsub.s!\t@CPI0_19[0], r3, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t36, r1, r2\n\tld\tr2, r4\n\tsub.s!\t@CPI0_19[0], r4, r2\n\tjump.gt\t@.BB0_2\n\tptr.add.s\t100, r1, r2\n\tld\tr2, r6\n\tptr.add.s\t68, r1, r2\n\tld\tr2, r2\n\tptr.add.s\t132, r1, r1\n\tld\tr1, r5\n\tsub.s!\t255, r5, r1\n\tjump.gt\t@.BB0_2\n\tadd\tr6, r0, stack-[7]\n\tadd\tr5, r0, stack-[3]\n\tadd\tr2, r0, stack-[4]\n\tadd\tr4, r0, stack-[5]\n\tadd\tr3, r0, stack-[6]\n\tadd\t@CPI0_21[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_22[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_158\n\tld\tr1, r1\n\tsub!\tstack-[7], r1, r1\n\tjump.ge\t@.BB0_161\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_35[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t23, r0, r3\n\tjump\t@.BB0_58\n.BB0_135:\n\tst.1\t128, r1\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB0_138\n\tst.1\t0, r4\n\tsub!\tr1, r0, r2\n\tjump.eq\t@.BB0_136\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\tr0, r0, r4\n.BB0_141:\n\tsload\tr2, r5\n\tadd\t160, r4, r3\n\tst.1\tr3, r5\n\tadd\t1, r2, r2\n\tadd\t32, r4, r4\n\tsub!\tr4, r1, r5\n\tjump.lt\t@.BB0_141\n\tjump\t@.BB0_136\n.BB0_138:\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tst.1\t160, r2\n\tsub!\tr1, r0, r1\n\tadd\t160, r0, r3\n\tadd.eq\t128, r0, r3\n.BB0_136:\n\tsub.s\t96, r3, r2\n\tadd\t128, r0, r1\n\tadd\tr1, r0, stack-[7]\n.BB0_137:\n\tnear_call\tr0, @finalize_allocation, @DEFAULT_UNWIND\n\tld.1\t64, r1\n\tadd\tr1, r0, stack-[6]\n\tadd\tstack-[7], r0, r2\n\tnear_call\tr0, @abi_encode_string, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r4\n\tsub\tr1, r4, r1\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tsub.s!\t@CPI0_0[0], r4, r3\n\tadd.ge\tr2, r0, r4\n\tshl.s\t64, r4, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_147:\n\tadd\tr3, r0, stack-[3]\n\tadd\tstack-[4], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[3], r0, r3\n\tsub.s\tstack-[6], r3, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsload\tr1, r1\n\tadd\tstack-[6], r1, r3\n\tsub!\tr3, r1, r1\n\tadd\t0, r0, r1\n\tadd.lt\t1, r0, r1\n\tand!\t1, r1, r1\n\tjump.ne\t@.BB0_117\n\tadd\tr3, r0, stack-[3]\n\tadd\tstack-[7], r0, r1\n\tst.1\t0, r1\n\tadd\tstack-[5], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tsstore\tr1, r2\n\tld.1\t64, r1\n\tadd\tstack-[6], r0, r2\n\tst.1\tr1, r2\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd\t@CPI0_0[0], r0, r4\n\tadd.ge\tr4, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_36[0], r0, r4\n\tadd\tstack-[4], r0, r5\n\tjump\t@.BB0_30\n.BB0_40:\n\tadd\t128, r7, r7\n\tst.1\t64, r7\n\tst.1\t128, r3\n\tadd\tr4, r3, r4\n\tadd\t36, r4, r4\n\tsub!\tr4, r5, r4\n\tjump.gt\t@.BB0_2\n\tadd\t32, r6, r4\n\tptr.add\tr1, r4, r4\n\tand\t31, r3, r6\n\tshr.s!\t5, r3, r7\n\tjump.eq\t@.BB0_191\n\tadd\tr0, r0, r8\n.BB0_43:\n\tshl.s\t5, r8, r9\n\tptr.add\tr4, r9, r10\n\tld\tr10, r10\n\tadd\t160, r9, r9\n\tst.1\tr9, r10\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_43\n.BB0_191:\n\tsub!\tr6, r0, r8\n\tjump.eq\t@.BB0_45\n\tshl.s\t5, r7, r7\n\tptr.add\tr4, r7, r4\n\tshl.s\t3, r6, r6\n\tadd\t160, r7, r7\n\tld.1\tr7, r8\n\tshl\tr8, r6, r8\n\tshr\tr8, r6, r8\n\tld\tr4, r4\n\tsub\t256, r6, r6\n\tshr\tr4, r6, r4\n\tshl\tr4, r6, r4\n\tor\tr4, r8, r4\n\tst.1\tr7, r4\n.BB0_45:\n\tadd\t160, r3, r3\n\tst.1\tr3, r0\n\tptr.add.s\t36, r1, r3\n\tld\tr3, r7\n\tsub.s!\t@CPI0_42[0], r7, r3\n\tjump.gt\t@.BB0_2\n\tadd\t35, r7, r3\n\tsub!\tr3, r5, r3\n\tjump.ge\t@.BB0_2\n\tadd\t4, r7, r8\n\tptr.add\tr1, r8, r3\n\tld\tr3, r6\n\tsub.s!\t@CPI0_42[0], r6, r3\n\tjump.gt\t@.BB0_37\n\tadd\t31, r6, r3\n\tand\tr3, r2, r3\n\tadd\t63, r3, r3\n\tand\tr3, r2, r4\n\tld.1\t64, r3\n\tadd\tr3, r4, r4\n\tsub!\tr4, r3, r9\n\tadd\t0, r0, r9\n\tadd.lt\t1, r0, r9\n\tsub.s!\t@CPI0_42[0], r4, r10\n\tjump.gt\t@.BB0_37\n\tand!\t1, r9, r9\n\tjump.ne\t@.BB0_37\n\tst.1\t64, r4\n\tst.1.inc\tr3, r6, r4\n\tadd\tr7, r6, r7\n\tadd\t36, r7, r7\n\tsub!\tr7, r5, r5\n\tjump.gt\t@.BB0_2\n\tadd\t32, r8, r5\n\tptr.add\tr1, r5, r7\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r8\n\tjump.eq\t@.BB0_190\n\tadd\tr0, r0, r9\n.BB0_53:\n\tshl.s\t5, r9, r10\n\tadd\tr4, r10, r11\n\tptr.add\tr7, r10, r10\n\tld\tr10, r10\n\tst.1\tr11, r10\n\tadd\t1, r9, r9\n\tsub!\tr9, r8, r10\n\tjump.lt\t@.BB0_53\n.BB0_190:\n\tsub!\tr5, r0, r9\n\tjump.eq\t@.BB0_55\n\tshl.s\t5, r8, r8\n\tptr.add\tr7, r8, r7\n\tadd\tr4, r8, r8\n\tshl.s\t3, r5, r5\n\tld.1\tr8, r9\n\tshl\tr9, r5, r9\n\tshr\tr9, r5, r9\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r9, r5\n\tst.1\tr8, r5\n.BB0_55:\n\tadd\tr4, r6, r5\n\tst.1\tr5, r0\n\tptr.add.s\t68, r1, r1\n\tld\tr1, r1\n\tsub.s!\t255, r1, r5\n\tjump.gt\t@.BB0_2\n\tadd\t9, r0, r5\n\tadd\tr5, r0, stack-[7]\n\tsload\tr5, r5\n\tand!\t255, r5, r5\n\tjump.ne\t@.BB0_57\n\tld.1\t128, r5\n\tsub.s!\t@CPI0_42[0], r5, r6\n\tjump.gt\t@.BB0_37\n\tsload\tr0, r6\n\tand!\t1, r6, r7\n\tshr.s\t1, r6, r8\n\tand\t127, r8, r6\n\tadd.ne\tr8, r0, r6\n\tsub.s!\t31, r6, r8\n\tadd\t0, r0, r8\n\tadd.gt\t1, r0, r8\n\tsub!\tr7, r8, r7\n\tjump.ne\t@.BB0_61\n\tsub.s!\t32, r6, r7\n\tjump.lt\t@.BB0_65\n\tadd\t31, r5, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_46[0], r7, r8\n\tadd\t@CPI0_46[0], r0, r7\n\tsub.s!\t32, r5, r9\n\tadd.ge\tr8, r0, r7\n\tst.1\t0, r0\n\tadd\t31, r6, r6\n\tshr.s\t5, r6, r6\n\tadd\t@CPI0_46[0], r6, r6\n\tsub!\tr7, r6, r8\n\tjump.ge\t@.BB0_65\n.BB0_66:\n\tsstore\tr7, r0\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_66\n.BB0_65:\n\tsub.s!\t31, r5, r6\n\tjump.le\t@.BB0_76\n\tand!\tr5, r2, r7\n\tst.1\t0, r0\n\tjump.ne\t@.BB0_70\n\tadd\t160, r0, r8\n\tadd\t@CPI0_46[0], r0, r6\n\tjump\t@.BB0_73\n.BB0_158:\n\trevert\n.BB0_107:\n\tsub.s!\tstack-[5], r2, r1\n\tjump.lt\t@.BB0_108\n\tadd\tr2, r0, stack-[2]\n\tst.1\t0, r3\n\tadd\tstack-[4], r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[3], r0, r2\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r3\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tadd\tstack-[2], r0, r4\n\tsub.s\tstack-[5], r4, r2\n\tld\tr1, r1\n\tsstore\tr1, r2\n\tjump\t@.BB0_112\n.BB0_161:\n\tnear_call\tr0, @fun_DOMAIN_SEPARATOR, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r2\n\tst.1\t0, r2\n\tadd\t8, r0, r2\n\tst.1\t32, r2\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[7], r0, r8\n\tadd\tstack-[6], r0, r4\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r5\n\tadd\tstack-[4], r0, r6\n\tjump.eq\t@.BB0_2\n\tld\tr1, r2\n\tsload\tr2, r1\n\tsub.s\t1, r0, r3\n\tsub!\tr1, r3, r3\n\tjump.ne\t@.BB0_163\n.BB0_117:\n\tadd\t@CPI0_39[0], r0, r1\n\tst.1\t0, r1\n\tadd\t17, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI0_40[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_163:\n\tadd\t1, r1, r3\n\tsstore\tr2, r3\n\tld.1\t64, r7\n\tadd\t192, r7, r2\n\tst.1\tr2, r8\n\tadd\t160, r7, r2\n\tst.1\tr2, r1\n\tadd\t128, r7, r1\n\tst.1\tr1, r6\n\tadd\t96, r7, r1\n\tst.1\tr1, r5\n\tadd\t64, r7, r1\n\tst.1\tr1, r4\n\tadd\t192, r0, r1\n\tst.1.inc\tr7, r1, r1\n\tadd\t@CPI0_24[0], r0, r2\n\tst.1\tr1, r2\n\tsub.s!\t@CPI0_25[0], r7, r2\n\tjump.gt\t@.BB0_37\n\tadd\t224, r7, r2\n\tadd\tr2, r0, stack-[7]\n\tst.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tr7, r0, stack-[1]\n\tld.1\tr7, r3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r1, r1\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tadd\tstack-[1], r0, r3\n\tadd\t290, r3, r2\n\tst.1\tr2, r1\n\tadd\t256, r3, r1\n\tadd\t@CPI0_27[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t258, r3, r2\n\tadd\tstack-[2], r0, r4\n\tst.1\tr2, r4\n\tadd\t66, r0, r2\n\tadd\tstack-[7], r0, r4\n\tst.1\tr4, r2\n\tsub.s!\t@CPI0_28[0], r3, r2\n\tjump.gt\t@.BB0_37\n\tadd\t352, r3, r3\n\tadd\tr3, r0, stack-[2]\n\tsub.s!\tstack-[7], r3, r2\n\tjump.lt\t@.BB0_37\n\tadd\tstack-[2], r0, r2\n\tst.1\t64, r2\n\tadd\t@CPI0_0[0], r0, r4\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr4, r0, r1\n\tshl.s\t64, r1, r1\n\tadd\tstack-[7], r0, r2\n\tld.1\tr2, r2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_26[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[3], r0, r2\n\tjump.eq\t@.BB0_2\n\tand\t255, r2, r2\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r5\n\tst.1\tr5, r1\n\tadd\tstack-[1], r0, r4\n\tadd\t384, r4, r1\n\tst.1\tr1, r2\n\tptr.add\tstack[@ptr_calldata], r0, r1\n\tptr.add.s\t164, r1, r2\n\tld\tr2, r2\n\tadd\t416, r4, r3\n\tst.1\tr3, r2\n\tadd\t448, r4, r2\n\tptr.add.s\t196, r1, r1\n\tld\tr1, r1\n\tst.1\tr2, r1\n\tsub.s!\t@CPI0_0[0], r5, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tadd.ge\tr3, r0, r5\n\tst.1\t0, r0\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r5, r2\n\tshl.s\t192, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_29[0], r1, r1\n\tadd\t1, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tsub.s!\t32, r3, r4\n\tadd\tr3, r0, r4\n\tadd.ge\t32, r0, r4\n\tand\t31, r4, r5\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_193\n\tadd\tr0, r0, r6\n.BB0_170:\n\tshl.s\t5, r6, r7\n\tptr.add\tr1, r7, r8\n\tld\tr8, r8\n\tst.1\tr7, r8\n\tadd\t1, r6, r6\n\tsub!\tr6, r4, r7\n\tjump.lt\t@.BB0_170\n.BB0_193:\n\tsub!\tr5, r0, r6\n\tjump.eq\t@.BB0_172\n\tshl.s\t3, r5, r5\n\tshl.s\t5, r4, r4\n\tld.1\tr4, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tptr.add\tr1, r4, r7\n\tld\tr7, r7\n\tsub\t256, r5, r5\n\tshr\tr7, r5, r7\n\tshl\tr7, r5, r5\n\tor\tr5, r6, r5\n\tst.1\tr4, r5\n.BB0_172:\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_173\n\tld.1\t0, r1\n\tand!\t@CPI0_19[0], r1, r1\n\tjump.eq\t@.BB0_180\n\tsub.s!\tstack-[6], r1, r1\n\tjump.ne\t@.BB0_180\n\tadd\tstack-[6], r0, r1\n\tst.1\t0, r1\n\tadd\t5, r0, r1\n\tst.1\t32, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\tr3, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tadd\tstack-[5], r0, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tst.1\t0, r2\n\tst.1\t32, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI0_0[0], r1, r2\n\tadd.ge\t@CPI0_0[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_23[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[4], r0, r3\n\tadd\tstack-[5], r0, r6\n\tadd\tstack-[6], r0, r5\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_2\n\tld\tr1, r1\n\tsstore\tr1, r3\n\tld.1\t64, r1\n\tst.1\tr1, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_33[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_34[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_57:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_45[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t19, r0, r3\n\tjump\t@.BB0_58\n.BB0_173:\n\tld.1\t64, r2\n\tand\t31, r3, r4\n\tshr.s!\t5, r3, r5\n\tjump.eq\t@.BB0_192\n\tadd\tr0, r0, r6\n.BB0_175:\n\tshl.s\t5, r6, r7\n\tadd\tr2, r7, r8\n\tptr.add\tr1, r7, r7\n\tld\tr7, r7\n\tst.1\tr8, r7\n\tadd\t1, r6, r6\n\tsub!\tr6, r5, r7\n\tjump.lt\t@.BB0_175\n.BB0_192:\n\tsub!\tr4, r0, r6\n\tjump.eq\t@.BB0_177\n\tshl.s\t5, r5, r5\n\tptr.add\tr1, r5, r1\n\tadd\tr2, r5, r5\n\tshl.s\t3, r4, r4\n\tld.1\tr5, r6\n\tshl\tr6, r4, r6\n\tshr\tr6, r4, r6\n\tld\tr1, r1\n\tsub\t256, r4, r4\n\tshr\tr1, r4, r1\n\tshl\tr1, r4, r1\n\tor\tr1, r6, r1\n\tst.1\tr5, r1\n.BB0_177:\n\tadd\t@CPI0_0[0], r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t64, r2, r1\n\tshl.s\t96, r3, r2\n\tor\tr1, r2, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_180:\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_30[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t14, r0, r3\n\tjump\t@.BB0_58\n.BB0_76:\n\tsub!\tr5, r0, r6\n\tadd\tr0, r0, r6\n\tjump.eq\t@.BB0_78\n\tld.1\t160, r6\n.BB0_78:\n\tshl.s\t3, r5, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tand\tr6, r7, r6\n\tshl.s\t1, r5, r5\n\tor\tr6, r5, r5\n\tjump\t@.BB0_67\n.BB0_70:\n\tadd\t@CPI0_46[0], r0, r6\n\tadd\t32, r0, r9\n\tadd\tr0, r0, r8\n.BB0_71:\n\tadd\tr9, r0, r10\n\tadd\t128, r10, r9\n\tld.1\tr9, r9\n\tsstore\tr6, r9\n\tadd\t32, r10, r9\n\tadd\t1, r6, r6\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r11\n\tjump.lt\t@.BB0_71\n\tadd\t160, r10, r8\n.BB0_73:\n\tsub!\tr7, r5, r7\n\tjump.ge\t@.BB0_75\n\tshl.s\t3, r5, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r9\n\tshr\tr9, r7, r7\n\txor\tr7, r9, r7\n\tld.1\tr8, r8\n\tand\tr8, r7, r7\n\tsstore\tr6, r7\n.BB0_75:\n\tshl.s\t1, r5, r5\n\tor\t1, r5, r5\n.BB0_67:\n\tsstore\tr0, r5\n\tld.1\tr3, r6\n\tsub.s!\t@CPI0_42[0], r6, r5\n\tjump.gt\t@.BB0_37\n\tadd\t1, r0, r5\n\tsload\tr5, r8\n\tand!\t1, r8, r7\n\tshr.s\t1, r8, r9\n\tand\t127, r9, r7\n\tadd.ne\tr9, r0, r7\n\tsub.s!\t31, r7, r9\n\tadd\t0, r0, r9\n\tadd.gt\t1, r0, r9\n\txor\tr8, r9, r8\n\tand!\t1, r8, r8\n\tjump.ne\t@.BB0_61\n\tsub.s!\t32, r7, r8\n\tjump.lt\t@.BB0_83\n\tadd\t31, r6, r8\n\tshr.s\t5, r8, r8\n\tadd\t@CPI0_37[0], r8, r9\n\tadd\t@CPI0_37[0], r0, r8\n\tsub.s!\t32, r6, r10\n\tadd.ge\tr9, r0, r8\n\tadd\t1, r0, r9\n\tst.1\t0, r9\n\tadd\t31, r7, r7\n\tshr.s\t5, r7, r7\n\tadd\t@CPI0_37[0], r7, r7\n\tsub!\tr8, r7, r9\n\tjump.ge\t@.BB0_83\n.BB0_84:\n\tsstore\tr8, r0\n\tadd\t1, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_84\n.BB0_83:\n\tsub.s!\t31, r6, r7\n\tjump.le\t@.BB0_93\n\tst.1\t0, r5\n\tand!\tr6, r2, r7\n\tjump.ne\t@.BB0_88\n\tadd\t32, r0, r4\n\tadd\t@CPI0_37[0], r0, r2\n\tjump\t@.BB0_90\n.BB0_93:\n\tsub!\tr6, r0, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_95\n\tld.1\tr4, r2\n.BB0_95:\n\tshl.s\t3, r6, r3\n\tsub.s\t1, r0, r4\n\tshr\tr4, r3, r3\n\txor\tr3, r4, r3\n\tand\tr2, r3, r2\n\tshl.s\t1, r6, r3\n\tjump\t@.BB0_85\n.BB0_88:\n\tadd\t@CPI0_37[0], r0, r2\n\tadd\t32, r0, r4\n\tadd\tr0, r0, r8\n.BB0_89:\n\tadd\tr4, r3, r9\n\tld.1\tr9, r9\n\tsstore\tr2, r9\n\tadd\t32, r4, r4\n\tadd\t1, r2, r2\n\tadd\t32, r8, r8\n\tsub!\tr8, r7, r9\n\tjump.lt\t@.BB0_89\n.BB0_90:\n\tsub!\tr7, r6, r7\n\tjump.ge\t@.BB0_92\n\tshl.s\t3, r6, r7\n\tand\t248, r7, r7\n\tsub.s\t1, r0, r8\n\tshr\tr8, r7, r7\n\txor\tr7, r8, r7\n\tadd\tr4, r3, r3\n\tld.1\tr3, r3\n\tand\tr3, r7, r3\n\tsstore\tr2, r3\n.BB0_92:\n\tshl.s\t1, r6, r2\n\tadd\tr5, r0, r3\n.BB0_85:\n\tor\tr2, r3, r2\n\tsstore\tr5, r2\n\tadd\t2, r0, r2\n\tsload\tr2, r3\n\tsub.s\t256, r0, stack-[6]\n\tand\tstack-[6], r3, r3\n\tand\t255, r1, r1\n\tor\tr3, r1, r1\n\tsstore\tr2, r1\n\tadd\t@CPI0_47[0], r0, r1\n\tnear_call\tr0, @__system_request, @DEFAULT_UNWIND\n\tadd\t6, r0, r2\n\tsstore\tr2, r1\n\tnear_call\tr0, @fun_computeDomainSeparator, @DEFAULT_UNWIND\n\tadd\t7, r0, r2\n\tsstore\tr2, r1\n\tadd\tstack-[7], r0, r2\n\tsload\tr2, r1\n\tand\tstack-[6], r1, r1\n\tor\t1, r1, r1\n\tsstore\tr2, r1\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\nabi_encode_string:\n.func_begin1:\n\tadd\t32, r0, r3\n\tst.1.inc\tr1, r3, r4\n\tld.1.inc\tr2, r2, r3\n\tst.1\tr4, r2\n\tadd\t64, r1, r1\n\tsub!\tr2, r0, r4\n\tjump.eq\t@.BB1_3\n\tadd\tr0, r0, r4\n.BB1_2:\n\tadd\tr1, r4, r5\n\tadd\tr3, r4, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r4, r4\n\tsub!\tr4, r2, r5\n\tjump.lt\t@.BB1_2\n.BB1_3:\n\tadd\tr1, r2, r3\n\tst.1\tr3, r0\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr1, r2, r1\n\tret\n.func_end1:\n\nfinalize_allocation:\n.func_begin2:\n\tadd\t31, r2, r2\n\tsub.s\t32, r0, r3\n\tand\tr2, r3, r2\n\tadd\tr2, r1, r1\n\tsub!\tr1, r2, r2\n\tadd\t0, r0, r2\n\tadd.lt\t1, r0, r2\n\tsub.s!\t@CPI2_0[0], r1, r3\n\tjump.gt\t@.BB2_2\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB2_2\n\tst.1\t64, r1\n\tret\n.BB2_2:\n\tadd\t@CPI2_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI2_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end2:\n\nabi_encode_string_storage:\n.func_begin3:\n\tsload\tr0, r3\n\tand!\t1, r3, r4\n\tshr.s\t1, r3, r5\n\tand\t127, r5, r2\n\tadd.ne\tr5, r0, r2\n\tsub.s!\t31, r2, r5\n\tadd\t0, r0, r5\n\tadd.gt\t1, r0, r5\n\tsub!\tr4, r5, r5\n\tjump.ne\t@.BB3_1\n\tst.1.inc\tr1, r2, r1\n\tsub!\tr4, r0, r4\n\tjump.eq\t@.BB3_4\n\tst.1\t0, r0\n\tsub!\tr2, r0, r3\n\tjump.eq\t@.BB3_6\n\tadd\t@CPI3_0[0], r0, r4\n\tadd\tr0, r0, r3\n.BB3_8:\n\tadd\tr1, r3, r5\n\tsload\tr4, r6\n\tst.1\tr5, r6\n\tadd\t1, r4, r4\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r5\n\tjump.lt\t@.BB3_8\n\tadd\tr1, r3, r1\n\tret\n.BB3_4:\n\tsub.s\t256, r0, r4\n\tand\tr3, r4, r3\n\tst.1\tr1, r3\n\tsub!\tr2, r0, r2\n\tadd\t32, r0, r3\n\tadd.eq\t0, r0, r3\n\tadd\tr1, r3, r1\n\tret\n.BB3_6:\n\tadd\tr0, r0, r3\n\tadd\tr1, r3, r1\n\tret\n.BB3_1:\n\tadd\t@CPI3_1[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI3_2[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end3:\n\nfun_DOMAIN_SEPARATOR:\n.func_begin4:\n\tnop\tstack+=[2]\n\tadd\t6, r0, r1\n\tsload\tr1, r1\n\tadd\tr1, r0, stack-[2]\n\tadd\t@CPI4_0[0], r0, r1\n\tst.2\t0, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tsub.s!\tstack-[2], r1, r1\n\tjump.ne\t@.BB4_3\n\tadd\t7, r0, r1\n\tsload\tr1, r1\n\tret\n.BB4_3:\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB4_4\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB4_7\n\tst.1\t0, r0\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB4_9\n\tadd\t@CPI4_3[0], r0, r5\n\tadd\tr0, r0, r4\n.BB4_11:\n\tadd\tr4, r2, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB4_11\n\tjump\t@.BB4_12\n.BB4_7:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr2, r4\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB4_12\n.BB4_9:\n\tadd\tr0, r0, r4\n.BB4_12:\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI4_4[0], r3, r5\n\tjump.gt\t@.BB4_14\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB4_14\n\tst.1\t64, r3\n\tadd\t@CPI4_1[0], r0, r4\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI4_1[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI4_1[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_16\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r2\n\tadd\t@CPI4_6[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[2]\n\tadd\t32, r4, r2\n\tadd\t@CPI4_7[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI4_0[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI4_1[0], r1, r2\n\tadd.ge\t@CPI4_1[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI4_2[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_1\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t160, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI4_8[0], r4, r1\n\tjump.gt\t@.BB4_14\n\tadd\t192, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI4_1[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI4_1[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI4_1[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI4_5[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB4_16\n\tld\tr1, r1\n\tret\n.BB4_1:\n\trevert\n.BB4_14:\n\tadd\t@CPI4_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_16:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB4_4:\n\tadd\t@CPI4_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI4_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end4:\n\nfun_computeDomainSeparator:\n.func_begin5:\n\tnop\tstack+=[2]\n\tsload\tr0, r4\n\tand!\t1, r4, r5\n\tshr.s\t1, r4, r1\n\tand\t127, r1, r3\n\tadd.ne\tr1, r0, r3\n\tsub.s!\t31, r3, r1\n\tadd\t0, r0, r1\n\tadd.gt\t1, r0, r1\n\tsub!\tr5, r1, r1\n\tjump.ne\t@.BB5_1\n\tld.1\t64, r1\n\tst.1.inc\tr1, r3, r2\n\tsub!\tr5, r0, r5\n\tjump.eq\t@.BB5_4\n\tst.1\t0, r0\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB5_6\n\tadd\t@CPI5_0[0], r0, r5\n\tadd\tr0, r0, r4\n.BB5_8:\n\tadd\tr4, r2, r6\n\tsload\tr5, r7\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tadd\t32, r4, r4\n\tsub!\tr4, r3, r6\n\tjump.lt\t@.BB5_8\n\tjump\t@.BB5_9\n.BB5_4:\n\tsub.s\t256, r0, r5\n\tand\tr4, r5, r4\n\tst.1\tr2, r4\n\tsub!\tr3, r0, r3\n\tadd\t32, r0, r4\n\tadd.eq\t0, r0, r4\n\tjump\t@.BB5_9\n.BB5_6:\n\tadd\tr0, r0, r4\n.BB5_9:\n\tadd\t63, r4, r3\n\tsub.s\t32, r0, r4\n\tand\tr3, r4, r4\n\tadd\tr4, r1, r3\n\tsub!\tr3, r4, r4\n\tadd\t0, r0, r4\n\tadd.lt\t1, r0, r4\n\tsub.s!\t@CPI5_1[0], r3, r5\n\tjump.gt\t@.BB5_11\n\tand!\t1, r4, r4\n\tjump.ne\t@.BB5_11\n\tst.1\t64, r3\n\tadd\t@CPI5_2[0], r0, r4\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t64, r2, r2\n\tld.1\tr1, r1\n\tsub.s!\t@CPI5_2[0], r1, r3\n\tadd.ge\tr4, r0, r1\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI5_2[0], r2, r3\n\tadd.ge\tr4, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_13\n\tld\tr1, r1\n\tld.1\t64, r4\n\tadd\t96, r4, r2\n\tadd\t@CPI5_4[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t64, r4, r2\n\tst.1\tr2, r1\n\tadd\tr4, r0, stack-[2]\n\tadd\t32, r4, r2\n\tadd\t@CPI5_5[0], r0, r1\n\tadd\tr2, r0, stack-[1]\n\tst.1\tr2, r1\n\tadd\t@CPI5_6[0], r0, r1\n\tst.2\t0, r1\n\tcontext.gas_left\tr1\n\tsub.s!\t@CPI5_2[0], r1, r2\n\tadd.ge\t@CPI5_2[0], r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI5_7[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_15\n\tld\tr1, r1\n\tadd\tstack-[2], r0, r4\n\tadd\t160, r4, r2\n\tcontext.this\tr3\n\tst.1\tr2, r3\n\tadd\t128, r4, r2\n\tst.1\tr2, r1\n\tadd\t160, r0, r1\n\tst.1\tr4, r1\n\tsub.s!\t@CPI5_8[0], r4, r1\n\tjump.gt\t@.BB5_11\n\tadd\t192, r4, r1\n\tst.1\t64, r1\n\tadd\t@CPI5_2[0], r0, r1\n\tadd\tstack-[1], r0, r3\n\tsub.s!\t@CPI5_2[0], r3, r2\n\tadd.ge\tr1, r0, r3\n\tshl.s\t64, r3, r2\n\tld.1\tr4, r3\n\tsub.s!\t@CPI5_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t96, r3, r3\n\tor\tr3, r2, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI5_2[0], r3, r4\n\tadd.ge\tr1, r0, r3\n\tshl.s\t192, r3, r1\n\tor\tr1, r2, r1\n\tor\t@CPI5_3[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB5_13\n\tld\tr1, r1\n\tret\n.BB5_11:\n\tadd\t@CPI5_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t65, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_13:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_1:\n\tadd\t@CPI5_9[0], r0, r1\n\tst.1\t0, r1\n\tadd\t34, r0, r1\n\tst.1\t4, r1\n\tadd\t@CPI5_10[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB5_15:\n\trevert\n.func_end5:\n\n__cxa_throw:\n.func_begin6:\n\trevert\n.func_end6:\n\n__sha3:\n.func_begin7:\n\tadd\t@CPI7_0[0], r0, r3\n\tsub.s!\t@CPI7_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI7_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t192, r2, r2\n\tor\tr2, r1, r1\n\tor\t@CPI7_1[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB7_2\n\tld\tr1, r1\n\tret\n.BB7_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end7:\n\n__system_request:\n.func_begin8:\n\tst.2\t0, r1\n\tadd\t@CPI8_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI8_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI8_1[0], r1, r1\n\tadd\t32779, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB8_2\n\tld\tr1, r1\n\tret\n.BB8_2:\n\trevert\n.func_end8:\n\n__farcall:\n.func_begin9:\n.tmp0:\n\tfar_call\tr1, r2, @.BB9_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB9_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end9:\n\n__staticcall:\n.func_begin10:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB10_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB10_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end10:\n\n\t.data\n\t.p2align\t5, 0x0\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\nCPI4_1:\nCPI5_2:\nCPI7_0:\nCPI8_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 910484756\nCPI0_3:\n\t.cell 2514000704\nCPI0_4:\n\t.cell 3573918926\nCPI0_5:\n\t.cell 3573918927\nCPI0_6:\n\t.cell 3714247998\nCPI0_7:\n\t.cell 2514000705\nCPI0_8:\n\t.cell 2835717307\nCPI0_9:\n\t.cell 910484757\nCPI0_10:\n\t.cell 1889567281\nCPI0_11:\n\t.cell 2127478272\nCPI0_12:\n\t.cell 404098524\nCPI0_13:\n\t.cell 404098525\nCPI0_14:\n\t.cell 599290589\nCPI0_15:\n\t.cell 826074471\nCPI0_16:\n\t.cell 117300739\nCPI0_17:\n\t.cell 157198259\nCPI0_18:\n\t.cell 371521222\nCPI0_19:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_20:\n\t.cell 2535301202817642044428229017600\nCPI0_21:\n\t.cell 54919857843691310904240101001871775513466943666296306094405906504622902841650\nCPI0_22:\nCPI4_2:\nCPI5_7:\nCPI8_1:\n\t.cell 904625751086426111047927909714404454142933102791518401696464687643217625088\nCPI0_23:\n\t.cell 904625697166532776746648320380374280103671760270919307471179981048634146816\nCPI0_24:\n\t.cell 49955707469362902507454157297736832118868343942642399513960811609542965143241\nCPI0_25:\n\t.cell 18446744073709551391\nCPI0_26:\nCPI4_5:\nCPI5_3:\nCPI7_1:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_27:\n\t.cell 11309588061646438093662687302255421419811724423900836950936401294474059186176\nCPI0_28:\n\t.cell 18446744073709551263\nCPI0_29:\n\t.cell 10141204801825835211973625643008\nCPI0_30:\n\t.cell 33157247328247392177372772381507990942257504435990715847000511638287595601920\nCPI0_31:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_32:\n\t.cell 7922816251426433759354395033600\nCPI0_33:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_34:\n\t.cell -52305948261162578668367882225327028569797882979485679342215860919519743330011\nCPI0_35:\n\t.cell 36307508360969855760600683141874677693495401447397650339409915876716639682560\nCPI0_36:\n\t.cell -15402802100530019096323380498944738953123845089667699673314898783681816316945\nCPI0_37:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_38:\n\t.cell 2535301200456458802993406410752\nCPI0_39:\nCPI2_1:\nCPI3_1:\nCPI4_9:\nCPI5_9:\n\t.cell 35408467139433450592217433187231851964531694900788300625387963629091585785856\nCPI0_40:\nCPI2_2:\nCPI3_2:\nCPI4_10:\nCPI5_10:\n\t.cell 2852213850513516153367582212096\nCPI0_41:\n\t.cell 31354931781638678601025225372054322825195139916995069304146873149637282234368\nCPI0_42:\nCPI2_0:\nCPI4_4:\nCPI5_1:\n\t.cell 18446744073709551615\nCPI0_43:\n\t.cell 18446744073709551616\nCPI0_44:\n\t.cell 18446744073709551487\nCPI0_45:\n\t.cell 29535183345145645464477851197593903596241110250713156662292127721300527415296\nCPI0_46:\nCPI3_0:\nCPI4_3:\nCPI5_0:\n\t.cell 18569430475105882587588266137607568536673111973893317399460219858819262702947\nCPI0_47:\nCPI4_0:\nCPI5_6:\n\t.cell -45892047197499416867505091379861151366373029554911521591129889233172042914037\nCPI4_6:\nCPI5_4:\n\t.cell -25048606950485655920330026002385074919936174626890048066671851289183138378810\nCPI4_7:\nCPI5_5:\n\t.cell -52716064676786082020591434766380454285206545917311776621925683646084292198385\nCPI4_8:\nCPI5_8:\n\t.cell 18446744073709551423\n",
          "bytecode": {
            "object": ""
          },
          "methodIdentifiers": {
            "DOMAIN_SEPARATOR()": "3644e515",
            "allowance(address,address)": "dd62ed3e",
            "approve(address,uint256)": "095ea7b3",
            "balanceOf(address)": "70a08231",
            "decimals()": "313ce567",
            "initialize(string,string,uint8)": "1624f6c6",
            "name()": "06fdde03",
            "nonces(address)": "7ecebe00",
            "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
            "symbol()": "95d89b41",
            "totalSupply()": "18160ddd",
            "transfer(address,uint256)": "a9059cbb",
            "transferFrom(address,address,uint256)": "23b872dd"
          }
        },
        "irOptimized": "/// @use-src 0:\"lib/forge-std/src/interfaces/IERC20.sol\", 1:\"lib/forge-std/src/mocks/MockERC20.sol\"\nobject \"MockERC20_672\" {\n    code {\n        {\n            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            let _2 := datasize(\"MockERC20_672_deployed\")\n            codecopy(_1, dataoffset(\"MockERC20_672_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 1:\"lib/forge-std/src/mocks/MockERC20.sol\"\n    object \"MockERC20_672_deployed\" {\n        code {\n            {\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                let _1 := memoryguard(0x80)\n                let _2 := 64\n                mstore(_2, _1)\n                let _3 := 4\n                if iszero(lt(calldatasize(), _3))\n                {\n                    switch shr(224, calldataload(0))\n                    case 0x06fdde03 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        finalize_allocation(_1, sub(abi_encode_string_storage(_1), _1))\n                        let memPos := mload(_2)\n                        return(memPos, sub(abi_encode_string(memPos, _1), memPos))\n                    }\n                    case 0x095ea7b3 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0 := abi_decode_address()\n                        let value := calldataload(36)\n                        mstore(0, /** @src 1:3167:3177  \"msg.sender\" */ caller())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(32, /** @src 1:3156:3166  \"_allowance\" */ 0x05)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _4 := keccak256(0, _2)\n                        let _5 := and(value0, sub(shl(160, 1), 1))\n                        mstore(0, _5)\n                        mstore(32, _4)\n                        sstore(keccak256(0, _2), value)\n                        /// @src 1:3212:3249  \"Approval(msg.sender, spender, amount)\"\n                        let _6 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(_2)\n                        mstore(_6, value)\n                        /// @src 1:3212:3249  \"Approval(msg.sender, spender, amount)\"\n                        log3(_6, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 32, /** @src 1:3212:3249  \"Approval(msg.sender, spender, amount)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, /** @src 1:3167:3177  \"msg.sender\" */ caller(), /** @src 1:3212:3249  \"Approval(msg.sender, spender, amount)\" */ _5)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let memPos_1 := mload(_2)\n                        mstore(memPos_1, 1)\n                        return(memPos_1, 32)\n                    }\n                    case 0x1624f6c6 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let offset := calldataload(_3)\n                        let _7 := 0xffffffffffffffff\n                        if gt(offset, _7) { revert(0, 0) }\n                        let value0_1 := abi_decode_string(add(_3, offset), calldatasize())\n                        let offset_1 := calldataload(36)\n                        if gt(offset_1, _7) { revert(0, 0) }\n                        let value1 := abi_decode_string(add(_3, offset_1), calldatasize())\n                        let value_1 := calldataload(68)\n                        let _8 := and(value_1, 0xff)\n                        if iszero(eq(value_1, _8)) { revert(0, 0) }\n                        if iszero(/** @src 1:2610:2622  \"!initialized\" */ iszero(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ and(sload(/** @src 1:2611:2622  \"initialized\" */ 0x09), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0xff)))\n                        {\n                            let memPtr := mload(_2)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _3), 32)\n                            mstore(add(memPtr, 36), 19)\n                            mstore(add(memPtr, 68), \"ALREADY_INITIALIZED\")\n                            revert(memPtr, 100)\n                        }\n                        let newLen := mload(value0_1)\n                        if gt(newLen, _7)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        let _9 := extract_byte_array_length(sload(0))\n                        let _10 := 31\n                        if gt(_9, _10)\n                        {\n                            mstore(0, 0)\n                            let _11 := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let deleteStart := add(_11, shr(5, add(newLen, _10)))\n                            if lt(newLen, 32) { deleteStart := _11 }\n                            let _12 := add(_11, shr(5, add(_9, _10)))\n                            let start := deleteStart\n                            for { } lt(start, _12) { start := add(start, 1) }\n                            { sstore(start, 0) }\n                        }\n                        let srcOffset := 0\n                        srcOffset := 32\n                        switch gt(newLen, _10)\n                        case 1 {\n                            let loopEnd := and(newLen, not(31))\n                            mstore(0, 0)\n                            let dstPtr := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                            let i := 0\n                            for { } lt(i, loopEnd) { i := add(i, 32) }\n                            {\n                                sstore(dstPtr, mload(add(value0_1, srcOffset)))\n                                dstPtr := add(dstPtr, 1)\n                                srcOffset := add(srcOffset, 32)\n                            }\n                            if lt(loopEnd, newLen)\n                            {\n                                let lastValue := mload(add(value0_1, srcOffset))\n                                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n                            }\n                            sstore(0, add(shl(1, newLen), 1))\n                        }\n                        default {\n                            let value_2 := 0\n                            if newLen\n                            {\n                                value_2 := mload(add(value0_1, srcOffset))\n                            }\n                            sstore(0, or(and(value_2, not(shr(shl(3, newLen), not(0)))), shl(1, newLen)))\n                        }\n                        let newLen_1 := mload(value1)\n                        if gt(newLen_1, _7)\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 36)\n                        }\n                        /// @src 1:2680:2697  \"_symbol = symbol_\"\n                        let _13 := 0x01\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _14 := extract_byte_array_length(sload(/** @src 1:2680:2697  \"_symbol = symbol_\" */ _13))\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        if gt(_14, _10)\n                        {\n                            mstore(0, /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13)\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            let _15 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let deleteStart_1 := add(_15, shr(5, add(newLen_1, _10)))\n                            if lt(newLen_1, 32) { deleteStart_1 := _15 }\n                            let _16 := add(_15, shr(5, add(_14, _10)))\n                            let start_1 := deleteStart_1\n                            for { }\n                            lt(start_1, _16)\n                            {\n                                start_1 := add(start_1, /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13)\n                            }\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            { sstore(start_1, 0) }\n                        }\n                        let srcOffset_1 := 0\n                        srcOffset_1 := 32\n                        switch gt(newLen_1, _10)\n                        case 1 {\n                            let loopEnd_1 := and(newLen_1, not(31))\n                            mstore(0, /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13)\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            let dstPtr_1 := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_1 := 0\n                            for { } lt(i_1, loopEnd_1) { i_1 := add(i_1, 32) }\n                            {\n                                sstore(dstPtr_1, mload(add(value1, srcOffset_1)))\n                                dstPtr_1 := add(dstPtr_1, /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13)\n                                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                                srcOffset_1 := add(srcOffset_1, 32)\n                            }\n                            if lt(loopEnd_1, newLen_1)\n                            {\n                                let lastValue_1 := mload(add(value1, srcOffset_1))\n                                sstore(dstPtr_1, and(lastValue_1, not(shr(and(shl(3, newLen_1), 248), not(0)))))\n                            }\n                            sstore(/** @src 1:2680:2697  \"_symbol = symbol_\" */ _13, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ add(shl(/** @src 1:2680:2697  \"_symbol = symbol_\" */ _13, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ newLen_1), /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13))\n                        }\n                        default /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        {\n                            let value_3 := 0\n                            if newLen_1\n                            {\n                                value_3 := mload(add(value1, srcOffset_1))\n                            }\n                            sstore(/** @src 1:2680:2697  \"_symbol = symbol_\" */ _13, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ or(and(value_3, not(shr(shl(3, newLen_1), not(0)))), shl(/** @src 1:2680:2697  \"_symbol = symbol_\" */ _13, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ newLen_1)))\n                        }\n                        let _17 := not(255)\n                        sstore(/** @src 1:2707:2728  \"_decimals = decimals_\" */ 0x02, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ or(and(sload(/** @src 1:2707:2728  \"_decimals = decimals_\" */ 0x02), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _17), _8))\n                        sstore(/** @src 1:2739:2772  \"INITIAL_CHAIN_ID = _pureChainId()\" */ 0x06, /** @src 1:7884:7937  \"assembly {...\" */ chainid())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        sstore(/** @src 1:2782:2833  \"INITIAL_DOMAIN_SEPARATOR = computeDomainSeparator()\" */ 0x07, /** @src 1:2809:2833  \"computeDomainSeparator()\" */ fun_computeDomainSeparator())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        sstore(/** @src 1:2611:2622  \"initialized\" */ 0x09, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ or(and(sload(/** @src 1:2611:2622  \"initialized\" */ 0x09), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _17), /** @src 1:2680:2697  \"_symbol = symbol_\" */ _13))\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0x18160ddd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let _18 := sload(/** @src 1:1403:1415  \"_totalSupply\" */ 0x03)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let memPos_2 := mload(_2)\n                        mstore(memPos_2, _18)\n                        return(memPos_2, 32)\n                    }\n                    case 0x23b872dd {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 96) { revert(0, 0) }\n                        let value0_2 := abi_decode_address()\n                        let value1_1 := abi_decode_address_8758()\n                        let value_4 := calldataload(68)\n                        let _19 := sub(shl(160, 1), 1)\n                        let _20 := and(value0_2, _19)\n                        mstore(0, _20)\n                        let _21 := 32\n                        mstore(_21, /** @src 1:3709:3719  \"_allowance\" */ 0x05)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let dataSlot := keccak256(0, _2)\n                        mstore(0, /** @src 1:3726:3736  \"msg.sender\" */ caller())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(_21, dataSlot)\n                        let _22 := sload(keccak256(0, _2))\n                        /// @src 1:3784:3864  \"if (allowed != ~uint256(0)) _allowance[from][msg.sender] = _sub(allowed, amount)\"\n                        if /** @src 1:3788:3810  \"allowed != ~uint256(0)\" */ iszero(eq(_22, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ not(0)))\n                        /// @src 1:3784:3864  \"if (allowed != ~uint256(0)) _allowance[from][msg.sender] = _sub(allowed, amount)\"\n                        {\n                            /// @src 1:3843:3864  \"_sub(allowed, amount)\"\n                            let _23 := fun_sub(_22, value_4)\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            mstore(0, _20)\n                            mstore(_21, /** @src 1:3709:3719  \"_allowance\" */ 0x05)\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            let _24 := keccak256(0, _2)\n                            mstore(0, /** @src 1:3726:3736  \"msg.sender\" */ caller())\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            mstore(_21, _24)\n                            sstore(keccak256(0, _2), _23)\n                        }\n                        mstore(0, _20)\n                        mstore(_21, _3)\n                        /// @src 1:3894:3924  \"_sub(_balanceOf[from], amount)\"\n                        let _25 := fun_sub(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(keccak256(0, _2)), /** @src 1:3894:3924  \"_sub(_balanceOf[from], amount)\" */ value_4)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(0, _20)\n                        mstore(_21, _3)\n                        sstore(keccak256(0, _2), _25)\n                        let _26 := and(value1_1, _19)\n                        mstore(0, _26)\n                        /// @src 1:3951:3979  \"_add(_balanceOf[to], amount)\"\n                        let _27 := fun_add(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(keccak256(0, _2)), /** @src 1:3951:3979  \"_add(_balanceOf[to], amount)\" */ value_4)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(0, _26)\n                        mstore(_21, _3)\n                        sstore(keccak256(0, _2), _27)\n                        /// @src 1:3995:4021  \"Transfer(from, to, amount)\"\n                        let _28 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(_2)\n                        mstore(_28, value_4)\n                        /// @src 1:3995:4021  \"Transfer(from, to, amount)\"\n                        log3(_28, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _21, /** @src 1:3995:4021  \"Transfer(from, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, _20, _26)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let memPos_3 := mload(_2)\n                        mstore(memPos_3, 1)\n                        return(memPos_3, _21)\n                    }\n                    case 0x313ce567 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let value_5 := and(sload(/** @src 1:953:962  \"_decimals\" */ 0x02), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0xff)\n                        let memPos_4 := mload(_2)\n                        mstore(memPos_4, value_5)\n                        return(memPos_4, 32)\n                    }\n                    case 0x3644e515 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let ret := fun_DOMAIN_SEPARATOR()\n                        let memPos_5 := mload(_2)\n                        mstore(memPos_5, ret)\n                        return(memPos_5, 32)\n                    }\n                    case 0x70a08231 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, _3)\n                        let _29 := sload(keccak256(0, _2))\n                        let memPos_6 := mload(_2)\n                        mstore(memPos_6, _29)\n                        return(memPos_6, 32)\n                    }\n                    case 0x7ecebe00 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(0, 0) }\n                        mstore(0, and(abi_decode_address(), sub(shl(160, 1), 1)))\n                        mstore(32, /** @src 1:1970:2011  \"mapping(address => uint256) public nonces\" */ 8)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _30 := sload(keccak256(0, _2))\n                        let memPos_7 := mload(_2)\n                        mstore(memPos_7, _30)\n                        return(memPos_7, 32)\n                    }\n                    case 0x95d89b41 {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 0) { revert(0, 0) }\n                        let memPtr_1 := mload(_2)\n                        let ret_1 := 0\n                        /// @src 1:857:864  \"_symbol\"\n                        let _31 := 0x01\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let slotValue := sload(/** @src 1:857:864  \"_symbol\" */ 0x01)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let length := extract_byte_array_length(slotValue)\n                        mstore(memPtr_1, length)\n                        let _32 := 0x20\n                        switch and(slotValue, /** @src 1:857:864  \"_symbol\" */ 0x01)\n                        case /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0 {\n                            mstore(add(memPtr_1, 0x20), and(slotValue, not(255)))\n                            ret_1 := add(add(memPtr_1, shl(5, iszero(iszero(length)))), 0x20)\n                        }\n                        case 1 {\n                            mstore(0, /** @src 1:857:864  \"_symbol\" */ 0x01)\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            let dataPos := 80084422859880547211683076133703299733277748156566366325829078699459944778998\n                            let i_2 := 0\n                            for { } lt(i_2, length) { i_2 := add(i_2, _32) }\n                            {\n                                mstore(add(add(memPtr_1, i_2), _32), sload(dataPos))\n                                dataPos := add(dataPos, /** @src 1:857:864  \"_symbol\" */ _31)\n                            }\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            ret_1 := add(add(memPtr_1, i_2), 0x20)\n                        }\n                        finalize_allocation(memPtr_1, sub(ret_1, memPtr_1))\n                        let memPos_8 := mload(_2)\n                        return(memPos_8, sub(abi_encode_string(memPos_8, memPtr_1), memPos_8))\n                    }\n                    case 0xa9059cbb {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_3 := abi_decode_address()\n                        let value_6 := calldataload(36)\n                        mstore(0, /** @src 1:3420:3430  \"msg.sender\" */ caller())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(32, _3)\n                        /// @src 1:3404:3440  \"_sub(_balanceOf[msg.sender], amount)\"\n                        let _33 := fun_sub(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(keccak256(0, _2)), /** @src 1:3404:3440  \"_sub(_balanceOf[msg.sender], amount)\" */ value_6)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(0, /** @src 1:3420:3430  \"msg.sender\" */ caller())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(32, _3)\n                        sstore(keccak256(0, _2), _33)\n                        let _34 := and(value0_3, sub(shl(160, 1), 1))\n                        mstore(0, _34)\n                        /// @src 1:3467:3495  \"_add(_balanceOf[to], amount)\"\n                        let _35 := fun_add(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(keccak256(0, _2)), /** @src 1:3467:3495  \"_add(_balanceOf[to], amount)\" */ value_6)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(0, _34)\n                        mstore(32, _3)\n                        sstore(keccak256(0, _2), _35)\n                        /// @src 1:3511:3543  \"Transfer(msg.sender, to, amount)\"\n                        let _36 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(_2)\n                        mstore(_36, value_6)\n                        /// @src 1:3511:3543  \"Transfer(msg.sender, to, amount)\"\n                        log3(_36, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 32, /** @src 1:3511:3543  \"Transfer(msg.sender, to, amount)\" */ 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef, /** @src 1:3420:3430  \"msg.sender\" */ caller(), /** @src 1:3511:3543  \"Transfer(msg.sender, to, amount)\" */ _34)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let memPos_9 := mload(_2)\n                        mstore(memPos_9, 1)\n                        return(memPos_9, 32)\n                    }\n                    case 0xd505accf {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), 224) { revert(0, 0) }\n                        let value0_4 := abi_decode_address()\n                        let value1_2 := abi_decode_address_8758()\n                        let value_7 := calldataload(68)\n                        let value_8 := calldataload(100)\n                        let value_9 := calldataload(132)\n                        let _37 := and(value_9, 0xff)\n                        if iszero(eq(value_9, _37)) { revert(0, 0) }\n                        if /** @src 1:4404:4431  \"deadline >= block.timestamp\" */ lt(value_8, /** @src 1:4416:4431  \"block.timestamp\" */ timestamp())\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        {\n                            let memPtr_2 := mload(_2)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _3), 32)\n                            mstore(add(memPtr_2, 36), 23)\n                            mstore(add(memPtr_2, 68), \"PERMIT_DEADLINE_EXPIRED\")\n                            revert(memPtr_2, 100)\n                        }\n                        /// @src 1:4617:4635  \"DOMAIN_SEPARATOR()\"\n                        let expr := fun_DOMAIN_SEPARATOR()\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _38 := sub(shl(160, 1), 1)\n                        let _39 := and(value0_4, _38)\n                        mstore(0, _39)\n                        let _40 := 32\n                        mstore(_40, /** @src 1:5026:5032  \"nonces\" */ 0x08)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let dataSlot_1 := keccak256(0, _2)\n                        let _41 := sload(/** @src 1:5026:5041  \"nonces[owner]++\" */ dataSlot_1)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        if eq(_41, not(0))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x11)\n                            revert(0, 36)\n                        }\n                        sstore(dataSlot_1, add(_41, 1))\n                        /// @src 1:4692:5105  \"abi.encode(...\"\n                        let expr_mpos := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(_2)\n                        /// @src 1:4692:5105  \"abi.encode(...\"\n                        let _42 := add(expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _40)\n                        mstore(_42, /** @src 1:4732:4889  \"keccak256(...\" */ 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(add(/** @src 1:4692:5105  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _2), _39)\n                        let _43 := and(value1_2, _38)\n                        mstore(add(/** @src 1:4692:5105  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 96), _43)\n                        mstore(add(/** @src 1:4692:5105  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 128), value_7)\n                        mstore(add(/** @src 1:4692:5105  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 160), _41)\n                        mstore(add(/** @src 1:4692:5105  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 192), value_8)\n                        /// @src 1:4692:5105  \"abi.encode(...\"\n                        mstore(expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 192)\n                        let newFreePtr := add(expr_mpos, 224)\n                        let _44 := 0xffffffffffffffff\n                        if or(gt(newFreePtr, _44), lt(newFreePtr, expr_mpos))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(_2, newFreePtr)\n                        /// @src 1:4657:5127  \"keccak256(...\"\n                        let expr_1 := keccak256(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _42, mload(/** @src 1:4657:5127  \"keccak256(...\" */ expr_mpos))\n                        /// @src 1:4547:5145  \"abi.encodePacked(...\"\n                        let _45 := add(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ expr_mpos, /** @src 1:4547:5145  \"abi.encodePacked(...\" */ 256)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(_45, shl(240, 6401))\n                        mstore(add(expr_mpos, 258), expr)\n                        mstore(add(expr_mpos, 290), expr_1)\n                        /// @src 1:4547:5145  \"abi.encodePacked(...\"\n                        mstore(newFreePtr, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 66)\n                        let newFreePtr_1 := add(expr_mpos, 352)\n                        if or(gt(newFreePtr_1, _44), lt(newFreePtr_1, newFreePtr))\n                        {\n                            mstore(0, shl(224, 0x4e487b71))\n                            mstore(_3, 0x41)\n                            revert(0, 0x24)\n                        }\n                        mstore(_2, newFreePtr_1)\n                        mstore(newFreePtr_1, /** @src 1:4520:5159  \"keccak256(...\" */ keccak256(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _45, mload(/** @src 1:4520:5159  \"keccak256(...\" */ newFreePtr)))\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        mstore(add(expr_mpos, 384), _37)\n                        mstore(add(expr_mpos, 416), calldataload(164))\n                        mstore(add(expr_mpos, 448), calldataload(196))\n                        /// @src 1:4497:5214  \"ecrecover(...\"\n                        mstore(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0, 0)\n                        /// @src 1:4497:5214  \"ecrecover(...\"\n                        if iszero(staticcall(gas(), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 1, /** @src 1:4497:5214  \"ecrecover(...\" */ newFreePtr_1, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 128, 0, _40))\n                        /// @src 1:4497:5214  \"ecrecover(...\"\n                        {\n                            /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                            let pos := mload(_2)\n                            returndatacopy(pos, 0, returndatasize())\n                            revert(pos, returndatasize())\n                        }\n                        /// @src 1:5233:5263  \"recoveredAddress != address(0)\"\n                        let _46 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ and(/** @src 1:4497:5214  \"ecrecover(...\" */ mload(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0), _38)\n                        /// @src 1:5233:5292  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        let expr_2 := /** @src 1:5233:5263  \"recoveredAddress != address(0)\" */ iszero(iszero(_46))\n                        /// @src 1:5233:5292  \"recoveredAddress != address(0) && recoveredAddress == owner\"\n                        if expr_2\n                        {\n                            expr_2 := /** @src 1:5267:5292  \"recoveredAddress == owner\" */ eq(_46, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _39)\n                        }\n                        if iszero(expr_2)\n                        {\n                            let memPtr_3 := mload(_2)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _3), _40)\n                            mstore(add(memPtr_3, 36), 14)\n                            mstore(add(memPtr_3, 68), \"INVALID_SIGNER\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(0, _46)\n                        mstore(_40, /** @src 1:5322:5332  \"_allowance\" */ 0x05)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _47 := keccak256(0, _2)\n                        mstore(0, _43)\n                        mstore(_40, _47)\n                        sstore(keccak256(0, _2), value_7)\n                        /// @src 1:5383:5414  \"Approval(owner, spender, value)\"\n                        let _48 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(_2)\n                        mstore(_48, value_7)\n                        /// @src 1:5383:5414  \"Approval(owner, spender, value)\"\n                        log3(_48, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _40, /** @src 1:5383:5414  \"Approval(owner, spender, value)\" */ 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925, _39, _43)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        return(0, 0)\n                    }\n                    case 0xdd62ed3e {\n                        if callvalue() { revert(0, 0) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(0, 0) }\n                        let value0_5 := abi_decode_address()\n                        let value1_3 := abi_decode_address_8758()\n                        let _49 := sub(shl(160, 1), 1)\n                        mstore(0, and(value0_5, _49))\n                        mstore(32, /** @src 1:1659:1669  \"_allowance\" */ 0x05)\n                        /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                        let _50 := keccak256(0, _2)\n                        mstore(0, and(value1_3, _49))\n                        mstore(32, _50)\n                        let _51 := sload(keccak256(0, _2))\n                        let memPos_10 := mload(_2)\n                        mstore(memPos_10, _51)\n                        return(memPos_10, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function abi_encode_string(headStart, value0) -> tail\n            {\n                let _1 := 32\n                mstore(headStart, 32)\n                let length := mload(value0)\n                mstore(add(headStart, 32), length)\n                let i := 0\n                for { } lt(i, length) { i := add(i, _1) }\n                {\n                    mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n                }\n                mstore(add(add(headStart, length), 64), 0)\n                tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n            }\n            function abi_decode_address() -> value\n            {\n                value := calldataload(4)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function abi_decode_address_8758() -> value\n            {\n                value := calldataload(36)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n            }\n            function finalize_allocation(memPtr, size)\n            {\n                let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n            }\n            function abi_decode_string(offset, end) -> array\n            {\n                if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n                let _1 := calldataload(offset)\n                if gt(_1, 0xffffffffffffffff)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0x24)\n                }\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n                mstore(memPtr, _1)\n                if gt(add(add(offset, _1), 0x20), end)\n                {\n                    revert(/** @src -1:-1:-1 */ 0, 0)\n                }\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n                mstore(add(add(memPtr, _1), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                array := memPtr\n            }\n            function extract_byte_array_length(data) -> length\n            {\n                length := shr(1, data)\n                let outOfPlaceEncoding := and(data, 1)\n                if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n                if eq(outOfPlaceEncoding, lt(length, 32))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x22)\n                    revert(0, 0x24)\n                }\n            }\n            function abi_encode_string_storage(pos) -> ret\n            {\n                let slotValue := sload(0)\n                let length := extract_byte_array_length(slotValue)\n                mstore(pos, length)\n                let _1 := 0x20\n                let _2 := 1\n                switch and(slotValue, 1)\n                case 0 {\n                    mstore(add(pos, 0x20), and(slotValue, not(255)))\n                    ret := add(add(pos, shl(5, iszero(iszero(length)))), 0x20)\n                }\n                case 1 {\n                    mstore(0, 0)\n                    let dataPos := 18569430475105882587588266137607568536673111973893317399460219858819262702947\n                    let i := 0\n                    for { } lt(i, length) { i := add(i, _1) }\n                    {\n                        mstore(add(add(pos, i), _1), sload(dataPos))\n                        dataPos := add(dataPos, _2)\n                    }\n                    ret := add(add(pos, i), 0x20)\n                }\n            }\n            /// @ast-id 486 @src 1:5427:5605  \"function DOMAIN_SEPARATOR() public view virtual returns (bytes32) {...\"\n            function fun_DOMAIN_SEPARATOR() -> var\n            {\n                /// @src 1:5510:5544  \"_pureChainId() == INITIAL_CHAIN_ID\"\n                let expr := eq(/** @src 1:7884:7937  \"assembly {...\" */ chainid(), /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(/** @src 1:5528:5544  \"INITIAL_CHAIN_ID\" */ 0x06))\n                /// @src 1:5510:5598  \"_pureChainId() == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator()\"\n                let expr_1 := /** @src -1:-1:-1 */ 0\n                /// @src 1:5510:5598  \"_pureChainId() == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator()\"\n                switch expr\n                case 0 {\n                    expr_1 := /** @src 1:5574:5598  \"computeDomainSeparator()\" */ fun_computeDomainSeparator()\n                }\n                default /// @src 1:5510:5598  \"_pureChainId() == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator()\"\n                {\n                    expr_1 := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ sload(/** @src 1:5547:5571  \"INITIAL_DOMAIN_SEPARATOR\" */ 0x07)\n                }\n                /// @src 1:5503:5598  \"return _pureChainId() == INITIAL_CHAIN_ID ? INITIAL_DOMAIN_SEPARATOR : computeDomainSeparator()\"\n                var := expr_1\n            }\n            /// @ast-id 516 @src 1:5611:6015  \"function computeDomainSeparator() internal view virtual returns (bytes32) {...\"\n            function fun_computeDomainSeparator() -> var\n            {\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                let memPtr := mload(64)\n                finalize_allocation(memPtr, sub(abi_encode_string_storage(memPtr), memPtr))\n                /// @src 1:5866:5889  \"keccak256(bytes(_name))\"\n                let expr := keccak256(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ add(/** @src 1:5866:5889  \"keccak256(bytes(_name))\" */ memPtr, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0x20), mload(/** @src 1:5866:5889  \"keccak256(bytes(_name))\" */ memPtr))\n                /// @src 1:5725:5998  \"abi.encode(...\"\n                let expr_mpos := /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ mload(64)\n                /// @src 1:5725:5998  \"abi.encode(...\"\n                let _1 := add(expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0x20)\n                mstore(_1, /** @src 1:5753:5848  \"keccak256(\\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\")\" */ 0x8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f)\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                mstore(add(/** @src 1:5725:5998  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 64), expr)\n                mstore(add(/** @src 1:5725:5998  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 96), /** @src 1:5907:5921  \"keccak256(\\\"1\\\")\" */ 0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6)\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                mstore(add(/** @src 1:5725:5998  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 128), /** @src 1:7884:7937  \"assembly {...\" */ chainid())\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                mstore(add(/** @src 1:5725:5998  \"abi.encode(...\" */ expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 160), /** @src 1:5979:5983  \"this\" */ address())\n                /// @src 1:5725:5998  \"abi.encode(...\"\n                mstore(expr_mpos, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 160)\n                let newFreePtr := add(expr_mpos, 192)\n                if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, expr_mpos))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x41)\n                    revert(0, 0x24)\n                }\n                mstore(64, newFreePtr)\n                /// @src 1:5695:6008  \"return keccak256(...\"\n                var := /** @src 1:5702:6008  \"keccak256(...\" */ keccak256(/** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ _1, mload(/** @src 1:5702:6008  \"keccak256(...\" */ expr_mpos))\n            }\n            /// @ast-id 632 @src 1:7038:7192  \"function _sub(uint256 a, uint256 b) internal pure returns (uint256) {...\"\n            function fun_sub(var_a, var_b) -> var\n            {\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                if /** @src 1:7124:7130  \"a >= b\" */ lt(var_a, var_b)\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"ERC20: subtraction underflow\")\n                    revert(memPtr, 100)\n                }\n                let diff := sub(var_a, var_b)\n                if gt(diff, var_a)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0x24)\n                }\n                /// @src 1:7173:7185  \"return a - b\"\n                var := diff\n            }\n            /// @ast-id 611 @src 1:6859:7032  \"function _add(uint256 a, uint256 b) internal pure returns (uint256) {...\"\n            function fun_add(var_a, var_b) -> var\n            {\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                let sum := add(var_a, var_b)\n                if gt(var_a, sum)\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 1:369:8319  \"contract MockERC20 is IERC20 {...\" */ 0x24)\n                }\n                if /** @src 1:6972:6978  \"c >= a\" */ lt(sum, var_a)\n                /// @src 1:369:8319  \"contract MockERC20 is IERC20 {...\"\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"ERC20: addition overflow\")\n                    revert(memPtr, 100)\n                }\n                /// @src 1:7017:7025  \"return c\"\n                var := sum\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220cafa02686923cf045263c1242752a50041557fb4932b1df99f958c9f8798665164736f6c63430008180033\"\n    }\n}\n",
        "hash": "010001d75a6b794d9a63b05a7cf74fc0569ddbed9128e1f49774f69521f5e17f",
        "factoryDependencies": {}
      }
    }
  },
  "sources": {
    "lib/forge-std/src/interfaces/IERC20.sol": {
      "id": 0,
      "ast": {
        "absolutePath": "lib/forge-std/src/interfaces/IERC20.sol",
        "exportedSymbols": {
          "IERC20": [
            95
          ]
        },
        "id": 96,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 1,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:24:0"
          },
          {
            "abstract": false,
            "baseContracts": [],
            "canonicalName": "IERC20",
            "contractDependencies": [],
            "contractKind": "interface",
            "documentation": {
              "id": 2,
              "nodeType": "StructuredDocumentation",
              "src": "58:137:0",
              "text": "@dev Interface of the ERC20 standard as defined in the EIP.\n @dev This includes the optional name, symbol, and decimals metadata."
            },
            "fullyImplemented": false,
            "id": 95,
            "linearizedBaseContracts": [
              95
            ],
            "name": "IERC20",
            "nameLocation": "205:6:0",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "anonymous": false,
                "documentation": {
                  "id": 3,
                  "nodeType": "StructuredDocumentation",
                  "src": "218:91:0",
                  "text": "@dev Emitted when `value` tokens are moved from one account (`from`) to another (`to`)."
                },
                "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                "id": 11,
                "name": "Transfer",
                "nameLocation": "320:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 10,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 5,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "345:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "329:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 4,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "329:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 7,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "367:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "351:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "379:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 11,
                      "src": "371:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "371:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "328:57:0"
                },
                "src": "314:72:0"
              },
              {
                "anonymous": false,
                "documentation": {
                  "id": 12,
                  "nodeType": "StructuredDocumentation",
                  "src": "392:117:0",
                  "text": "@dev Emitted when the allowance of a `spender` for an `owner` is set, where `value`\n is the new allowance."
                },
                "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                "id": 20,
                "name": "Approval",
                "nameLocation": "520:8:0",
                "nodeType": "EventDefinition",
                "parameters": {
                  "id": 19,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 14,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "545:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "529:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 13,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "529:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 16,
                      "indexed": true,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "568:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "552:23:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 15,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "552:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 18,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "585:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 20,
                      "src": "577:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 17,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "577:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "528:63:0"
                },
                "src": "514:78:0"
              },
              {
                "documentation": {
                  "id": 21,
                  "nodeType": "StructuredDocumentation",
                  "src": "598:54:0",
                  "text": "@notice Returns the amount of tokens in existence."
                },
                "functionSelector": "18160ddd",
                "id": 26,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "666:11:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 22,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "677:2:0"
                },
                "returnParameters": {
                  "id": 25,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 24,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 26,
                      "src": "703:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "703:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "702:9:0"
                },
                "scope": 95,
                "src": "657:55:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 27,
                  "nodeType": "StructuredDocumentation",
                  "src": "718:60:0",
                  "text": "@notice Returns the amount of tokens owned by `account`."
                },
                "functionSelector": "70a08231",
                "id": 34,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "792:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 30,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 29,
                      "mutability": "mutable",
                      "name": "account",
                      "nameLocation": "810:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "802:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 28,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "802:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "801:17:0"
                },
                "returnParameters": {
                  "id": 33,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 32,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 34,
                      "src": "842:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "842:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "841:9:0"
                },
                "scope": 95,
                "src": "783:68:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 35,
                  "nodeType": "StructuredDocumentation",
                  "src": "857:68:0",
                  "text": "@notice Moves `amount` tokens from the caller's account to `to`."
                },
                "functionSelector": "a9059cbb",
                "id": 44,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "939:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 40,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "956:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "948:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "948:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "968:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "960:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "960:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "947:28:0"
                },
                "returnParameters": {
                  "id": 43,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 42,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 44,
                      "src": "994:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 41,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "994:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "993:6:0"
                },
                "scope": 95,
                "src": "930:70:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 45,
                  "nodeType": "StructuredDocumentation",
                  "src": "1006:114:0",
                  "text": "@notice Returns the remaining number of tokens that `spender` is allowed\n to spend on behalf of `owner`"
                },
                "functionSelector": "dd62ed3e",
                "id": 54,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "1134:9:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 50,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 47,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1152:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1144:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 46,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1144:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 49,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1167:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1159:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 48,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1159:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1143:32:0"
                },
                "returnParameters": {
                  "id": 53,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 52,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 54,
                      "src": "1199:7:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1199:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1198:9:0"
                },
                "scope": 95,
                "src": "1125:83:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 55,
                  "nodeType": "StructuredDocumentation",
                  "src": "1214:193:0",
                  "text": "@notice Sets `amount` as the allowance of `spender` over the caller's tokens.\n @dev Be aware of front-running risks: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729"
                },
                "functionSelector": "095ea7b3",
                "id": 64,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "1421:7:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 60,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 57,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1437:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "1429:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 56,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1429:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 59,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1454:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "1446:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 58,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1446:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1428:33:0"
                },
                "returnParameters": {
                  "id": 63,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 62,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 64,
                      "src": "1480:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 61,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1480:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1479:6:0"
                },
                "scope": 95,
                "src": "1412:74:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 65,
                  "nodeType": "StructuredDocumentation",
                  "src": "1492:147:0",
                  "text": "@notice Moves `amount` tokens from `from` to `to` using the allowance mechanism.\n `amount` is then deducted from the caller's allowance."
                },
                "functionSelector": "23b872dd",
                "id": 76,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "1653:12:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 72,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "1674:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 76,
                      "src": "1666:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1666:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 69,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "1688:2:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 76,
                      "src": "1680:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 68,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1680:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 71,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1700:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 76,
                      "src": "1692:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 70,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1665:42:0"
                },
                "returnParameters": {
                  "id": 75,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 74,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 76,
                      "src": "1726:4:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 73,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1726:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1725:6:0"
                },
                "scope": 95,
                "src": "1644:88:0",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 77,
                  "nodeType": "StructuredDocumentation",
                  "src": "1738:42:0",
                  "text": "@notice Returns the name of the token."
                },
                "functionSelector": "06fdde03",
                "id": 82,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "1794:4:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 78,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1798:2:0"
                },
                "returnParameters": {
                  "id": 81,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 80,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 82,
                      "src": "1824:13:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 79,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1824:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1823:15:0"
                },
                "scope": 95,
                "src": "1785:54:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 83,
                  "nodeType": "StructuredDocumentation",
                  "src": "1845:44:0",
                  "text": "@notice Returns the symbol of the token."
                },
                "functionSelector": "95d89b41",
                "id": 88,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "1903:6:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 84,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1909:2:0"
                },
                "returnParameters": {
                  "id": 87,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 88,
                      "src": "1935:13:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1935:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1934:15:0"
                },
                "scope": 95,
                "src": "1894:56:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "documentation": {
                  "id": 89,
                  "nodeType": "StructuredDocumentation",
                  "src": "1956:53:0",
                  "text": "@notice Returns the decimals places of the token."
                },
                "functionSelector": "313ce567",
                "id": 94,
                "implemented": false,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "2023:8:0",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 90,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2031:2:0"
                },
                "returnParameters": {
                  "id": 93,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 94,
                      "src": "2057:5:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2057:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2056:7:0"
                },
                "scope": 95,
                "src": "2014:50:0",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              }
            ],
            "scope": 96,
            "src": "195:1871:0",
            "usedErrors": [],
            "usedEvents": [
              11,
              20
            ]
          }
        ],
        "src": "32:2035:0"
      }
    },
    "lib/forge-std/src/mocks/MockERC20.sol": {
      "id": 1,
      "ast": {
        "absolutePath": "lib/forge-std/src/mocks/MockERC20.sol",
        "exportedSymbols": {
          "IERC20": [
            95
          ],
          "MockERC20": [
            672
          ]
        },
        "id": 673,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
          {
            "id": 97,
            "literals": [
              "solidity",
              ">=",
              "0.6",
              ".2",
              "<",
              "0.9",
              ".0"
            ],
            "nodeType": "PragmaDirective",
            "src": "32:31:1"
          },
          {
            "absolutePath": "lib/forge-std/src/interfaces/IERC20.sol",
            "file": "../interfaces/IERC20.sol",
            "id": 99,
            "nameLocation": "-1:-1:-1",
            "nodeType": "ImportDirective",
            "scope": 673,
            "sourceUnit": 96,
            "src": "65:48:1",
            "symbolAliases": [
              {
                "foreign": {
                  "id": 98,
                  "name": "IERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 95,
                  "src": "73:6:1",
                  "typeDescriptions": {}
                },
                "nameLocation": "-1:-1:-1"
              }
            ],
            "unitAlias": ""
          },
          {
            "abstract": false,
            "baseContracts": [
              {
                "baseName": {
                  "id": 101,
                  "name": "IERC20",
                  "nameLocations": [
                    "391:6:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 95,
                  "src": "391:6:1"
                },
                "id": 102,
                "nodeType": "InheritanceSpecifier",
                "src": "391:6:1"
              }
            ],
            "canonicalName": "MockERC20",
            "contractDependencies": [],
            "contractKind": "contract",
            "documentation": {
              "id": 100,
              "nodeType": "StructuredDocumentation",
              "src": "115:254:1",
              "text": "@notice This is a mock contract of the ERC20 standard for testing purposes only, it SHOULD NOT be used in production.\n @dev Forked from: https://github.com/transmissions11/solmate/blob/0384dbaaa4fcb5715738a9254a7c0a4cb62cf458/src/tokens/ERC20.sol"
            },
            "fullyImplemented": true,
            "id": 672,
            "internalFunctionIDs": {
              "644": 1
            },
            "linearizedBaseContracts": [
              672,
              95
            ],
            "name": "MockERC20",
            "nameLocation": "378:9:1",
            "nodeType": "ContractDefinition",
            "nodes": [
              {
                "constant": false,
                "id": 104,
                "mutability": "mutable",
                "name": "_name",
                "nameLocation": "604:5:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "588:21:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 103,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "588:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 106,
                "mutability": "mutable",
                "name": "_symbol",
                "nameLocation": "632:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "616:23:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 105,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 108,
                "mutability": "mutable",
                "name": "_decimals",
                "nameLocation": "661:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "646:24:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 107,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "646:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  82
                ],
                "body": {
                  "id": 116,
                  "nodeType": "Block",
                  "src": "740:29:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 114,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104,
                        "src": "757:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 113,
                      "id": 115,
                      "nodeType": "Return",
                      "src": "750:12:1"
                    }
                  ]
                },
                "functionSelector": "06fdde03",
                "id": 117,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "name",
                "nameLocation": "686:4:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 110,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "707:8:1"
                },
                "parameters": {
                  "id": 109,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "690:2:1"
                },
                "returnParameters": {
                  "id": 113,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 112,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 117,
                      "src": "725:13:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 111,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "725:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "724:15:1"
                },
                "scope": 672,
                "src": "677:92:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  88
                ],
                "body": {
                  "id": 125,
                  "nodeType": "Block",
                  "src": "840:31:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 123,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 106,
                        "src": "857:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "functionReturnParameters": 122,
                      "id": 124,
                      "nodeType": "Return",
                      "src": "850:14:1"
                    }
                  ]
                },
                "functionSelector": "95d89b41",
                "id": 126,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "symbol",
                "nameLocation": "784:6:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 119,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "807:8:1"
                },
                "parameters": {
                  "id": 118,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "790:2:1"
                },
                "returnParameters": {
                  "id": 122,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 121,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 126,
                      "src": "825:13:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 120,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "825:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "824:15:1"
                },
                "scope": 672,
                "src": "775:96:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  94
                ],
                "body": {
                  "id": 134,
                  "nodeType": "Block",
                  "src": "936:33:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 132,
                        "name": "_decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 108,
                        "src": "953:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "functionReturnParameters": 131,
                      "id": 133,
                      "nodeType": "Return",
                      "src": "946:16:1"
                    }
                  ]
                },
                "functionSelector": "313ce567",
                "id": 135,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "decimals",
                "nameLocation": "886:8:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 128,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "911:8:1"
                },
                "parameters": {
                  "id": 127,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "894:2:1"
                },
                "returnParameters": {
                  "id": 131,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 130,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 135,
                      "src": "929:5:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 129,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "929:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "928:7:1"
                },
                "scope": 672,
                "src": "877:92:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "constant": false,
                "id": 137,
                "mutability": "mutable",
                "name": "_totalSupply",
                "nameLocation": "1175:12:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1158:29:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1158:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 141,
                "mutability": "mutable",
                "name": "_balanceOf",
                "nameLocation": "1231:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1194:47:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 140,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1194:27:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 147,
                "mutability": "mutable",
                "name": "_allowance",
                "nameLocation": "1305:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1248:67:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                  "typeString": "mapping(address => mapping(address => uint256))"
                },
                "typeName": {
                  "id": 146,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1248:47:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 145,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 143,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1275:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1267:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 144,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1286:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  }
                },
                "visibility": "internal"
              },
              {
                "baseFunctions": [
                  26
                ],
                "body": {
                  "id": 155,
                  "nodeType": "Block",
                  "src": "1386:36:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 153,
                        "name": "_totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "1403:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 152,
                      "id": 154,
                      "nodeType": "Return",
                      "src": "1396:19:1"
                    }
                  ]
                },
                "functionSelector": "18160ddd",
                "id": 156,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "totalSupply",
                "nameLocation": "1331:11:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 149,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1359:8:1"
                },
                "parameters": {
                  "id": 148,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "1342:2:1"
                },
                "returnParameters": {
                  "id": 152,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 151,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 156,
                      "src": "1377:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1377:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1376:9:1"
                },
                "scope": 672,
                "src": "1322:100:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  34
                ],
                "body": {
                  "id": 168,
                  "nodeType": "Block",
                  "src": "1503:41:1",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "id": 164,
                          "name": "_balanceOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 141,
                          "src": "1520:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 166,
                        "indexExpression": {
                          "id": 165,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 158,
                          "src": "1531:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1520:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 163,
                      "id": 167,
                      "nodeType": "Return",
                      "src": "1513:24:1"
                    }
                  ]
                },
                "functionSelector": "70a08231",
                "id": 169,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "balanceOf",
                "nameLocation": "1437:9:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 160,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1476:8:1"
                },
                "parameters": {
                  "id": 159,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 158,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1455:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "1447:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 157,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1447:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1446:15:1"
                },
                "returnParameters": {
                  "id": 163,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 162,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "1494:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 161,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1494:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1493:9:1"
                },
                "scope": 672,
                "src": "1428:116:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "baseFunctions": [
                  54
                ],
                "body": {
                  "id": 185,
                  "nodeType": "Block",
                  "src": "1642:50:1",
                  "statements": [
                    {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 179,
                            "name": "_allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "1659:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 181,
                          "indexExpression": {
                            "id": 180,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "1670:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1659:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 173,
                          "src": "1677:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1659:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 178,
                      "id": 184,
                      "nodeType": "Return",
                      "src": "1652:33:1"
                    }
                  ]
                },
                "functionSelector": "dd62ed3e",
                "id": 186,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "allowance",
                "nameLocation": "1559:9:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 175,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "1615:8:1"
                },
                "parameters": {
                  "id": 174,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 171,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "1577:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 186,
                      "src": "1569:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 170,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1569:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 173,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "1592:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 186,
                      "src": "1584:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 172,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1584:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1568:32:1"
                },
                "returnParameters": {
                  "id": 178,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 177,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 186,
                      "src": "1633:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 176,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1633:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "1632:9:1"
                },
                "scope": 672,
                "src": "1550:142:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "external"
              },
              {
                "constant": false,
                "id": 188,
                "mutability": "mutable",
                "name": "INITIAL_CHAIN_ID",
                "nameLocation": "1899:16:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1882:33:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 187,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1882:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 190,
                "mutability": "mutable",
                "name": "INITIAL_DOMAIN_SEPARATOR",
                "nameLocation": "1939:24:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1922:41:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 189,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1922:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "functionSelector": "7ecebe00",
                "id": 194,
                "mutability": "mutable",
                "name": "nonces",
                "nameLocation": "2005:6:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "1970:41:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "typeName": {
                  "id": 193,
                  "keyName": "",
                  "keyNameLocation": "-1:-1:-1",
                  "keyType": {
                    "id": 191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "Mapping",
                  "src": "1970:27:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "valueName": "",
                  "valueNameLocation": "-1:-1:-1",
                  "valueType": {
                    "id": 192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1989:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                "visibility": "public"
              },
              {
                "constant": false,
                "documentation": {
                  "id": 195,
                  "nodeType": "StructuredDocumentation",
                  "src": "2199:67:1",
                  "text": "@dev A bool to track whether the contract has been initialized."
                },
                "id": 197,
                "mutability": "mutable",
                "name": "initialized",
                "nameLocation": "2284:11:1",
                "nodeType": "VariableDeclaration",
                "scope": 672,
                "src": "2271:24:1",
                "stateVariable": true,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 196,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2271:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "private"
              },
              {
                "body": {
                  "id": 239,
                  "nodeType": "Block",
                  "src": "2592:277:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "2610:12:1",
                            "subExpression": {
                              "id": 208,
                              "name": "initialized",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 197,
                              "src": "2611:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "414c52454144595f494e495449414c495a4544",
                            "id": 210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2624:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            },
                            "value": "ALREADY_INITIALIZED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_241395e6b20092ec3fd5dfc22ea70fc2615c08854b7fd10fb3028d965cf738f3",
                              "typeString": "literal_string \"ALREADY_INITIALIZED\""
                            }
                          ],
                          "id": 207,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "2602:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2602:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 212,
                      "nodeType": "ExpressionStatement",
                      "src": "2602:44:1"
                    },
                    {
                      "expression": {
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 213,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104,
                          "src": "2657:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 214,
                          "name": "name_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 200,
                          "src": "2665:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2657:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 216,
                      "nodeType": "ExpressionStatement",
                      "src": "2657:13:1"
                    },
                    {
                      "expression": {
                        "id": 219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 217,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 106,
                          "src": "2680:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 218,
                          "name": "symbol_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 202,
                          "src": "2690:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "src": "2680:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      "id": 220,
                      "nodeType": "ExpressionStatement",
                      "src": "2680:17:1"
                    },
                    {
                      "expression": {
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 221,
                          "name": "_decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 108,
                          "src": "2707:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 222,
                          "name": "decimals_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "2719:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "2707:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "id": 224,
                      "nodeType": "ExpressionStatement",
                      "src": "2707:21:1"
                    },
                    {
                      "expression": {
                        "id": 228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 225,
                          "name": "INITIAL_CHAIN_ID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 188,
                          "src": "2739:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 226,
                            "name": "_pureChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "2758:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2758:14:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2739:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 229,
                      "nodeType": "ExpressionStatement",
                      "src": "2739:33:1"
                    },
                    {
                      "expression": {
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 230,
                          "name": "INITIAL_DOMAIN_SEPARATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "2782:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 231,
                            "name": "computeDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "2809:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2809:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "2782:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 234,
                      "nodeType": "ExpressionStatement",
                      "src": "2782:51:1"
                    },
                    {
                      "expression": {
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 235,
                          "name": "initialized",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 197,
                          "src": "2844:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2858:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2844:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 238,
                      "nodeType": "ExpressionStatement",
                      "src": "2844:18:1"
                    }
                  ]
                },
                "documentation": {
                  "id": 198,
                  "nodeType": "StructuredDocumentation",
                  "src": "2302:197:1",
                  "text": "@dev To hide constructor warnings across solc versions due to different constructor visibility requirements and\n syntaxes, we add an initialization function that can be called only once."
                },
                "functionSelector": "1624f6c6",
                "id": 240,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "initialize",
                "nameLocation": "2513:10:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 205,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 200,
                      "mutability": "mutable",
                      "name": "name_",
                      "nameLocation": "2538:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "2524:19:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 199,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2524:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 202,
                      "mutability": "mutable",
                      "name": "symbol_",
                      "nameLocation": "2559:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "2545:21:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 201,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2545:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 204,
                      "mutability": "mutable",
                      "name": "decimals_",
                      "nameLocation": "2574:9:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "2568:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "2523:61:1"
                },
                "returnParameters": {
                  "id": 206,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "2592:0:1"
                },
                "scope": 672,
                "src": "2504:365:1",
                "stateMutability": "nonpayable",
                "virtual": false,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  64
                ],
                "body": {
                  "id": 268,
                  "nodeType": "Block",
                  "src": "3146:132:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 250,
                              "name": "_allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "3156:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 254,
                            "indexExpression": {
                              "expression": {
                                "id": 251,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3167:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3171:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3167:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3156:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 255,
                          "indexExpression": {
                            "id": 253,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3179:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3156:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 256,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "3190:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3156:40:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 258,
                      "nodeType": "ExpressionStatement",
                      "src": "3156:40:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 260,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3221:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 261,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3225:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3221:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 262,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 242,
                            "src": "3233:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 263,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 244,
                            "src": "3242:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 259,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "3212:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3212:37:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 265,
                      "nodeType": "EmitStatement",
                      "src": "3207:42:1"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3267:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 249,
                      "id": 267,
                      "nodeType": "Return",
                      "src": "3260:11:1"
                    }
                  ]
                },
                "functionSelector": "095ea7b3",
                "id": 269,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "approve",
                "nameLocation": "3066:7:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 246,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3122:8:1"
                },
                "parameters": {
                  "id": 245,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 242,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "3082:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 269,
                      "src": "3074:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 241,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3074:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 244,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3099:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 269,
                      "src": "3091:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 243,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3091:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3073:33:1"
                },
                "returnParameters": {
                  "id": 249,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 248,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 269,
                      "src": "3140:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 247,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3140:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3139:6:1"
                },
                "scope": 672,
                "src": "3057:221:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  44
                ],
                "body": {
                  "id": 312,
                  "nodeType": "Block",
                  "src": "3369:203:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 279,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3379:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 282,
                          "indexExpression": {
                            "expression": {
                              "id": 280,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3390:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3394:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3390:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3379:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 284,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3409:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 287,
                              "indexExpression": {
                                "expression": {
                                  "id": 285,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3420:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3424:6:1",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3420:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3409:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 288,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "3433:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 283,
                            "name": "_sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "3404:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3404:36:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3379:61:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 291,
                      "nodeType": "ExpressionStatement",
                      "src": "3379:61:1"
                    },
                    {
                      "expression": {
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 292,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3450:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3461:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3450:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 296,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3472:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 298,
                              "indexExpression": {
                                "id": 297,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 271,
                                "src": "3483:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3472:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 299,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 273,
                              "src": "3488:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 295,
                            "name": "_add",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "3467:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3467:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3450:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 302,
                      "nodeType": "ExpressionStatement",
                      "src": "3450:45:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 304,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3520:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 305,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3524:6:1",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3520:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 306,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3532:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 307,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "3536:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 303,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3511:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3511:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 309,
                      "nodeType": "EmitStatement",
                      "src": "3506:37:1"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3561:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 278,
                      "id": 311,
                      "nodeType": "Return",
                      "src": "3554:11:1"
                    }
                  ]
                },
                "functionSelector": "a9059cbb",
                "id": 313,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transfer",
                "nameLocation": "3293:8:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 275,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3345:8:1"
                },
                "parameters": {
                  "id": 274,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 271,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3310:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "3302:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 270,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3302:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 273,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3322:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "3314:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 272,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3314:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3301:28:1"
                },
                "returnParameters": {
                  "id": 278,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 313,
                      "src": "3363:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3363:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3362:6:1"
                },
                "scope": 672,
                "src": "3284:288:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "baseFunctions": [
                  76
                ],
                "body": {
                  "id": 384,
                  "nodeType": "Block",
                  "src": "3681:369:1",
                  "statements": [
                    {
                      "assignments": [
                        326
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 326,
                          "mutability": "mutable",
                          "name": "allowed",
                          "nameLocation": "3699:7:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 384,
                          "src": "3691:15:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 325,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3691:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 333,
                      "initialValue": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 327,
                            "name": "_allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 147,
                            "src": "3709:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 329,
                          "indexExpression": {
                            "id": 328,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3720:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3709:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 332,
                        "indexExpression": {
                          "expression": {
                            "id": 330,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3726:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3730:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3726:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3709:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "3691:46:1"
                    },
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 334,
                          "name": "allowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "3788:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "~",
                          "prefix": true,
                          "src": "3799:11:1",
                          "subExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3808:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3800:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 335,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3800:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 338,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3800:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3788:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 353,
                      "nodeType": "IfStatement",
                      "src": "3784:80:1",
                      "trueBody": {
                        "expression": {
                          "id": 351,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 341,
                                "name": "_allowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 147,
                                "src": "3812:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 345,
                              "indexExpression": {
                                "id": 342,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "3823:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3812:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 346,
                            "indexExpression": {
                              "expression": {
                                "id": 343,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3829:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3833:6:1",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3829:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3812:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 348,
                                "name": "allowed",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 326,
                                "src": "3848:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 349,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 319,
                                "src": "3857:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 347,
                              "name": "_sub",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 632,
                              "src": "3843:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3843:21:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3812:52:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 352,
                        "nodeType": "ExpressionStatement",
                        "src": "3812:52:1"
                      }
                    },
                    {
                      "expression": {
                        "id": 363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 354,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3875:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 356,
                          "indexExpression": {
                            "id": 355,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "3886:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3875:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 358,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3899:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 360,
                              "indexExpression": {
                                "id": 359,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 315,
                                "src": "3910:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3899:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 361,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "3917:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 357,
                            "name": "_sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "3894:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3894:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3875:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 364,
                      "nodeType": "ExpressionStatement",
                      "src": "3875:49:1"
                    },
                    {
                      "expression": {
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 365,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "3934:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 367,
                          "indexExpression": {
                            "id": 366,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "3945:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "3934:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 369,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "3956:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 371,
                              "indexExpression": {
                                "id": 370,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 317,
                                "src": "3967:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3956:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 372,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 319,
                              "src": "3972:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 368,
                            "name": "_add",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "3951:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3951:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3934:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 375,
                      "nodeType": "ExpressionStatement",
                      "src": "3934:45:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 377,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 315,
                            "src": "4004:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 378,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "4010:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 379,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 319,
                            "src": "4014:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 376,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "3995:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3995:26:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 381,
                      "nodeType": "EmitStatement",
                      "src": "3990:31:1"
                    },
                    {
                      "expression": {
                        "hexValue": "74727565",
                        "id": 382,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4039:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "functionReturnParameters": 324,
                      "id": 383,
                      "nodeType": "Return",
                      "src": "4032:11:1"
                    }
                  ]
                },
                "functionSelector": "23b872dd",
                "id": 385,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "transferFrom",
                "nameLocation": "3587:12:1",
                "nodeType": "FunctionDefinition",
                "overrides": {
                  "id": 321,
                  "nodeType": "OverrideSpecifier",
                  "overrides": [],
                  "src": "3657:8:1"
                },
                "parameters": {
                  "id": 320,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 315,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "3608:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "3600:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 314,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3600:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 317,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "3622:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "3614:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 316,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3614:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 319,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3634:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "3626:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3626:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3599:42:1"
                },
                "returnParameters": {
                  "id": 324,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 323,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 385,
                      "src": "3675:4:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 322,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3675:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "3674:6:1"
                },
                "scope": 672,
                "src": "3578:472:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 470,
                  "nodeType": "Block",
                  "src": "4386:1035:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 403,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "4404:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "expression": {
                                "id": 404,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4416:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4422:9:1",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4416:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4404:27:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "5045524d49545f444541444c494e455f45585049524544",
                            "id": 407,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4433:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
                              "typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
                            },
                            "value": "PERMIT_DEADLINE_EXPIRED"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_dd18cfd81b4c1281b56302a044e7f751a261543590362c41d86af048f8ed4b3e",
                              "typeString": "literal_string \"PERMIT_DEADLINE_EXPIRED\""
                            }
                          ],
                          "id": 402,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "4396:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4396:63:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 409,
                      "nodeType": "ExpressionStatement",
                      "src": "4396:63:1"
                    },
                    {
                      "assignments": [
                        411
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 411,
                          "mutability": "mutable",
                          "name": "recoveredAddress",
                          "nameLocation": "4478:16:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 470,
                          "src": "4470:24:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "typeName": {
                            "id": 410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4470:7:1",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 441,
                      "initialValue": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "1901",
                                    "id": 416,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4585:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    "value": "\u0019\u0001"
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 417,
                                      "name": "DOMAIN_SEPARATOR",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 486,
                                      "src": "4617:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                                        "typeString": "function () view returns (bytes32)"
                                      }
                                    },
                                    "id": 418,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4617:18:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                                                "id": 423,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "4775:84:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                                                  "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                                                },
                                                "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                                                  "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                                                }
                                              ],
                                              "id": 422,
                                              "name": "keccak256",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -8,
                                              "src": "4732:9:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes memory) pure returns (bytes32)"
                                              }
                                            },
                                            "id": 424,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "nameLocations": [],
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4732:157:1",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 425,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 387,
                                            "src": "4919:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 426,
                                            "name": "spender",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 389,
                                            "src": "4954:7:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 427,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 391,
                                            "src": "4991:5:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 431,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "UnaryOperation",
                                            "operator": "++",
                                            "prefix": false,
                                            "src": "5026:15:1",
                                            "subExpression": {
                                              "baseExpression": {
                                                "id": 428,
                                                "name": "nonces",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 194,
                                                "src": "5026:6:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                                  "typeString": "mapping(address => uint256)"
                                                }
                                              },
                                              "id": 430,
                                              "indexExpression": {
                                                "id": 429,
                                                "name": "owner",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 387,
                                                "src": "5033:5:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": true,
                                              "nodeType": "IndexAccess",
                                              "src": "5026:13:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          {
                                            "id": 432,
                                            "name": "deadline",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 393,
                                            "src": "5071:8:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 420,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "4692:3:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 421,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberLocation": "4696:6:1",
                                          "memberName": "encode",
                                          "nodeType": "MemberAccess",
                                          "src": "4692:10:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 433,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4692:413:1",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "id": 419,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -8,
                                      "src": "4657:9:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 434,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4657:470:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 414,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4547:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 415,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "4551:12:1",
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "4547:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 435,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4547:598:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 413,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "4520:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4520:639:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 437,
                            "name": "v",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 395,
                            "src": "5173:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          {
                            "id": 438,
                            "name": "r",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "5188:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 439,
                            "name": "s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 399,
                            "src": "5203:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 412,
                          "name": "ecrecover",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -6,
                          "src": "4497:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                          }
                        },
                        "id": 440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4497:717:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "4470:744:1"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 443,
                                "name": "recoveredAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "5233:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 446,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5261:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 445,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5253:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 444,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5253:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 447,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5253:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5233:30:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 449,
                                "name": "recoveredAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "5267:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 450,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 387,
                                "src": "5287:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5267:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5233:59:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "494e56414c49445f5349474e4552",
                            "id": 453,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5294:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
                              "typeString": "literal_string \"INVALID_SIGNER\""
                            },
                            "value": "INVALID_SIGNER"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_ba2319f5fa9f0c8e55f0d6899910b7354e6f643d1d349de47190066d85e68a1c",
                              "typeString": "literal_string \"INVALID_SIGNER\""
                            }
                          ],
                          "id": 442,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "5225:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5225:86:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 455,
                      "nodeType": "ExpressionStatement",
                      "src": "5225:86:1"
                    },
                    {
                      "expression": {
                        "id": 462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 456,
                              "name": "_allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 147,
                              "src": "5322:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 459,
                            "indexExpression": {
                              "id": 457,
                              "name": "recoveredAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 411,
                              "src": "5333:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5322:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 460,
                          "indexExpression": {
                            "id": 458,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "5351:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5322:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "id": 461,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 391,
                          "src": "5362:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5322:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 463,
                      "nodeType": "ExpressionStatement",
                      "src": "5322:45:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 465,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "5392:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 466,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "5399:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 467,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 391,
                            "src": "5408:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 464,
                          "name": "Approval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20,
                          "src": "5383:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5383:31:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 469,
                      "nodeType": "EmitStatement",
                      "src": "5378:36:1"
                    }
                  ]
                },
                "functionSelector": "d505accf",
                "id": 471,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "permit",
                "nameLocation": "4248:6:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 400,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 387,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "4263:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4255:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 386,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4255:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 389,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "4278:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4270:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 388,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4270:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 391,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "4295:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4287:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4287:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 393,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "4310:8:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4302:16:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 392,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4302:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 395,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4326:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4320:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 394,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "4320:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 397,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4337:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4329:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 396,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4329:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 399,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4348:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "4340:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 398,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4340:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "4254:96:1"
                },
                "returnParameters": {
                  "id": 401,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "4386:0:1"
                },
                "scope": 672,
                "src": "4239:1182:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 485,
                  "nodeType": "Block",
                  "src": "5493:112:1",
                  "statements": [
                    {
                      "expression": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 476,
                              "name": "_pureChainId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "5510:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                "typeString": "function () pure returns (uint256)"
                              }
                            },
                            "id": 477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5510:14:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 478,
                            "name": "INITIAL_CHAIN_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 188,
                            "src": "5528:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5510:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 481,
                            "name": "computeDomainSeparator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 516,
                            "src": "5574:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view returns (bytes32)"
                            }
                          },
                          "id": 482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5574:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "5510:88:1",
                        "trueExpression": {
                          "id": 480,
                          "name": "INITIAL_DOMAIN_SEPARATOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "5547:24:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 475,
                      "id": 484,
                      "nodeType": "Return",
                      "src": "5503:95:1"
                    }
                  ]
                },
                "functionSelector": "3644e515",
                "id": 486,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "DOMAIN_SEPARATOR",
                "nameLocation": "5436:16:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 472,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5452:2:1"
                },
                "returnParameters": {
                  "id": 475,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 486,
                      "src": "5484:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5484:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5483:9:1"
                },
                "scope": 672,
                "src": "5427:178:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "public"
              },
              {
                "body": {
                  "id": 515,
                  "nodeType": "Block",
                  "src": "5685:330:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5763:84:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    },
                                    "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                                      "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                                    }
                                  ],
                                  "id": 494,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "5753:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 496,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5753:95:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 500,
                                        "name": "_name",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 104,
                                        "src": "5882:5:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "id": 499,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5876:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 498,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5876:5:1",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 501,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5876:12:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes storage pointer"
                                    }
                                  ],
                                  "id": 497,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "5866:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 502,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5866:23:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "31",
                                    "id": 504,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5917:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                      "typeString": "literal_string \"1\""
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                                      "typeString": "literal_string \"1\""
                                    }
                                  ],
                                  "id": 503,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "5907:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 505,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5907:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 506,
                                  "name": "_pureChainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 671,
                                  "src": "5939:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                                    "typeString": "function () pure returns (uint256)"
                                  }
                                },
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5939:14:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "id": 510,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5979:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MockERC20_$672",
                                      "typeString": "contract MockERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_MockERC20_$672",
                                      "typeString": "contract MockERC20"
                                    }
                                  ],
                                  "id": 509,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5971:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 508,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5971:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 511,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5971:13:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 492,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "5725:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "5729:6:1",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "5725:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5725:273:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 491,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "5702:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5702:306:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "functionReturnParameters": 490,
                      "id": 514,
                      "nodeType": "Return",
                      "src": "5695:313:1"
                    }
                  ]
                },
                "id": 516,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "computeDomainSeparator",
                "nameLocation": "5620:22:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 487,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "5642:2:1"
                },
                "returnParameters": {
                  "id": 490,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "5676:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 488,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5676:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "5675:9:1"
                },
                "scope": 672,
                "src": "5611:404:1",
                "stateMutability": "view",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 550,
                  "nodeType": "Block",
                  "src": "6269:161:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 523,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "6279:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 525,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "6299:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 526,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "6313:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 524,
                            "name": "_add",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "6294:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6294:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6279:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 529,
                      "nodeType": "ExpressionStatement",
                      "src": "6279:41:1"
                    },
                    {
                      "expression": {
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 530,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "6330:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 532,
                          "indexExpression": {
                            "id": 531,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "6341:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6330:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 534,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "6352:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 536,
                              "indexExpression": {
                                "id": 535,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "6363:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6352:14:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 537,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "6368:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 533,
                            "name": "_add",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 611,
                            "src": "6347:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6347:28:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6330:45:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 540,
                      "nodeType": "ExpressionStatement",
                      "src": "6330:45:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 544,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6408:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6400:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 542,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6400:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6400:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 546,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "6412:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 547,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 520,
                            "src": "6416:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 541,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "6391:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6391:32:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 549,
                      "nodeType": "EmitStatement",
                      "src": "6386:37:1"
                    }
                  ]
                },
                "id": 551,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_mint",
                "nameLocation": "6218:5:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 521,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 518,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "6232:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 551,
                      "src": "6224:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6224:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6244:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 551,
                      "src": "6236:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6236:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6223:28:1"
                },
                "returnParameters": {
                  "id": 522,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6269:0:1"
                },
                "scope": 672,
                "src": "6209:221:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 585,
                  "nodeType": "Block",
                  "src": "6498:167:1",
                  "statements": [
                    {
                      "expression": {
                        "id": 567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 558,
                            "name": "_balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "6508:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 560,
                          "indexExpression": {
                            "id": 559,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "6519:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "6508:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 562,
                                "name": "_balanceOf",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "6532:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 564,
                              "indexExpression": {
                                "id": 563,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 553,
                                "src": "6543:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6532:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 565,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "6550:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 561,
                            "name": "_sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6527:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6527:30:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6508:49:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 568,
                      "nodeType": "ExpressionStatement",
                      "src": "6508:49:1"
                    },
                    {
                      "expression": {
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 569,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 137,
                          "src": "6567:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 571,
                              "name": "_totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "6587:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 572,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 555,
                              "src": "6601:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 570,
                            "name": "_sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 632,
                            "src": "6582:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6582:26:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6567:41:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 575,
                      "nodeType": "ExpressionStatement",
                      "src": "6567:41:1"
                    },
                    {
                      "eventCall": {
                        "arguments": [
                          {
                            "id": 577,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "6633:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6647:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 579,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6639:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 578,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6639:7:1",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6639:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 582,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "6651:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 576,
                          "name": "Transfer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "6624:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6624:34:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 584,
                      "nodeType": "EmitStatement",
                      "src": "6619:39:1"
                    }
                  ]
                },
                "id": 586,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_burn",
                "nameLocation": "6445:5:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 556,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 553,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "6459:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 586,
                      "src": "6451:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 552,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6451:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 555,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "6473:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 586,
                      "src": "6465:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6465:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6450:30:1"
                },
                "returnParameters": {
                  "id": 557,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "6498:0:1"
                },
                "scope": 672,
                "src": "6436:229:1",
                "stateMutability": "nonpayable",
                "virtual": true,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 610,
                  "nodeType": "Block",
                  "src": "6927:105:1",
                  "statements": [
                    {
                      "assignments": [
                        596
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 596,
                          "mutability": "mutable",
                          "name": "c",
                          "nameLocation": "6945:1:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 610,
                          "src": "6937:9:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 595,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "6937:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 600,
                      "initialValue": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 597,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 588,
                          "src": "6949:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 598,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 590,
                          "src": "6953:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6949:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "6937:17:1"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 602,
                              "name": "c",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 596,
                              "src": "6972:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 603,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 588,
                              "src": "6977:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6972:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a206164646974696f6e206f766572666c6f77",
                            "id": 605,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6980:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_74f676cd2e283c0e66b6d0717943544332197bd372b775cf0e7a53907f5c5d11",
                              "typeString": "literal_string \"ERC20: addition overflow\""
                            },
                            "value": "ERC20: addition overflow"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_74f676cd2e283c0e66b6d0717943544332197bd372b775cf0e7a53907f5c5d11",
                              "typeString": "literal_string \"ERC20: addition overflow\""
                            }
                          ],
                          "id": 601,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "6964:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6964:43:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 607,
                      "nodeType": "ExpressionStatement",
                      "src": "6964:43:1"
                    },
                    {
                      "expression": {
                        "id": 608,
                        "name": "c",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 596,
                        "src": "7024:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 594,
                      "id": 609,
                      "nodeType": "Return",
                      "src": "7017:8:1"
                    }
                  ]
                },
                "id": 611,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_add",
                "nameLocation": "6868:4:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 591,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 588,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "6881:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "6873:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 587,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6873:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 590,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "6892:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "6884:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 589,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6884:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6872:22:1"
                },
                "returnParameters": {
                  "id": 594,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 593,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 611,
                      "src": "6918:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 592,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6918:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "6917:9:1"
                },
                "scope": 672,
                "src": "6859:173:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 631,
                  "nodeType": "Block",
                  "src": "7106:86:1",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 621,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "7124:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "id": 622,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 615,
                              "src": "7129:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7124:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "hexValue": "45524332303a207375627472616374696f6e20756e646572666c6f77",
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7132:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_51030fc2fc57ce7527c9e329debac907fc652c2c136d851e4f42cbce1710c274",
                              "typeString": "literal_string \"ERC20: subtraction underflow\""
                            },
                            "value": "ERC20: subtraction underflow"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_51030fc2fc57ce7527c9e329debac907fc652c2c136d851e4f42cbce1710c274",
                              "typeString": "literal_string \"ERC20: subtraction underflow\""
                            }
                          ],
                          "id": 620,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            -18,
                            -18
                          ],
                          "referencedDeclaration": -18,
                          "src": "7116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7116:47:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 626,
                      "nodeType": "ExpressionStatement",
                      "src": "7116:47:1"
                    },
                    {
                      "expression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 627,
                          "name": "a",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 613,
                          "src": "7180:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 628,
                          "name": "b",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 615,
                          "src": "7184:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7180:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "functionReturnParameters": 619,
                      "id": 630,
                      "nodeType": "Return",
                      "src": "7173:12:1"
                    }
                  ]
                },
                "id": 632,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_sub",
                "nameLocation": "7047:4:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 616,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 613,
                      "mutability": "mutable",
                      "name": "a",
                      "nameLocation": "7060:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7052:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 612,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7052:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 615,
                      "mutability": "mutable",
                      "name": "b",
                      "nameLocation": "7071:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7063:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 614,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7063:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7051:22:1"
                },
                "returnParameters": {
                  "id": 619,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 618,
                      "mutability": "mutable",
                      "name": "",
                      "nameLocation": "-1:-1:-1",
                      "nodeType": "VariableDeclaration",
                      "scope": 632,
                      "src": "7097:7:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 617,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7097:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7096:9:1"
                },
                "scope": 672,
                "src": "7038:154:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "internal"
              },
              {
                "body": {
                  "id": 643,
                  "nodeType": "Block",
                  "src": "7798:213:1",
                  "statements": [
                    {
                      "AST": {
                        "nativeSrc": "7893:44:1",
                        "nodeType": "YulBlock",
                        "src": "7893:44:1",
                        "statements": [
                          {
                            "nativeSrc": "7907:20:1",
                            "nodeType": "YulAssignment",
                            "src": "7907:20:1",
                            "value": {
                              "arguments": [],
                              "functionName": {
                                "name": "chainid",
                                "nativeSrc": "7918:7:1",
                                "nodeType": "YulIdentifier",
                                "src": "7918:7:1"
                              },
                              "nativeSrc": "7918:9:1",
                              "nodeType": "YulFunctionCall",
                              "src": "7918:9:1"
                            },
                            "variableNames": [
                              {
                                "name": "chainId",
                                "nativeSrc": "7907:7:1",
                                "nodeType": "YulIdentifier",
                                "src": "7907:7:1"
                              }
                            ]
                          }
                        ]
                      },
                      "evmVersion": "shanghai",
                      "externalReferences": [
                        {
                          "declaration": 635,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "7907:7:1",
                          "valueSize": 1
                        }
                      ],
                      "id": 637,
                      "nodeType": "InlineAssembly",
                      "src": "7884:53:1"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 640,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "7955:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$672",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$672",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7947:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 638,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7947:7:1",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7947:13:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 642,
                      "nodeType": "ExpressionStatement",
                      "src": "7947:13:1"
                    }
                  ]
                },
                "id": 644,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_viewChainId",
                "nameLocation": "7744:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 633,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "7756:2:1"
                },
                "returnParameters": {
                  "id": 636,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "7789:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 644,
                      "src": "7781:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7781:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "7780:17:1"
                },
                "scope": 672,
                "src": "7735:276:1",
                "stateMutability": "view",
                "virtual": false,
                "visibility": "private"
              },
              {
                "body": {
                  "id": 670,
                  "nodeType": "Block",
                  "src": "8080:237:1",
                  "statements": [
                    {
                      "assignments": [
                        654
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 654,
                          "mutability": "mutable",
                          "name": "fnIn",
                          "nameLocation": "8133:4:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 670,
                          "src": "8090:47:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          },
                          "typeName": {
                            "id": 653,
                            "nodeType": "FunctionTypeName",
                            "parameterTypes": {
                              "id": 649,
                              "nodeType": "ParameterList",
                              "parameters": [],
                              "src": "8098:2:1"
                            },
                            "returnParameterTypes": {
                              "id": 652,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 651,
                                  "mutability": "mutable",
                                  "name": "",
                                  "nameLocation": "-1:-1:-1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 653,
                                  "src": "8124:7:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 650,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8124:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "8123:9:1"
                            },
                            "src": "8090:47:1",
                            "stateMutability": "view",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            },
                            "visibility": "internal"
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 656,
                      "initialValue": {
                        "id": 655,
                        "name": "_viewChainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "8140:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8090:62:1"
                    },
                    {
                      "assignments": [
                        662
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 662,
                          "mutability": "mutable",
                          "name": "pureChainId",
                          "nameLocation": "8205:11:1",
                          "nodeType": "VariableDeclaration",
                          "scope": 670,
                          "src": "8162:54:1",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                            "typeString": "function () pure returns (uint256)"
                          },
                          "typeName": {
                            "id": 661,
                            "nodeType": "FunctionTypeName",
                            "parameterTypes": {
                              "id": 657,
                              "nodeType": "ParameterList",
                              "parameters": [],
                              "src": "8170:2:1"
                            },
                            "returnParameterTypes": {
                              "id": 660,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 659,
                                  "mutability": "mutable",
                                  "name": "",
                                  "nameLocation": "-1:-1:-1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 661,
                                  "src": "8196:7:1",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 658,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8196:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "8195:9:1"
                            },
                            "src": "8162:54:1",
                            "stateMutability": "pure",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            },
                            "visibility": "internal"
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 663,
                      "nodeType": "VariableDeclarationStatement",
                      "src": "8162:54:1"
                    },
                    {
                      "AST": {
                        "nativeSrc": "8235:43:1",
                        "nodeType": "YulBlock",
                        "src": "8235:43:1",
                        "statements": [
                          {
                            "nativeSrc": "8249:19:1",
                            "nodeType": "YulAssignment",
                            "src": "8249:19:1",
                            "value": {
                              "name": "fnIn",
                              "nativeSrc": "8264:4:1",
                              "nodeType": "YulIdentifier",
                              "src": "8264:4:1"
                            },
                            "variableNames": [
                              {
                                "name": "pureChainId",
                                "nativeSrc": "8249:11:1",
                                "nodeType": "YulIdentifier",
                                "src": "8249:11:1"
                              }
                            ]
                          }
                        ]
                      },
                      "evmVersion": "shanghai",
                      "externalReferences": [
                        {
                          "declaration": 654,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "8264:4:1",
                          "valueSize": 1
                        },
                        {
                          "declaration": 662,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "8249:11:1",
                          "valueSize": 1
                        }
                      ],
                      "id": 664,
                      "nodeType": "InlineAssembly",
                      "src": "8226:52:1"
                    },
                    {
                      "expression": {
                        "id": 668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 665,
                          "name": "chainId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 647,
                          "src": "8287:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 666,
                            "name": "pureChainId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 662,
                            "src": "8297:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                              "typeString": "function () pure returns (uint256)"
                            }
                          },
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8297:13:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8287:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 669,
                      "nodeType": "ExpressionStatement",
                      "src": "8287:23:1"
                    }
                  ]
                },
                "id": 671,
                "implemented": true,
                "kind": "function",
                "modifiers": [],
                "name": "_pureChainId",
                "nameLocation": "8026:12:1",
                "nodeType": "FunctionDefinition",
                "parameters": {
                  "id": 645,
                  "nodeType": "ParameterList",
                  "parameters": [],
                  "src": "8038:2:1"
                },
                "returnParameters": {
                  "id": 648,
                  "nodeType": "ParameterList",
                  "parameters": [
                    {
                      "constant": false,
                      "id": 647,
                      "mutability": "mutable",
                      "name": "chainId",
                      "nameLocation": "8071:7:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 671,
                      "src": "8063:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 646,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8063:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "src": "8062:17:1"
                },
                "scope": 672,
                "src": "8017:300:1",
                "stateMutability": "pure",
                "virtual": false,
                "visibility": "private"
              }
            ],
            "scope": 673,
            "src": "369:7950:1",
            "usedErrors": [],
            "usedEvents": [
              11,
              20
            ]
          }
        ],
        "src": "32:8288:1"
      }
    }
  },
  "errors": [
    {
      "component": "general",
      "errorCode": null,
      "formattedMessage": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘\n--> lib/forge-std/src/mocks/MockERC20.sol\n",
      "message": "\n┌──────────────────────────────────────────────────────────────────────────────────────────────────┐\n│ Warning: It looks like you are using 'ecrecover' to validate a signature of a user account.      │\n│ zkSync Era comes with native account abstraction support, therefore it is highly recommended NOT │\n│ to rely on the fact that the account has an ECDSA private key attached to it since accounts might│\n│ implement other signature schemes.                                                               │\n│ Read more about Account Abstraction at https://v2-docs.zksync.io/dev/developer-guides/aa.html    │\n└──────────────────────────────────────────────────────────────────────────────────────────────────┘",
      "severity": "warning",
      "sourceLocation": {
        "file": "1",
        "start": 4497,
        "end": 5214
      },
      "type": "Warning"
    }
  ],
  "version": "0.8.24",
  "long_version": "0.8.24+commit.e11b9ed9.Darwin.appleclang",
  "zk_version": "1.4.1"
}